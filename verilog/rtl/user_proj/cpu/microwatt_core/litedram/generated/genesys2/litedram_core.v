// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : litedram_core.v
// Device     : 
// LiteX sha1 : bc1f1f52b
// Date       : 2025-02-15 19:54:43
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module litedram_core (
    input  wire          clk,
    output wire   [14:0] ddram_a,
    output wire    [2:0] ddram_ba,
    output wire          ddram_cas_n,
    output wire          ddram_cke,
    output wire          ddram_clk_n,
    output wire          ddram_clk_p,
    output wire          ddram_cs_n,
    output wire    [3:0] ddram_dm,
    inout  wire   [31:0] ddram_dq,
    inout  wire    [3:0] ddram_dqs_n,
    inout  wire    [3:0] ddram_dqs_p,
    output wire          ddram_odt,
    output wire          ddram_ras_n,
    output wire          ddram_reset_n,
    output wire          ddram_we_n,
    output wire          init_done,
    output wire          init_error,
    output wire          pll_locked,
    input  wire          rst,
    output wire          user_clk,
    input  wire   [24:0] user_port_native_0_cmd_addr,
    output wire          user_port_native_0_cmd_ready,
    input  wire          user_port_native_0_cmd_valid,
    input  wire          user_port_native_0_cmd_we,
    output wire  [255:0] user_port_native_0_rdata_data,
    input  wire          user_port_native_0_rdata_ready,
    output wire          user_port_native_0_rdata_valid,
    input  wire  [255:0] user_port_native_0_wdata_data,
    output wire          user_port_native_0_wdata_ready,
    input  wire          user_port_native_0_wdata_valid,
    input  wire   [31:0] user_port_native_0_wdata_we,
    output wire          user_rst,
    output wire          wb_ctrl_ack,
    input  wire   [29:0] wb_ctrl_adr,
    input  wire    [1:0] wb_ctrl_bte,
    input  wire    [2:0] wb_ctrl_cti,
    input  wire          wb_ctrl_cyc,
    output wire   [31:0] wb_ctrl_dat_r,
    input  wire   [31:0] wb_ctrl_dat_w,
    output wire          wb_ctrl_err,
    input  wire    [3:0] wb_ctrl_sel,
    input  wire          wb_ctrl_stb,
    input  wire          wb_ctrl_we
);


//------------------------------------------------------------------------------
// Hierarchy
//------------------------------------------------------------------------------

/*
LiteDRAMCore
└─── bus (SoCBusHandler)
│    └─── _interconnect (InterconnectPointToPoint)
└─── csr (SoCCSRHandler)
└─── irq (SoCIRQHandler)
└─── cpu (CPUNone)
└─── crg (LiteDRAMS7DDRPHYCRG)
│    └─── pll (S7PLL)
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [PLLE2_ADV]
│    │    └─── [BUFG]
│    │    └─── [BUFG]
│    │    └─── [BUFG]
│    │    └─── [BUFG]
│    └─── idelayctrl (S7IDELAYCTRL)
│    │    └─── [IDELAYCTRL]
└─── ddrphy (K7DDRPHY)
│    └─── tappeddelayline_0* (TappedDelayLine)
│    └─── dqspattern_0* (DQSPattern)
│    └─── bitslip_0* (BitSlip)
│    └─── bitslip_1* (BitSlip)
│    └─── bitslip_2* (BitSlip)
│    └─── bitslip_3* (BitSlip)
│    └─── bitslip_4* (BitSlip)
│    └─── bitslip_5* (BitSlip)
│    └─── bitslip_6* (BitSlip)
│    └─── bitslip_7* (BitSlip)
│    └─── tappeddelayline_1* (TappedDelayLine)
│    └─── bitslip_8* (BitSlip)
│    └─── bitslip_9* (BitSlip)
│    └─── bitslip_10* (BitSlip)
│    └─── bitslip_11* (BitSlip)
│    └─── bitslip_12* (BitSlip)
│    └─── bitslip_13* (BitSlip)
│    └─── bitslip_14* (BitSlip)
│    └─── bitslip_15* (BitSlip)
│    └─── bitslip_16* (BitSlip)
│    └─── bitslip_17* (BitSlip)
│    └─── bitslip_18* (BitSlip)
│    └─── bitslip_19* (BitSlip)
│    └─── bitslip_20* (BitSlip)
│    └─── bitslip_21* (BitSlip)
│    └─── bitslip_22* (BitSlip)
│    └─── bitslip_23* (BitSlip)
│    └─── bitslip_24* (BitSlip)
│    └─── bitslip_25* (BitSlip)
│    └─── bitslip_26* (BitSlip)
│    └─── bitslip_27* (BitSlip)
│    └─── bitslip_28* (BitSlip)
│    └─── bitslip_29* (BitSlip)
│    └─── bitslip_30* (BitSlip)
│    └─── bitslip_31* (BitSlip)
│    └─── bitslip_32* (BitSlip)
│    └─── bitslip_33* (BitSlip)
│    └─── bitslip_34* (BitSlip)
│    └─── bitslip_35* (BitSlip)
│    └─── bitslip_36* (BitSlip)
│    └─── bitslip_37* (BitSlip)
│    └─── bitslip_38* (BitSlip)
│    └─── bitslip_39* (BitSlip)
│    └─── bitslip_40* (BitSlip)
│    └─── bitslip_41* (BitSlip)
│    └─── bitslip_42* (BitSlip)
│    └─── bitslip_43* (BitSlip)
│    └─── bitslip_44* (BitSlip)
│    └─── bitslip_45* (BitSlip)
│    └─── bitslip_46* (BitSlip)
│    └─── bitslip_47* (BitSlip)
│    └─── bitslip_48* (BitSlip)
│    └─── bitslip_49* (BitSlip)
│    └─── bitslip_50* (BitSlip)
│    └─── bitslip_51* (BitSlip)
│    └─── bitslip_52* (BitSlip)
│    └─── bitslip_53* (BitSlip)
│    └─── bitslip_54* (BitSlip)
│    └─── bitslip_55* (BitSlip)
│    └─── bitslip_56* (BitSlip)
│    └─── bitslip_57* (BitSlip)
│    └─── bitslip_58* (BitSlip)
│    └─── bitslip_59* (BitSlip)
│    └─── bitslip_60* (BitSlip)
│    └─── bitslip_61* (BitSlip)
│    └─── bitslip_62* (BitSlip)
│    └─── bitslip_63* (BitSlip)
│    └─── bitslip_64* (BitSlip)
│    └─── bitslip_65* (BitSlip)
│    └─── bitslip_66* (BitSlip)
│    └─── bitslip_67* (BitSlip)
│    └─── bitslip_68* (BitSlip)
│    └─── bitslip_69* (BitSlip)
│    └─── bitslip_70* (BitSlip)
│    └─── bitslip_71* (BitSlip)
│    └─── tappeddelayline_2* (TappedDelayLine)
│    └─── tappeddelayline_3* (TappedDelayLine)
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OBUFDS]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
└─── sdram (LiteDRAMCore)
│    └─── dfii (DFIInjector)
│    │    └─── pi0 (PhaseInjector)
│    │    └─── pi1 (PhaseInjector)
│    │    └─── pi2 (PhaseInjector)
│    │    └─── pi3 (PhaseInjector)
│    └─── controller (LiteDRAMController)
│    │    └─── refresher (Refresher)
│    │    │    └─── timer (RefreshTimer)
│    │    │    └─── postponer (RefreshPostponer)
│    │    │    └─── sequencer (RefreshSequencer)
│    │    │    │    └─── refreshexecuter_0* (RefreshExecuter)
│    │    │    └─── zqcs_timer (RefreshTimer)
│    │    │    └─── zqs_executer (ZQCSExecuter)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_0* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_1* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_2* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_3* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_4* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_5* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_6* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_7* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── multiplexer (Multiplexer)
│    │    │    └─── choose_cmd (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── choose_req (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── _steerer_0* (_Steerer)
│    │    │    └─── trrdcon (tXXDController)
│    │    │    └─── tfawcon (tFAWController)
│    │    │    └─── tccdcon (tXXDController)
│    │    │    └─── twtrcon (tXXDController)
│    │    │    └─── fsm (FSM)
│    └─── crossbar (LiteDRAMCrossbar)
│    │    └─── roundrobin_0* (RoundRobin)
│    │    └─── roundrobin_1* (RoundRobin)
│    │    └─── roundrobin_2* (RoundRobin)
│    │    └─── roundrobin_3* (RoundRobin)
│    │    └─── roundrobin_4* (RoundRobin)
│    │    └─── roundrobin_5* (RoundRobin)
│    │    └─── roundrobin_6* (RoundRobin)
│    │    └─── roundrobin_7* (RoundRobin)
└─── ddrctrl (LiteDRAMCoreControl)
└─── csr_bridge (Wishbone2CSR)
│    └─── fsm (FSM)
└─── csr_bankarray (CSRBankArray)
│    └─── csrbank_0* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    └─── csrbank_1* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstorage_5* (CSRStorage)
│    └─── csrbank_2* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_5* (CSRStorage)
│    │    └─── csrstorage_6* (CSRStorage)
│    │    └─── csrstorage_7* (CSRStorage)
│    │    └─── csrstorage_8* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_9* (CSRStorage)
│    │    └─── csrstorage_10* (CSRStorage)
│    │    └─── csrstorage_11* (CSRStorage)
│    │    └─── csrstorage_12* (CSRStorage)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_13* (CSRStorage)
│    │    └─── csrstorage_14* (CSRStorage)
│    │    └─── csrstorage_15* (CSRStorage)
│    │    └─── csrstorage_16* (CSRStorage)
│    │    └─── csrstatus_3* (CSRStatus)
└─── csr_interconnect (InterconnectShared)
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
* : Generated name.
[]: BlackBox.
*/

//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire   [13:0] builder_adr;
reg     [3:0] builder_bankmachine0_next_state = 4'd0;
reg     [3:0] builder_bankmachine0_state = 4'd0;
reg     [3:0] builder_bankmachine1_next_state = 4'd0;
reg     [3:0] builder_bankmachine1_state = 4'd0;
reg     [3:0] builder_bankmachine2_next_state = 4'd0;
reg     [3:0] builder_bankmachine2_state = 4'd0;
reg     [3:0] builder_bankmachine3_next_state = 4'd0;
reg     [3:0] builder_bankmachine3_state = 4'd0;
reg     [3:0] builder_bankmachine4_next_state = 4'd0;
reg     [3:0] builder_bankmachine4_state = 4'd0;
reg     [3:0] builder_bankmachine5_next_state = 4'd0;
reg     [3:0] builder_bankmachine5_state = 4'd0;
reg     [3:0] builder_bankmachine6_next_state = 4'd0;
reg     [3:0] builder_bankmachine6_state = 4'd0;
reg     [3:0] builder_bankmachine7_next_state = 4'd0;
reg     [3:0] builder_bankmachine7_state = 4'd0;
wire          builder_csrbank0_init_done0_r;
reg           builder_csrbank0_init_done0_re = 1'd0;
wire          builder_csrbank0_init_done0_w;
reg           builder_csrbank0_init_done0_we = 1'd0;
wire          builder_csrbank0_init_error0_r;
reg           builder_csrbank0_init_error0_re = 1'd0;
wire          builder_csrbank0_init_error0_w;
reg           builder_csrbank0_init_error0_we = 1'd0;
wire          builder_csrbank0_sel;
wire    [3:0] builder_csrbank1_dly_sel0_r;
reg           builder_csrbank1_dly_sel0_re = 1'd0;
wire    [3:0] builder_csrbank1_dly_sel0_w;
reg           builder_csrbank1_dly_sel0_we = 1'd0;
wire    [4:0] builder_csrbank1_half_sys8x_taps0_r;
reg           builder_csrbank1_half_sys8x_taps0_re = 1'd0;
wire    [4:0] builder_csrbank1_half_sys8x_taps0_w;
reg           builder_csrbank1_half_sys8x_taps0_we = 1'd0;
wire    [1:0] builder_csrbank1_rdphase0_r;
reg           builder_csrbank1_rdphase0_re = 1'd0;
wire    [1:0] builder_csrbank1_rdphase0_w;
reg           builder_csrbank1_rdphase0_we = 1'd0;
wire          builder_csrbank1_rst0_r;
reg           builder_csrbank1_rst0_re = 1'd0;
wire          builder_csrbank1_rst0_w;
reg           builder_csrbank1_rst0_we = 1'd0;
wire          builder_csrbank1_sel;
wire          builder_csrbank1_wlevel_en0_r;
reg           builder_csrbank1_wlevel_en0_re = 1'd0;
wire          builder_csrbank1_wlevel_en0_w;
reg           builder_csrbank1_wlevel_en0_we = 1'd0;
wire    [1:0] builder_csrbank1_wrphase0_r;
reg           builder_csrbank1_wrphase0_re = 1'd0;
wire    [1:0] builder_csrbank1_wrphase0_w;
reg           builder_csrbank1_wrphase0_we = 1'd0;
wire    [3:0] builder_csrbank2_dfii_control0_r;
reg           builder_csrbank2_dfii_control0_re = 1'd0;
wire    [3:0] builder_csrbank2_dfii_control0_w;
reg           builder_csrbank2_dfii_control0_we = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi0_address0_r;
reg           builder_csrbank2_dfii_pi0_address0_re = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi0_address0_w;
reg           builder_csrbank2_dfii_pi0_address0_we = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi0_baddress0_r;
reg           builder_csrbank2_dfii_pi0_baddress0_re = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi0_baddress0_w;
reg           builder_csrbank2_dfii_pi0_baddress0_we = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi0_command0_r;
reg           builder_csrbank2_dfii_pi0_command0_re = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi0_command0_w;
reg           builder_csrbank2_dfii_pi0_command0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_rddata0_r;
reg           builder_csrbank2_dfii_pi0_rddata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_rddata0_w;
reg           builder_csrbank2_dfii_pi0_rddata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_rddata1_r;
reg           builder_csrbank2_dfii_pi0_rddata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_rddata1_w;
reg           builder_csrbank2_dfii_pi0_rddata1_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_wrdata0_r;
reg           builder_csrbank2_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_wrdata0_w;
reg           builder_csrbank2_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_wrdata1_r;
reg           builder_csrbank2_dfii_pi0_wrdata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi0_wrdata1_w;
reg           builder_csrbank2_dfii_pi0_wrdata1_we = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi1_address0_r;
reg           builder_csrbank2_dfii_pi1_address0_re = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi1_address0_w;
reg           builder_csrbank2_dfii_pi1_address0_we = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi1_baddress0_r;
reg           builder_csrbank2_dfii_pi1_baddress0_re = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi1_baddress0_w;
reg           builder_csrbank2_dfii_pi1_baddress0_we = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi1_command0_r;
reg           builder_csrbank2_dfii_pi1_command0_re = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi1_command0_w;
reg           builder_csrbank2_dfii_pi1_command0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_rddata0_r;
reg           builder_csrbank2_dfii_pi1_rddata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_rddata0_w;
reg           builder_csrbank2_dfii_pi1_rddata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_rddata1_r;
reg           builder_csrbank2_dfii_pi1_rddata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_rddata1_w;
reg           builder_csrbank2_dfii_pi1_rddata1_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_wrdata0_r;
reg           builder_csrbank2_dfii_pi1_wrdata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_wrdata0_w;
reg           builder_csrbank2_dfii_pi1_wrdata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_wrdata1_r;
reg           builder_csrbank2_dfii_pi1_wrdata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi1_wrdata1_w;
reg           builder_csrbank2_dfii_pi1_wrdata1_we = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi2_address0_r;
reg           builder_csrbank2_dfii_pi2_address0_re = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi2_address0_w;
reg           builder_csrbank2_dfii_pi2_address0_we = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi2_baddress0_r;
reg           builder_csrbank2_dfii_pi2_baddress0_re = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi2_baddress0_w;
reg           builder_csrbank2_dfii_pi2_baddress0_we = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi2_command0_r;
reg           builder_csrbank2_dfii_pi2_command0_re = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi2_command0_w;
reg           builder_csrbank2_dfii_pi2_command0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_rddata0_r;
reg           builder_csrbank2_dfii_pi2_rddata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_rddata0_w;
reg           builder_csrbank2_dfii_pi2_rddata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_rddata1_r;
reg           builder_csrbank2_dfii_pi2_rddata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_rddata1_w;
reg           builder_csrbank2_dfii_pi2_rddata1_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_wrdata0_r;
reg           builder_csrbank2_dfii_pi2_wrdata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_wrdata0_w;
reg           builder_csrbank2_dfii_pi2_wrdata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_wrdata1_r;
reg           builder_csrbank2_dfii_pi2_wrdata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi2_wrdata1_w;
reg           builder_csrbank2_dfii_pi2_wrdata1_we = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi3_address0_r;
reg           builder_csrbank2_dfii_pi3_address0_re = 1'd0;
wire   [14:0] builder_csrbank2_dfii_pi3_address0_w;
reg           builder_csrbank2_dfii_pi3_address0_we = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi3_baddress0_r;
reg           builder_csrbank2_dfii_pi3_baddress0_re = 1'd0;
wire    [2:0] builder_csrbank2_dfii_pi3_baddress0_w;
reg           builder_csrbank2_dfii_pi3_baddress0_we = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi3_command0_r;
reg           builder_csrbank2_dfii_pi3_command0_re = 1'd0;
wire    [7:0] builder_csrbank2_dfii_pi3_command0_w;
reg           builder_csrbank2_dfii_pi3_command0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_rddata0_r;
reg           builder_csrbank2_dfii_pi3_rddata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_rddata0_w;
reg           builder_csrbank2_dfii_pi3_rddata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_rddata1_r;
reg           builder_csrbank2_dfii_pi3_rddata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_rddata1_w;
reg           builder_csrbank2_dfii_pi3_rddata1_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_wrdata0_r;
reg           builder_csrbank2_dfii_pi3_wrdata0_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_wrdata0_w;
reg           builder_csrbank2_dfii_pi3_wrdata0_we = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_wrdata1_r;
reg           builder_csrbank2_dfii_pi3_wrdata1_re = 1'd0;
wire   [31:0] builder_csrbank2_dfii_pi3_wrdata1_w;
reg           builder_csrbank2_dfii_pi3_wrdata1_we = 1'd0;
wire          builder_csrbank2_sel;
wire   [31:0] builder_dat_r;
wire   [31:0] builder_dat_w;
reg           builder_interface0_ack = 1'd0;
wire   [29:0] builder_interface0_adr;
wire   [13:0] builder_interface0_bank_bus_adr;
reg    [31:0] builder_interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_interface0_bank_bus_dat_w;
wire          builder_interface0_bank_bus_re;
wire          builder_interface0_bank_bus_we;
wire    [1:0] builder_interface0_bte;
wire    [2:0] builder_interface0_cti;
wire          builder_interface0_cyc;
reg    [31:0] builder_interface0_dat_r = 32'd0;
wire   [31:0] builder_interface0_dat_w;
reg           builder_interface0_err = 1'd0;
wire    [3:0] builder_interface0_sel;
wire          builder_interface0_stb;
wire          builder_interface0_we;
reg    [13:0] builder_interface1_adr = 14'd0;
reg    [13:0] builder_interface1_adr_next_value1 = 14'd0;
reg           builder_interface1_adr_next_value_ce1 = 1'd0;
wire   [13:0] builder_interface1_bank_bus_adr;
reg    [31:0] builder_interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_interface1_bank_bus_dat_w;
wire          builder_interface1_bank_bus_re;
wire          builder_interface1_bank_bus_we;
wire   [31:0] builder_interface1_dat_r;
reg    [31:0] builder_interface1_dat_w = 32'd0;
reg    [31:0] builder_interface1_dat_w_next_value0 = 32'd0;
reg           builder_interface1_dat_w_next_value_ce0 = 1'd0;
reg           builder_interface1_re = 1'd0;
reg           builder_interface1_re_next_value2 = 1'd0;
reg           builder_interface1_re_next_value_ce2 = 1'd0;
reg           builder_interface1_we = 1'd0;
reg           builder_interface1_we_next_value3 = 1'd0;
reg           builder_interface1_we_next_value_ce3 = 1'd0;
wire   [13:0] builder_interface2_bank_bus_adr;
reg    [31:0] builder_interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_interface2_bank_bus_dat_w;
wire          builder_interface2_bank_bus_re;
wire          builder_interface2_bank_bus_we;
reg           builder_locked0 = 1'd0;
reg           builder_locked1 = 1'd0;
reg           builder_locked2 = 1'd0;
reg           builder_locked3 = 1'd0;
reg           builder_locked4 = 1'd0;
reg           builder_locked5 = 1'd0;
reg           builder_locked6 = 1'd0;
reg           builder_locked7 = 1'd0;
reg     [3:0] builder_multiplexer_next_state = 4'd0;
reg     [3:0] builder_multiplexer_state = 4'd0;
reg           builder_new_master_rdata_valid0 = 1'd0;
reg           builder_new_master_rdata_valid1 = 1'd0;
reg           builder_new_master_rdata_valid2 = 1'd0;
reg           builder_new_master_rdata_valid3 = 1'd0;
reg           builder_new_master_rdata_valid4 = 1'd0;
reg           builder_new_master_rdata_valid5 = 1'd0;
reg           builder_new_master_rdata_valid6 = 1'd0;
reg           builder_new_master_rdata_valid7 = 1'd0;
reg           builder_new_master_rdata_valid8 = 1'd0;
reg           builder_new_master_wdata_ready0 = 1'd0;
reg           builder_new_master_wdata_ready1 = 1'd0;
reg     [1:0] builder_next_state = 2'd0;
wire          builder_pll_fb;
wire          builder_re;
reg     [1:0] builder_refresher_next_state = 2'd0;
reg     [1:0] builder_refresher_state = 2'd0;
wire          builder_reset0;
wire          builder_reset1;
wire          builder_reset2;
wire          builder_reset3;
wire          builder_reset4;
wire          builder_reset5;
wire          builder_reset6;
wire          builder_reset7;
reg           builder_rhs_self0 = 1'd0;
reg    [14:0] builder_rhs_self1 = 15'd0;
reg           builder_rhs_self10 = 1'd0;
reg           builder_rhs_self11 = 1'd0;
reg    [21:0] builder_rhs_self12 = 22'd0;
reg           builder_rhs_self13 = 1'd0;
reg           builder_rhs_self14 = 1'd0;
reg    [21:0] builder_rhs_self15 = 22'd0;
reg           builder_rhs_self16 = 1'd0;
reg           builder_rhs_self17 = 1'd0;
reg    [21:0] builder_rhs_self18 = 22'd0;
reg           builder_rhs_self19 = 1'd0;
reg     [2:0] builder_rhs_self2 = 3'd0;
reg           builder_rhs_self20 = 1'd0;
reg    [21:0] builder_rhs_self21 = 22'd0;
reg           builder_rhs_self22 = 1'd0;
reg           builder_rhs_self23 = 1'd0;
reg    [21:0] builder_rhs_self24 = 22'd0;
reg           builder_rhs_self25 = 1'd0;
reg           builder_rhs_self26 = 1'd0;
reg    [21:0] builder_rhs_self27 = 22'd0;
reg           builder_rhs_self28 = 1'd0;
reg           builder_rhs_self29 = 1'd0;
reg           builder_rhs_self3 = 1'd0;
reg    [21:0] builder_rhs_self30 = 22'd0;
reg           builder_rhs_self31 = 1'd0;
reg           builder_rhs_self32 = 1'd0;
reg    [21:0] builder_rhs_self33 = 22'd0;
reg           builder_rhs_self34 = 1'd0;
reg           builder_rhs_self35 = 1'd0;
reg           builder_rhs_self4 = 1'd0;
reg           builder_rhs_self5 = 1'd0;
reg           builder_rhs_self6 = 1'd0;
reg    [14:0] builder_rhs_self7 = 15'd0;
reg     [2:0] builder_rhs_self8 = 3'd0;
reg           builder_rhs_self9 = 1'd0;
wire          builder_roundrobin0_ce;
wire          builder_roundrobin0_grant;
wire          builder_roundrobin0_request;
wire          builder_roundrobin1_ce;
wire          builder_roundrobin1_grant;
wire          builder_roundrobin1_request;
wire          builder_roundrobin2_ce;
wire          builder_roundrobin2_grant;
wire          builder_roundrobin2_request;
wire          builder_roundrobin3_ce;
wire          builder_roundrobin3_grant;
wire          builder_roundrobin3_request;
wire          builder_roundrobin4_ce;
wire          builder_roundrobin4_grant;
wire          builder_roundrobin4_request;
wire          builder_roundrobin5_ce;
wire          builder_roundrobin5_grant;
wire          builder_roundrobin5_request;
wire          builder_roundrobin6_ce;
wire          builder_roundrobin6_grant;
wire          builder_roundrobin6_request;
wire          builder_roundrobin7_ce;
wire          builder_roundrobin7_grant;
wire          builder_roundrobin7_request;
reg     [2:0] builder_self0 = 3'd0;
reg    [14:0] builder_self1 = 15'd0;
reg           builder_self10 = 1'd0;
reg           builder_self11 = 1'd0;
reg           builder_self12 = 1'd0;
reg           builder_self13 = 1'd0;
reg     [2:0] builder_self14 = 3'd0;
reg    [14:0] builder_self15 = 15'd0;
reg           builder_self16 = 1'd0;
reg           builder_self17 = 1'd0;
reg           builder_self18 = 1'd0;
reg           builder_self19 = 1'd0;
reg           builder_self2 = 1'd0;
reg           builder_self20 = 1'd0;
reg     [2:0] builder_self21 = 3'd0;
reg    [14:0] builder_self22 = 15'd0;
reg           builder_self23 = 1'd0;
reg           builder_self24 = 1'd0;
reg           builder_self25 = 1'd0;
reg           builder_self26 = 1'd0;
reg           builder_self27 = 1'd0;
reg           builder_self3 = 1'd0;
reg           builder_self4 = 1'd0;
reg           builder_self5 = 1'd0;
reg           builder_self6 = 1'd0;
reg     [2:0] builder_self7 = 3'd0;
reg    [14:0] builder_self8 = 15'd0;
reg           builder_self9 = 1'd0;
reg     [1:0] builder_state = 2'd0;
reg           builder_t_self0 = 1'd0;
reg           builder_t_self1 = 1'd0;
reg           builder_t_self2 = 1'd0;
reg           builder_t_self3 = 1'd0;
reg           builder_t_self4 = 1'd0;
reg           builder_t_self5 = 1'd0;
wire          builder_we;
wire          builder_xilinxasyncresetsynchronizerimpl0;
wire          builder_xilinxasyncresetsynchronizerimpl0_rst_meta;
wire          builder_xilinxasyncresetsynchronizerimpl1;
wire          builder_xilinxasyncresetsynchronizerimpl1_rst_meta;
wire          builder_xilinxasyncresetsynchronizerimpl2;
wire          builder_xilinxasyncresetsynchronizerimpl2_expr;
wire          builder_xilinxasyncresetsynchronizerimpl2_rst_meta;
wire          builder_xilinxasyncresetsynchronizerimpl3;
wire          builder_xilinxasyncresetsynchronizerimpl3_expr;
wire          builder_xilinxasyncresetsynchronizerimpl3_rst_meta;
wire          iodelay_clk;
wire          iodelay_rst;
wire          main_clkin;
wire          main_clkout0;
wire          main_clkout1;
wire          main_clkout2;
wire          main_clkout3;
wire          main_clkout_buf0;
wire          main_clkout_buf1;
wire          main_clkout_buf2;
wire          main_clkout_buf3;
reg           main_ic_reset = 1'd1;
reg           main_init_done_re = 1'd0;
reg           main_init_done_storage = 1'd0;
reg           main_init_error_re = 1'd0;
reg           main_init_error_storage = 1'd0;
wire          main_k7ddrphy0;
wire          main_k7ddrphy1;
wire          main_k7ddrphy2;
wire          main_k7ddrphy3;
reg     [7:0] main_k7ddrphy_bitslip00 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip01 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip02 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip03;
reg     [7:0] main_k7ddrphy_bitslip04 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip0_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip0_r1 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip0_r2 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip0_r3 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip0_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip0_value1 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip0_value2 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip0_value3 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip10 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip100 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip101;
reg     [7:0] main_k7ddrphy_bitslip102 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip10_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip10_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip10_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip10_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip11 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip110 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip111;
reg     [7:0] main_k7ddrphy_bitslip112 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip11_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip11_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip11_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip11_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip12 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip120 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip121;
reg     [7:0] main_k7ddrphy_bitslip122 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip12_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip12_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip12_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip12_value1 = 3'd7;
wire    [7:0] main_k7ddrphy_bitslip13;
reg     [7:0] main_k7ddrphy_bitslip130 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip131;
reg     [7:0] main_k7ddrphy_bitslip132 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip13_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip13_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip13_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip13_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip14 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip140 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip141;
reg     [7:0] main_k7ddrphy_bitslip142 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip14_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip14_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip14_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip14_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip150 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip151;
reg     [7:0] main_k7ddrphy_bitslip152 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip15_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip15_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip15_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip15_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip160 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip161;
reg     [7:0] main_k7ddrphy_bitslip162 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip16_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip16_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip16_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip16_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip170 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip171;
reg     [7:0] main_k7ddrphy_bitslip172 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip17_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip17_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip17_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip17_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip180 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip181;
reg     [7:0] main_k7ddrphy_bitslip182 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip18_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip18_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip18_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip18_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip190 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip191;
reg     [7:0] main_k7ddrphy_bitslip192 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip19_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip19_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip19_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip19_value1 = 3'd7;
reg    [15:0] main_k7ddrphy_bitslip1_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip1_r1 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip1_r2 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip1_r3 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip1_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip1_value1 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip1_value2 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip1_value3 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip20 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip200 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip201;
reg     [7:0] main_k7ddrphy_bitslip202 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip20_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip20_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip20_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip20_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip21 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip210 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip211;
reg     [7:0] main_k7ddrphy_bitslip212 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip21_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip21_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip21_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip21_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip22 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip220 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip221;
reg     [7:0] main_k7ddrphy_bitslip222 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip22_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip22_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip22_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip22_value1 = 3'd7;
wire    [7:0] main_k7ddrphy_bitslip23;
reg     [7:0] main_k7ddrphy_bitslip230 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip231;
reg     [7:0] main_k7ddrphy_bitslip232 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip23_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip23_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip23_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip23_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip24 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip240 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip241;
reg     [7:0] main_k7ddrphy_bitslip242 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip24_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip24_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip24_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip24_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip250 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip251;
reg     [7:0] main_k7ddrphy_bitslip252 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip25_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip25_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip25_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip25_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip260 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip261;
reg     [7:0] main_k7ddrphy_bitslip262 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip26_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip26_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip26_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip26_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip270 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip271;
reg     [7:0] main_k7ddrphy_bitslip272 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip27_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip27_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip27_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip27_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip280 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip281;
reg     [7:0] main_k7ddrphy_bitslip282 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip28_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip28_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip28_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip28_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip290 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip291;
reg     [7:0] main_k7ddrphy_bitslip292 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip29_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip29_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip29_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip29_value1 = 3'd7;
reg    [15:0] main_k7ddrphy_bitslip2_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip2_r1 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip2_r2 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip2_r3 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip2_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip2_value1 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip2_value2 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip2_value3 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip30 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip300 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip301;
reg     [7:0] main_k7ddrphy_bitslip302 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip30_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip30_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip30_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip30_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip31 = 8'd0;
reg     [7:0] main_k7ddrphy_bitslip310 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip311;
reg     [7:0] main_k7ddrphy_bitslip312 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip31_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip31_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip31_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip31_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip32 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip33;
reg     [7:0] main_k7ddrphy_bitslip34 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip3_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip3_r1 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip3_r2 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip3_r3 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip3_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip3_value1 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip3_value2 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip3_value3 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip40 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip41;
reg     [7:0] main_k7ddrphy_bitslip42 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip4_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip4_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip4_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip4_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip50 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip51;
reg     [7:0] main_k7ddrphy_bitslip52 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip5_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip5_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip5_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip5_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip60 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip61;
reg     [7:0] main_k7ddrphy_bitslip62 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip6_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip6_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip6_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip6_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip70 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip71;
reg     [7:0] main_k7ddrphy_bitslip72 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip7_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip7_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip7_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip7_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip80 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip81;
reg     [7:0] main_k7ddrphy_bitslip82 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip8_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip8_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip8_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip8_value1 = 3'd7;
reg     [7:0] main_k7ddrphy_bitslip90 = 8'd0;
wire    [7:0] main_k7ddrphy_bitslip91;
reg     [7:0] main_k7ddrphy_bitslip92 = 8'd0;
reg    [15:0] main_k7ddrphy_bitslip9_r0 = 16'd0;
reg    [15:0] main_k7ddrphy_bitslip9_r1 = 16'd0;
reg     [2:0] main_k7ddrphy_bitslip9_value0 = 3'd7;
reg     [2:0] main_k7ddrphy_bitslip9_value1 = 3'd7;
wire          main_k7ddrphy_cdly_inc_r;
reg           main_k7ddrphy_cdly_inc_re = 1'd0;
reg           main_k7ddrphy_cdly_inc_w = 1'd0;
reg           main_k7ddrphy_cdly_inc_we = 1'd0;
wire          main_k7ddrphy_cdly_rst_r;
reg           main_k7ddrphy_cdly_rst_re = 1'd0;
reg           main_k7ddrphy_cdly_rst_w = 1'd0;
reg           main_k7ddrphy_cdly_rst_we = 1'd0;
wire          main_k7ddrphy_dfi_p0_act_n;
wire   [14:0] main_k7ddrphy_dfi_p0_address;
wire    [2:0] main_k7ddrphy_dfi_p0_bank;
wire          main_k7ddrphy_dfi_p0_cas_n;
wire          main_k7ddrphy_dfi_p0_cke;
wire          main_k7ddrphy_dfi_p0_cs_n;
wire          main_k7ddrphy_dfi_p0_odt;
wire          main_k7ddrphy_dfi_p0_ras_n;
reg    [63:0] main_k7ddrphy_dfi_p0_rddata = 64'd0;
wire          main_k7ddrphy_dfi_p0_rddata_en;
wire          main_k7ddrphy_dfi_p0_rddata_valid;
wire          main_k7ddrphy_dfi_p0_reset_n;
wire          main_k7ddrphy_dfi_p0_we_n;
wire   [63:0] main_k7ddrphy_dfi_p0_wrdata;
wire          main_k7ddrphy_dfi_p0_wrdata_en;
wire    [7:0] main_k7ddrphy_dfi_p0_wrdata_mask;
wire          main_k7ddrphy_dfi_p1_act_n;
wire   [14:0] main_k7ddrphy_dfi_p1_address;
wire    [2:0] main_k7ddrphy_dfi_p1_bank;
wire          main_k7ddrphy_dfi_p1_cas_n;
wire          main_k7ddrphy_dfi_p1_cke;
wire          main_k7ddrphy_dfi_p1_cs_n;
wire          main_k7ddrphy_dfi_p1_odt;
wire          main_k7ddrphy_dfi_p1_ras_n;
reg    [63:0] main_k7ddrphy_dfi_p1_rddata = 64'd0;
wire          main_k7ddrphy_dfi_p1_rddata_en;
wire          main_k7ddrphy_dfi_p1_rddata_valid;
wire          main_k7ddrphy_dfi_p1_reset_n;
wire          main_k7ddrphy_dfi_p1_we_n;
wire   [63:0] main_k7ddrphy_dfi_p1_wrdata;
wire          main_k7ddrphy_dfi_p1_wrdata_en;
wire    [7:0] main_k7ddrphy_dfi_p1_wrdata_mask;
wire          main_k7ddrphy_dfi_p2_act_n;
wire   [14:0] main_k7ddrphy_dfi_p2_address;
wire    [2:0] main_k7ddrphy_dfi_p2_bank;
wire          main_k7ddrphy_dfi_p2_cas_n;
wire          main_k7ddrphy_dfi_p2_cke;
wire          main_k7ddrphy_dfi_p2_cs_n;
wire          main_k7ddrphy_dfi_p2_odt;
wire          main_k7ddrphy_dfi_p2_ras_n;
reg    [63:0] main_k7ddrphy_dfi_p2_rddata = 64'd0;
wire          main_k7ddrphy_dfi_p2_rddata_en;
wire          main_k7ddrphy_dfi_p2_rddata_valid;
wire          main_k7ddrphy_dfi_p2_reset_n;
wire          main_k7ddrphy_dfi_p2_we_n;
wire   [63:0] main_k7ddrphy_dfi_p2_wrdata;
wire          main_k7ddrphy_dfi_p2_wrdata_en;
wire    [7:0] main_k7ddrphy_dfi_p2_wrdata_mask;
wire          main_k7ddrphy_dfi_p3_act_n;
wire   [14:0] main_k7ddrphy_dfi_p3_address;
wire    [2:0] main_k7ddrphy_dfi_p3_bank;
wire          main_k7ddrphy_dfi_p3_cas_n;
wire          main_k7ddrphy_dfi_p3_cke;
wire          main_k7ddrphy_dfi_p3_cs_n;
wire          main_k7ddrphy_dfi_p3_odt;
wire          main_k7ddrphy_dfi_p3_ras_n;
reg    [63:0] main_k7ddrphy_dfi_p3_rddata = 64'd0;
wire          main_k7ddrphy_dfi_p3_rddata_en;
wire          main_k7ddrphy_dfi_p3_rddata_valid;
wire          main_k7ddrphy_dfi_p3_reset_n;
wire          main_k7ddrphy_dfi_p3_we_n;
wire   [63:0] main_k7ddrphy_dfi_p3_wrdata;
wire          main_k7ddrphy_dfi_p3_wrdata_en;
wire    [7:0] main_k7ddrphy_dfi_p3_wrdata_mask;
reg           main_k7ddrphy_dly_sel_re = 1'd0;
reg     [3:0] main_k7ddrphy_dly_sel_storage = 4'd0;
wire          main_k7ddrphy_dm_o_nodelay0;
wire          main_k7ddrphy_dm_o_nodelay1;
wire          main_k7ddrphy_dm_o_nodelay2;
wire          main_k7ddrphy_dm_o_nodelay3;
wire          main_k7ddrphy_dq_i_delayed0;
wire          main_k7ddrphy_dq_i_delayed1;
wire          main_k7ddrphy_dq_i_delayed10;
wire          main_k7ddrphy_dq_i_delayed11;
wire          main_k7ddrphy_dq_i_delayed12;
wire          main_k7ddrphy_dq_i_delayed13;
wire          main_k7ddrphy_dq_i_delayed14;
wire          main_k7ddrphy_dq_i_delayed15;
wire          main_k7ddrphy_dq_i_delayed16;
wire          main_k7ddrphy_dq_i_delayed17;
wire          main_k7ddrphy_dq_i_delayed18;
wire          main_k7ddrphy_dq_i_delayed19;
wire          main_k7ddrphy_dq_i_delayed2;
wire          main_k7ddrphy_dq_i_delayed20;
wire          main_k7ddrphy_dq_i_delayed21;
wire          main_k7ddrphy_dq_i_delayed22;
wire          main_k7ddrphy_dq_i_delayed23;
wire          main_k7ddrphy_dq_i_delayed24;
wire          main_k7ddrphy_dq_i_delayed25;
wire          main_k7ddrphy_dq_i_delayed26;
wire          main_k7ddrphy_dq_i_delayed27;
wire          main_k7ddrphy_dq_i_delayed28;
wire          main_k7ddrphy_dq_i_delayed29;
wire          main_k7ddrphy_dq_i_delayed3;
wire          main_k7ddrphy_dq_i_delayed30;
wire          main_k7ddrphy_dq_i_delayed31;
wire          main_k7ddrphy_dq_i_delayed4;
wire          main_k7ddrphy_dq_i_delayed5;
wire          main_k7ddrphy_dq_i_delayed6;
wire          main_k7ddrphy_dq_i_delayed7;
wire          main_k7ddrphy_dq_i_delayed8;
wire          main_k7ddrphy_dq_i_delayed9;
wire          main_k7ddrphy_dq_i_nodelay0;
wire          main_k7ddrphy_dq_i_nodelay1;
wire          main_k7ddrphy_dq_i_nodelay10;
wire          main_k7ddrphy_dq_i_nodelay11;
wire          main_k7ddrphy_dq_i_nodelay12;
wire          main_k7ddrphy_dq_i_nodelay13;
wire          main_k7ddrphy_dq_i_nodelay14;
wire          main_k7ddrphy_dq_i_nodelay15;
wire          main_k7ddrphy_dq_i_nodelay16;
wire          main_k7ddrphy_dq_i_nodelay17;
wire          main_k7ddrphy_dq_i_nodelay18;
wire          main_k7ddrphy_dq_i_nodelay19;
wire          main_k7ddrphy_dq_i_nodelay2;
wire          main_k7ddrphy_dq_i_nodelay20;
wire          main_k7ddrphy_dq_i_nodelay21;
wire          main_k7ddrphy_dq_i_nodelay22;
wire          main_k7ddrphy_dq_i_nodelay23;
wire          main_k7ddrphy_dq_i_nodelay24;
wire          main_k7ddrphy_dq_i_nodelay25;
wire          main_k7ddrphy_dq_i_nodelay26;
wire          main_k7ddrphy_dq_i_nodelay27;
wire          main_k7ddrphy_dq_i_nodelay28;
wire          main_k7ddrphy_dq_i_nodelay29;
wire          main_k7ddrphy_dq_i_nodelay3;
wire          main_k7ddrphy_dq_i_nodelay30;
wire          main_k7ddrphy_dq_i_nodelay31;
wire          main_k7ddrphy_dq_i_nodelay4;
wire          main_k7ddrphy_dq_i_nodelay5;
wire          main_k7ddrphy_dq_i_nodelay6;
wire          main_k7ddrphy_dq_i_nodelay7;
wire          main_k7ddrphy_dq_i_nodelay8;
wire          main_k7ddrphy_dq_i_nodelay9;
wire          main_k7ddrphy_dq_o_delayed0;
wire          main_k7ddrphy_dq_o_delayed1;
wire          main_k7ddrphy_dq_o_delayed10;
wire          main_k7ddrphy_dq_o_delayed11;
wire          main_k7ddrphy_dq_o_delayed12;
wire          main_k7ddrphy_dq_o_delayed13;
wire          main_k7ddrphy_dq_o_delayed14;
wire          main_k7ddrphy_dq_o_delayed15;
wire          main_k7ddrphy_dq_o_delayed16;
wire          main_k7ddrphy_dq_o_delayed17;
wire          main_k7ddrphy_dq_o_delayed18;
wire          main_k7ddrphy_dq_o_delayed19;
wire          main_k7ddrphy_dq_o_delayed2;
wire          main_k7ddrphy_dq_o_delayed20;
wire          main_k7ddrphy_dq_o_delayed21;
wire          main_k7ddrphy_dq_o_delayed22;
wire          main_k7ddrphy_dq_o_delayed23;
wire          main_k7ddrphy_dq_o_delayed24;
wire          main_k7ddrphy_dq_o_delayed25;
wire          main_k7ddrphy_dq_o_delayed26;
wire          main_k7ddrphy_dq_o_delayed27;
wire          main_k7ddrphy_dq_o_delayed28;
wire          main_k7ddrphy_dq_o_delayed29;
wire          main_k7ddrphy_dq_o_delayed3;
wire          main_k7ddrphy_dq_o_delayed30;
wire          main_k7ddrphy_dq_o_delayed31;
wire          main_k7ddrphy_dq_o_delayed4;
wire          main_k7ddrphy_dq_o_delayed5;
wire          main_k7ddrphy_dq_o_delayed6;
wire          main_k7ddrphy_dq_o_delayed7;
wire          main_k7ddrphy_dq_o_delayed8;
wire          main_k7ddrphy_dq_o_delayed9;
wire          main_k7ddrphy_dq_o_nodelay0;
wire          main_k7ddrphy_dq_o_nodelay1;
wire          main_k7ddrphy_dq_o_nodelay10;
wire          main_k7ddrphy_dq_o_nodelay11;
wire          main_k7ddrphy_dq_o_nodelay12;
wire          main_k7ddrphy_dq_o_nodelay13;
wire          main_k7ddrphy_dq_o_nodelay14;
wire          main_k7ddrphy_dq_o_nodelay15;
wire          main_k7ddrphy_dq_o_nodelay16;
wire          main_k7ddrphy_dq_o_nodelay17;
wire          main_k7ddrphy_dq_o_nodelay18;
wire          main_k7ddrphy_dq_o_nodelay19;
wire          main_k7ddrphy_dq_o_nodelay2;
wire          main_k7ddrphy_dq_o_nodelay20;
wire          main_k7ddrphy_dq_o_nodelay21;
wire          main_k7ddrphy_dq_o_nodelay22;
wire          main_k7ddrphy_dq_o_nodelay23;
wire          main_k7ddrphy_dq_o_nodelay24;
wire          main_k7ddrphy_dq_o_nodelay25;
wire          main_k7ddrphy_dq_o_nodelay26;
wire          main_k7ddrphy_dq_o_nodelay27;
wire          main_k7ddrphy_dq_o_nodelay28;
wire          main_k7ddrphy_dq_o_nodelay29;
wire          main_k7ddrphy_dq_o_nodelay3;
wire          main_k7ddrphy_dq_o_nodelay30;
wire          main_k7ddrphy_dq_o_nodelay31;
wire          main_k7ddrphy_dq_o_nodelay4;
wire          main_k7ddrphy_dq_o_nodelay5;
wire          main_k7ddrphy_dq_o_nodelay6;
wire          main_k7ddrphy_dq_o_nodelay7;
wire          main_k7ddrphy_dq_o_nodelay8;
wire          main_k7ddrphy_dq_o_nodelay9;
wire          main_k7ddrphy_dq_oe;
wire          main_k7ddrphy_dq_oe_delay_tappeddelayline;
reg           main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg           main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire          main_k7ddrphy_dq_t0;
wire          main_k7ddrphy_dq_t1;
wire          main_k7ddrphy_dq_t10;
wire          main_k7ddrphy_dq_t11;
wire          main_k7ddrphy_dq_t12;
wire          main_k7ddrphy_dq_t13;
wire          main_k7ddrphy_dq_t14;
wire          main_k7ddrphy_dq_t15;
wire          main_k7ddrphy_dq_t16;
wire          main_k7ddrphy_dq_t17;
wire          main_k7ddrphy_dq_t18;
wire          main_k7ddrphy_dq_t19;
wire          main_k7ddrphy_dq_t2;
wire          main_k7ddrphy_dq_t20;
wire          main_k7ddrphy_dq_t21;
wire          main_k7ddrphy_dq_t22;
wire          main_k7ddrphy_dq_t23;
wire          main_k7ddrphy_dq_t24;
wire          main_k7ddrphy_dq_t25;
wire          main_k7ddrphy_dq_t26;
wire          main_k7ddrphy_dq_t27;
wire          main_k7ddrphy_dq_t28;
wire          main_k7ddrphy_dq_t29;
wire          main_k7ddrphy_dq_t3;
wire          main_k7ddrphy_dq_t30;
wire          main_k7ddrphy_dq_t31;
wire          main_k7ddrphy_dq_t4;
wire          main_k7ddrphy_dq_t5;
wire          main_k7ddrphy_dq_t6;
wire          main_k7ddrphy_dq_t7;
wire          main_k7ddrphy_dq_t8;
wire          main_k7ddrphy_dq_t9;
wire          main_k7ddrphy_dqs_o_delayed0;
wire          main_k7ddrphy_dqs_o_delayed1;
wire          main_k7ddrphy_dqs_o_delayed2;
wire          main_k7ddrphy_dqs_o_delayed3;
wire          main_k7ddrphy_dqs_o_no_delay0;
wire          main_k7ddrphy_dqs_o_no_delay1;
wire          main_k7ddrphy_dqs_o_no_delay2;
wire          main_k7ddrphy_dqs_o_no_delay3;
reg           main_k7ddrphy_dqs_oe = 1'd0;
wire          main_k7ddrphy_dqs_oe_delay_tappeddelayline;
reg           main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg           main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire          main_k7ddrphy_dqs_postamble;
wire          main_k7ddrphy_dqs_preamble;
wire          main_k7ddrphy_dqs_t0;
wire          main_k7ddrphy_dqs_t1;
wire          main_k7ddrphy_dqs_t2;
wire          main_k7ddrphy_dqs_t3;
reg           main_k7ddrphy_dqspattern0 = 1'd0;
reg           main_k7ddrphy_dqspattern1 = 1'd0;
reg     [7:0] main_k7ddrphy_dqspattern_o = 8'd0;
reg           main_k7ddrphy_half_sys8x_taps_re = 1'd0;
reg     [4:0] main_k7ddrphy_half_sys8x_taps_storage = 5'd8;
wire          main_k7ddrphy_oq0;
wire          main_k7ddrphy_oq1;
wire          main_k7ddrphy_oq10;
wire          main_k7ddrphy_oq11;
wire          main_k7ddrphy_oq12;
wire          main_k7ddrphy_oq13;
wire          main_k7ddrphy_oq14;
wire          main_k7ddrphy_oq15;
wire          main_k7ddrphy_oq16;
wire          main_k7ddrphy_oq17;
wire          main_k7ddrphy_oq18;
wire          main_k7ddrphy_oq19;
wire          main_k7ddrphy_oq2;
wire          main_k7ddrphy_oq20;
wire          main_k7ddrphy_oq21;
wire          main_k7ddrphy_oq22;
wire          main_k7ddrphy_oq23;
wire          main_k7ddrphy_oq24;
wire          main_k7ddrphy_oq3;
wire          main_k7ddrphy_oq4;
wire          main_k7ddrphy_oq5;
wire          main_k7ddrphy_oq6;
wire          main_k7ddrphy_oq7;
wire          main_k7ddrphy_oq8;
wire          main_k7ddrphy_oq9;
wire    [2:0] main_k7ddrphy_pads_ba;
reg           main_k7ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg           main_k7ddrphy_rddata_en_tappeddelayline7 = 1'd0;
wire          main_k7ddrphy_rdly_dq_bitslip_r;
reg           main_k7ddrphy_rdly_dq_bitslip_re = 1'd0;
wire          main_k7ddrphy_rdly_dq_bitslip_rst_r;
reg           main_k7ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
reg           main_k7ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg           main_k7ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg           main_k7ddrphy_rdly_dq_bitslip_w = 1'd0;
reg           main_k7ddrphy_rdly_dq_bitslip_we = 1'd0;
wire          main_k7ddrphy_rdly_dq_inc_r;
reg           main_k7ddrphy_rdly_dq_inc_re = 1'd0;
reg           main_k7ddrphy_rdly_dq_inc_w = 1'd0;
reg           main_k7ddrphy_rdly_dq_inc_we = 1'd0;
wire          main_k7ddrphy_rdly_dq_rst_r;
reg           main_k7ddrphy_rdly_dq_rst_re = 1'd0;
reg           main_k7ddrphy_rdly_dq_rst_w = 1'd0;
reg           main_k7ddrphy_rdly_dq_rst_we = 1'd0;
reg           main_k7ddrphy_rdphase_re = 1'd0;
reg     [1:0] main_k7ddrphy_rdphase_storage = 2'd1;
reg           main_k7ddrphy_rst_re = 1'd0;
reg           main_k7ddrphy_rst_storage = 1'd0;
wire          main_k7ddrphy_sd_clk_se_delayed;
wire          main_k7ddrphy_sd_clk_se_nodelay;
wire          main_k7ddrphy_wdly_dq_bitslip_r;
reg           main_k7ddrphy_wdly_dq_bitslip_re = 1'd0;
wire          main_k7ddrphy_wdly_dq_bitslip_rst_r;
reg           main_k7ddrphy_wdly_dq_bitslip_rst_re = 1'd0;
reg           main_k7ddrphy_wdly_dq_bitslip_rst_w = 1'd0;
reg           main_k7ddrphy_wdly_dq_bitslip_rst_we = 1'd0;
reg           main_k7ddrphy_wdly_dq_bitslip_w = 1'd0;
reg           main_k7ddrphy_wdly_dq_bitslip_we = 1'd0;
wire          main_k7ddrphy_wdly_dq_inc_r;
reg           main_k7ddrphy_wdly_dq_inc_re = 1'd0;
reg           main_k7ddrphy_wdly_dq_inc_w = 1'd0;
reg           main_k7ddrphy_wdly_dq_inc_we = 1'd0;
wire          main_k7ddrphy_wdly_dq_rst_r;
reg           main_k7ddrphy_wdly_dq_rst_re = 1'd0;
reg           main_k7ddrphy_wdly_dq_rst_w = 1'd0;
reg           main_k7ddrphy_wdly_dq_rst_we = 1'd0;
wire          main_k7ddrphy_wdly_dqs_inc_r;
reg           main_k7ddrphy_wdly_dqs_inc_re = 1'd0;
reg           main_k7ddrphy_wdly_dqs_inc_w = 1'd0;
reg           main_k7ddrphy_wdly_dqs_inc_we = 1'd0;
wire          main_k7ddrphy_wdly_dqs_rst_r;
reg           main_k7ddrphy_wdly_dqs_rst_re = 1'd0;
reg           main_k7ddrphy_wdly_dqs_rst_w = 1'd0;
reg           main_k7ddrphy_wdly_dqs_rst_we = 1'd0;
reg           main_k7ddrphy_wlevel_en_re = 1'd0;
reg           main_k7ddrphy_wlevel_en_storage = 1'd0;
wire          main_k7ddrphy_wlevel_strobe_r;
reg           main_k7ddrphy_wlevel_strobe_re = 1'd0;
reg           main_k7ddrphy_wlevel_strobe_w = 1'd0;
reg           main_k7ddrphy_wlevel_strobe_we = 1'd0;
reg           main_k7ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg           main_k7ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg           main_k7ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
reg           main_k7ddrphy_wrphase_re = 1'd0;
reg     [1:0] main_k7ddrphy_wrphase_storage = 2'd2;
reg           main_litedramcore_bankmachine0_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine0_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine0_cmd_payload_ba;
reg           main_litedramcore_bankmachine0_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine0_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine0_consume = 4'd0;
wire          main_litedramcore_bankmachine0_do_read;
wire          main_litedramcore_bankmachine0_fifo_in_first;
wire          main_litedramcore_bankmachine0_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine0_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine0_fifo_in_payload_we;
wire          main_litedramcore_bankmachine0_fifo_out_first;
wire          main_litedramcore_bankmachine0_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine0_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine0_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine0_level = 5'd0;
wire          main_litedramcore_bankmachine0_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine0_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine0_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine0_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine0_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine0_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine0_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine0_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine0_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine0_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine0_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine0_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine0_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine0_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine0_rdport_dat_r;
reg           main_litedramcore_bankmachine0_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine0_refresh_req;
reg           main_litedramcore_bankmachine0_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine0_req_addr;
wire          main_litedramcore_bankmachine0_req_lock;
reg           main_litedramcore_bankmachine0_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine0_req_ready;
wire          main_litedramcore_bankmachine0_req_valid;
reg           main_litedramcore_bankmachine0_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine0_req_we;
reg    [14:0] main_litedramcore_bankmachine0_row = 15'd0;
reg           main_litedramcore_bankmachine0_row_close = 1'd0;
reg           main_litedramcore_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine0_row_hit;
reg           main_litedramcore_bankmachine0_row_open = 1'd0;
reg           main_litedramcore_bankmachine0_row_opened = 1'd0;
reg           main_litedramcore_bankmachine0_sink_first = 1'd0;
reg           main_litedramcore_bankmachine0_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine0_sink_payload_addr;
wire          main_litedramcore_bankmachine0_sink_payload_we;
wire          main_litedramcore_bankmachine0_sink_ready;
wire          main_litedramcore_bankmachine0_sink_sink_first;
wire          main_litedramcore_bankmachine0_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine0_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine0_sink_sink_payload_we;
wire          main_litedramcore_bankmachine0_sink_sink_ready;
wire          main_litedramcore_bankmachine0_sink_sink_valid;
wire          main_litedramcore_bankmachine0_sink_valid;
wire          main_litedramcore_bankmachine0_source_first;
wire          main_litedramcore_bankmachine0_source_last;
wire   [21:0] main_litedramcore_bankmachine0_source_payload_addr;
wire          main_litedramcore_bankmachine0_source_payload_we;
wire          main_litedramcore_bankmachine0_source_ready;
wire          main_litedramcore_bankmachine0_source_source_first;
wire          main_litedramcore_bankmachine0_source_source_last;
wire   [21:0] main_litedramcore_bankmachine0_source_source_payload_addr;
wire          main_litedramcore_bankmachine0_source_source_payload_we;
wire          main_litedramcore_bankmachine0_source_source_ready;
wire          main_litedramcore_bankmachine0_source_source_valid;
wire          main_litedramcore_bankmachine0_source_valid;
wire   [24:0] main_litedramcore_bankmachine0_syncfifo0_din;
wire   [24:0] main_litedramcore_bankmachine0_syncfifo0_dout;
wire          main_litedramcore_bankmachine0_syncfifo0_re;
wire          main_litedramcore_bankmachine0_syncfifo0_readable;
wire          main_litedramcore_bankmachine0_syncfifo0_we;
wire          main_litedramcore_bankmachine0_syncfifo0_writable;
reg     [2:0] main_litedramcore_bankmachine0_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine0_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine0_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine0_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine0_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine0_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine0_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine0_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine0_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine0_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine0_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine0_wrport_dat_w;
wire          main_litedramcore_bankmachine0_wrport_we;
reg           main_litedramcore_bankmachine1_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine1_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine1_cmd_payload_ba;
reg           main_litedramcore_bankmachine1_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine1_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine1_consume = 4'd0;
wire          main_litedramcore_bankmachine1_do_read;
wire          main_litedramcore_bankmachine1_fifo_in_first;
wire          main_litedramcore_bankmachine1_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine1_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine1_fifo_in_payload_we;
wire          main_litedramcore_bankmachine1_fifo_out_first;
wire          main_litedramcore_bankmachine1_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine1_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine1_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine1_level = 5'd0;
wire          main_litedramcore_bankmachine1_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine1_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine1_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine1_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine1_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine1_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine1_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine1_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine1_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine1_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine1_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine1_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine1_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine1_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine1_rdport_dat_r;
reg           main_litedramcore_bankmachine1_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine1_refresh_req;
reg           main_litedramcore_bankmachine1_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine1_req_addr;
wire          main_litedramcore_bankmachine1_req_lock;
reg           main_litedramcore_bankmachine1_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine1_req_ready;
wire          main_litedramcore_bankmachine1_req_valid;
reg           main_litedramcore_bankmachine1_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine1_req_we;
reg    [14:0] main_litedramcore_bankmachine1_row = 15'd0;
reg           main_litedramcore_bankmachine1_row_close = 1'd0;
reg           main_litedramcore_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine1_row_hit;
reg           main_litedramcore_bankmachine1_row_open = 1'd0;
reg           main_litedramcore_bankmachine1_row_opened = 1'd0;
reg           main_litedramcore_bankmachine1_sink_first = 1'd0;
reg           main_litedramcore_bankmachine1_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine1_sink_payload_addr;
wire          main_litedramcore_bankmachine1_sink_payload_we;
wire          main_litedramcore_bankmachine1_sink_ready;
wire          main_litedramcore_bankmachine1_sink_sink_first;
wire          main_litedramcore_bankmachine1_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine1_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine1_sink_sink_payload_we;
wire          main_litedramcore_bankmachine1_sink_sink_ready;
wire          main_litedramcore_bankmachine1_sink_sink_valid;
wire          main_litedramcore_bankmachine1_sink_valid;
wire          main_litedramcore_bankmachine1_source_first;
wire          main_litedramcore_bankmachine1_source_last;
wire   [21:0] main_litedramcore_bankmachine1_source_payload_addr;
wire          main_litedramcore_bankmachine1_source_payload_we;
wire          main_litedramcore_bankmachine1_source_ready;
wire          main_litedramcore_bankmachine1_source_source_first;
wire          main_litedramcore_bankmachine1_source_source_last;
wire   [21:0] main_litedramcore_bankmachine1_source_source_payload_addr;
wire          main_litedramcore_bankmachine1_source_source_payload_we;
wire          main_litedramcore_bankmachine1_source_source_ready;
wire          main_litedramcore_bankmachine1_source_source_valid;
wire          main_litedramcore_bankmachine1_source_valid;
wire   [24:0] main_litedramcore_bankmachine1_syncfifo1_din;
wire   [24:0] main_litedramcore_bankmachine1_syncfifo1_dout;
wire          main_litedramcore_bankmachine1_syncfifo1_re;
wire          main_litedramcore_bankmachine1_syncfifo1_readable;
wire          main_litedramcore_bankmachine1_syncfifo1_we;
wire          main_litedramcore_bankmachine1_syncfifo1_writable;
reg     [2:0] main_litedramcore_bankmachine1_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine1_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine1_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine1_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine1_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine1_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine1_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine1_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine1_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine1_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine1_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine1_wrport_dat_w;
wire          main_litedramcore_bankmachine1_wrport_we;
reg           main_litedramcore_bankmachine2_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine2_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine2_cmd_payload_ba;
reg           main_litedramcore_bankmachine2_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine2_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine2_consume = 4'd0;
wire          main_litedramcore_bankmachine2_do_read;
wire          main_litedramcore_bankmachine2_fifo_in_first;
wire          main_litedramcore_bankmachine2_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine2_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine2_fifo_in_payload_we;
wire          main_litedramcore_bankmachine2_fifo_out_first;
wire          main_litedramcore_bankmachine2_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine2_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine2_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine2_level = 5'd0;
wire          main_litedramcore_bankmachine2_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine2_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine2_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine2_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine2_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine2_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine2_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine2_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine2_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine2_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine2_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine2_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine2_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine2_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine2_rdport_dat_r;
reg           main_litedramcore_bankmachine2_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine2_refresh_req;
reg           main_litedramcore_bankmachine2_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine2_req_addr;
wire          main_litedramcore_bankmachine2_req_lock;
reg           main_litedramcore_bankmachine2_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine2_req_ready;
wire          main_litedramcore_bankmachine2_req_valid;
reg           main_litedramcore_bankmachine2_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine2_req_we;
reg    [14:0] main_litedramcore_bankmachine2_row = 15'd0;
reg           main_litedramcore_bankmachine2_row_close = 1'd0;
reg           main_litedramcore_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine2_row_hit;
reg           main_litedramcore_bankmachine2_row_open = 1'd0;
reg           main_litedramcore_bankmachine2_row_opened = 1'd0;
reg           main_litedramcore_bankmachine2_sink_first = 1'd0;
reg           main_litedramcore_bankmachine2_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine2_sink_payload_addr;
wire          main_litedramcore_bankmachine2_sink_payload_we;
wire          main_litedramcore_bankmachine2_sink_ready;
wire          main_litedramcore_bankmachine2_sink_sink_first;
wire          main_litedramcore_bankmachine2_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine2_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine2_sink_sink_payload_we;
wire          main_litedramcore_bankmachine2_sink_sink_ready;
wire          main_litedramcore_bankmachine2_sink_sink_valid;
wire          main_litedramcore_bankmachine2_sink_valid;
wire          main_litedramcore_bankmachine2_source_first;
wire          main_litedramcore_bankmachine2_source_last;
wire   [21:0] main_litedramcore_bankmachine2_source_payload_addr;
wire          main_litedramcore_bankmachine2_source_payload_we;
wire          main_litedramcore_bankmachine2_source_ready;
wire          main_litedramcore_bankmachine2_source_source_first;
wire          main_litedramcore_bankmachine2_source_source_last;
wire   [21:0] main_litedramcore_bankmachine2_source_source_payload_addr;
wire          main_litedramcore_bankmachine2_source_source_payload_we;
wire          main_litedramcore_bankmachine2_source_source_ready;
wire          main_litedramcore_bankmachine2_source_source_valid;
wire          main_litedramcore_bankmachine2_source_valid;
wire   [24:0] main_litedramcore_bankmachine2_syncfifo2_din;
wire   [24:0] main_litedramcore_bankmachine2_syncfifo2_dout;
wire          main_litedramcore_bankmachine2_syncfifo2_re;
wire          main_litedramcore_bankmachine2_syncfifo2_readable;
wire          main_litedramcore_bankmachine2_syncfifo2_we;
wire          main_litedramcore_bankmachine2_syncfifo2_writable;
reg     [2:0] main_litedramcore_bankmachine2_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine2_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine2_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine2_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine2_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine2_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine2_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine2_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine2_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine2_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine2_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine2_wrport_dat_w;
wire          main_litedramcore_bankmachine2_wrport_we;
reg           main_litedramcore_bankmachine3_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine3_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine3_cmd_payload_ba;
reg           main_litedramcore_bankmachine3_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine3_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine3_consume = 4'd0;
wire          main_litedramcore_bankmachine3_do_read;
wire          main_litedramcore_bankmachine3_fifo_in_first;
wire          main_litedramcore_bankmachine3_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine3_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine3_fifo_in_payload_we;
wire          main_litedramcore_bankmachine3_fifo_out_first;
wire          main_litedramcore_bankmachine3_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine3_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine3_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine3_level = 5'd0;
wire          main_litedramcore_bankmachine3_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine3_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine3_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine3_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine3_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine3_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine3_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine3_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine3_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine3_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine3_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine3_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine3_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine3_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine3_rdport_dat_r;
reg           main_litedramcore_bankmachine3_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine3_refresh_req;
reg           main_litedramcore_bankmachine3_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine3_req_addr;
wire          main_litedramcore_bankmachine3_req_lock;
reg           main_litedramcore_bankmachine3_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine3_req_ready;
wire          main_litedramcore_bankmachine3_req_valid;
reg           main_litedramcore_bankmachine3_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine3_req_we;
reg    [14:0] main_litedramcore_bankmachine3_row = 15'd0;
reg           main_litedramcore_bankmachine3_row_close = 1'd0;
reg           main_litedramcore_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine3_row_hit;
reg           main_litedramcore_bankmachine3_row_open = 1'd0;
reg           main_litedramcore_bankmachine3_row_opened = 1'd0;
reg           main_litedramcore_bankmachine3_sink_first = 1'd0;
reg           main_litedramcore_bankmachine3_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine3_sink_payload_addr;
wire          main_litedramcore_bankmachine3_sink_payload_we;
wire          main_litedramcore_bankmachine3_sink_ready;
wire          main_litedramcore_bankmachine3_sink_sink_first;
wire          main_litedramcore_bankmachine3_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine3_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine3_sink_sink_payload_we;
wire          main_litedramcore_bankmachine3_sink_sink_ready;
wire          main_litedramcore_bankmachine3_sink_sink_valid;
wire          main_litedramcore_bankmachine3_sink_valid;
wire          main_litedramcore_bankmachine3_source_first;
wire          main_litedramcore_bankmachine3_source_last;
wire   [21:0] main_litedramcore_bankmachine3_source_payload_addr;
wire          main_litedramcore_bankmachine3_source_payload_we;
wire          main_litedramcore_bankmachine3_source_ready;
wire          main_litedramcore_bankmachine3_source_source_first;
wire          main_litedramcore_bankmachine3_source_source_last;
wire   [21:0] main_litedramcore_bankmachine3_source_source_payload_addr;
wire          main_litedramcore_bankmachine3_source_source_payload_we;
wire          main_litedramcore_bankmachine3_source_source_ready;
wire          main_litedramcore_bankmachine3_source_source_valid;
wire          main_litedramcore_bankmachine3_source_valid;
wire   [24:0] main_litedramcore_bankmachine3_syncfifo3_din;
wire   [24:0] main_litedramcore_bankmachine3_syncfifo3_dout;
wire          main_litedramcore_bankmachine3_syncfifo3_re;
wire          main_litedramcore_bankmachine3_syncfifo3_readable;
wire          main_litedramcore_bankmachine3_syncfifo3_we;
wire          main_litedramcore_bankmachine3_syncfifo3_writable;
reg     [2:0] main_litedramcore_bankmachine3_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine3_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine3_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine3_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine3_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine3_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine3_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine3_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine3_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine3_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine3_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine3_wrport_dat_w;
wire          main_litedramcore_bankmachine3_wrport_we;
reg           main_litedramcore_bankmachine4_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine4_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine4_cmd_payload_ba;
reg           main_litedramcore_bankmachine4_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine4_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine4_consume = 4'd0;
wire          main_litedramcore_bankmachine4_do_read;
wire          main_litedramcore_bankmachine4_fifo_in_first;
wire          main_litedramcore_bankmachine4_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine4_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine4_fifo_in_payload_we;
wire          main_litedramcore_bankmachine4_fifo_out_first;
wire          main_litedramcore_bankmachine4_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine4_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine4_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine4_level = 5'd0;
wire          main_litedramcore_bankmachine4_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine4_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine4_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine4_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine4_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine4_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine4_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine4_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine4_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine4_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine4_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine4_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine4_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine4_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine4_rdport_dat_r;
reg           main_litedramcore_bankmachine4_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine4_refresh_req;
reg           main_litedramcore_bankmachine4_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine4_req_addr;
wire          main_litedramcore_bankmachine4_req_lock;
reg           main_litedramcore_bankmachine4_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine4_req_ready;
wire          main_litedramcore_bankmachine4_req_valid;
reg           main_litedramcore_bankmachine4_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine4_req_we;
reg    [14:0] main_litedramcore_bankmachine4_row = 15'd0;
reg           main_litedramcore_bankmachine4_row_close = 1'd0;
reg           main_litedramcore_bankmachine4_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine4_row_hit;
reg           main_litedramcore_bankmachine4_row_open = 1'd0;
reg           main_litedramcore_bankmachine4_row_opened = 1'd0;
reg           main_litedramcore_bankmachine4_sink_first = 1'd0;
reg           main_litedramcore_bankmachine4_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine4_sink_payload_addr;
wire          main_litedramcore_bankmachine4_sink_payload_we;
wire          main_litedramcore_bankmachine4_sink_ready;
wire          main_litedramcore_bankmachine4_sink_sink_first;
wire          main_litedramcore_bankmachine4_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine4_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine4_sink_sink_payload_we;
wire          main_litedramcore_bankmachine4_sink_sink_ready;
wire          main_litedramcore_bankmachine4_sink_sink_valid;
wire          main_litedramcore_bankmachine4_sink_valid;
wire          main_litedramcore_bankmachine4_source_first;
wire          main_litedramcore_bankmachine4_source_last;
wire   [21:0] main_litedramcore_bankmachine4_source_payload_addr;
wire          main_litedramcore_bankmachine4_source_payload_we;
wire          main_litedramcore_bankmachine4_source_ready;
wire          main_litedramcore_bankmachine4_source_source_first;
wire          main_litedramcore_bankmachine4_source_source_last;
wire   [21:0] main_litedramcore_bankmachine4_source_source_payload_addr;
wire          main_litedramcore_bankmachine4_source_source_payload_we;
wire          main_litedramcore_bankmachine4_source_source_ready;
wire          main_litedramcore_bankmachine4_source_source_valid;
wire          main_litedramcore_bankmachine4_source_valid;
wire   [24:0] main_litedramcore_bankmachine4_syncfifo4_din;
wire   [24:0] main_litedramcore_bankmachine4_syncfifo4_dout;
wire          main_litedramcore_bankmachine4_syncfifo4_re;
wire          main_litedramcore_bankmachine4_syncfifo4_readable;
wire          main_litedramcore_bankmachine4_syncfifo4_we;
wire          main_litedramcore_bankmachine4_syncfifo4_writable;
reg     [2:0] main_litedramcore_bankmachine4_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine4_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine4_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine4_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine4_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine4_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine4_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine4_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine4_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine4_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine4_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine4_wrport_dat_w;
wire          main_litedramcore_bankmachine4_wrport_we;
reg           main_litedramcore_bankmachine5_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine5_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine5_cmd_payload_ba;
reg           main_litedramcore_bankmachine5_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine5_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine5_consume = 4'd0;
wire          main_litedramcore_bankmachine5_do_read;
wire          main_litedramcore_bankmachine5_fifo_in_first;
wire          main_litedramcore_bankmachine5_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine5_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine5_fifo_in_payload_we;
wire          main_litedramcore_bankmachine5_fifo_out_first;
wire          main_litedramcore_bankmachine5_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine5_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine5_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine5_level = 5'd0;
wire          main_litedramcore_bankmachine5_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine5_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine5_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine5_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine5_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine5_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine5_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine5_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine5_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine5_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine5_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine5_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine5_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine5_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine5_rdport_dat_r;
reg           main_litedramcore_bankmachine5_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine5_refresh_req;
reg           main_litedramcore_bankmachine5_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine5_req_addr;
wire          main_litedramcore_bankmachine5_req_lock;
reg           main_litedramcore_bankmachine5_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine5_req_ready;
wire          main_litedramcore_bankmachine5_req_valid;
reg           main_litedramcore_bankmachine5_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine5_req_we;
reg    [14:0] main_litedramcore_bankmachine5_row = 15'd0;
reg           main_litedramcore_bankmachine5_row_close = 1'd0;
reg           main_litedramcore_bankmachine5_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine5_row_hit;
reg           main_litedramcore_bankmachine5_row_open = 1'd0;
reg           main_litedramcore_bankmachine5_row_opened = 1'd0;
reg           main_litedramcore_bankmachine5_sink_first = 1'd0;
reg           main_litedramcore_bankmachine5_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine5_sink_payload_addr;
wire          main_litedramcore_bankmachine5_sink_payload_we;
wire          main_litedramcore_bankmachine5_sink_ready;
wire          main_litedramcore_bankmachine5_sink_sink_first;
wire          main_litedramcore_bankmachine5_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine5_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine5_sink_sink_payload_we;
wire          main_litedramcore_bankmachine5_sink_sink_ready;
wire          main_litedramcore_bankmachine5_sink_sink_valid;
wire          main_litedramcore_bankmachine5_sink_valid;
wire          main_litedramcore_bankmachine5_source_first;
wire          main_litedramcore_bankmachine5_source_last;
wire   [21:0] main_litedramcore_bankmachine5_source_payload_addr;
wire          main_litedramcore_bankmachine5_source_payload_we;
wire          main_litedramcore_bankmachine5_source_ready;
wire          main_litedramcore_bankmachine5_source_source_first;
wire          main_litedramcore_bankmachine5_source_source_last;
wire   [21:0] main_litedramcore_bankmachine5_source_source_payload_addr;
wire          main_litedramcore_bankmachine5_source_source_payload_we;
wire          main_litedramcore_bankmachine5_source_source_ready;
wire          main_litedramcore_bankmachine5_source_source_valid;
wire          main_litedramcore_bankmachine5_source_valid;
wire   [24:0] main_litedramcore_bankmachine5_syncfifo5_din;
wire   [24:0] main_litedramcore_bankmachine5_syncfifo5_dout;
wire          main_litedramcore_bankmachine5_syncfifo5_re;
wire          main_litedramcore_bankmachine5_syncfifo5_readable;
wire          main_litedramcore_bankmachine5_syncfifo5_we;
wire          main_litedramcore_bankmachine5_syncfifo5_writable;
reg     [2:0] main_litedramcore_bankmachine5_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine5_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine5_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine5_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine5_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine5_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine5_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine5_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine5_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine5_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine5_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine5_wrport_dat_w;
wire          main_litedramcore_bankmachine5_wrport_we;
reg           main_litedramcore_bankmachine6_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine6_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine6_cmd_payload_ba;
reg           main_litedramcore_bankmachine6_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine6_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine6_consume = 4'd0;
wire          main_litedramcore_bankmachine6_do_read;
wire          main_litedramcore_bankmachine6_fifo_in_first;
wire          main_litedramcore_bankmachine6_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine6_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine6_fifo_in_payload_we;
wire          main_litedramcore_bankmachine6_fifo_out_first;
wire          main_litedramcore_bankmachine6_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine6_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine6_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine6_level = 5'd0;
wire          main_litedramcore_bankmachine6_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine6_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine6_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine6_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine6_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine6_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine6_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine6_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine6_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine6_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine6_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine6_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine6_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine6_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine6_rdport_dat_r;
reg           main_litedramcore_bankmachine6_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine6_refresh_req;
reg           main_litedramcore_bankmachine6_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine6_req_addr;
wire          main_litedramcore_bankmachine6_req_lock;
reg           main_litedramcore_bankmachine6_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine6_req_ready;
wire          main_litedramcore_bankmachine6_req_valid;
reg           main_litedramcore_bankmachine6_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine6_req_we;
reg    [14:0] main_litedramcore_bankmachine6_row = 15'd0;
reg           main_litedramcore_bankmachine6_row_close = 1'd0;
reg           main_litedramcore_bankmachine6_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine6_row_hit;
reg           main_litedramcore_bankmachine6_row_open = 1'd0;
reg           main_litedramcore_bankmachine6_row_opened = 1'd0;
reg           main_litedramcore_bankmachine6_sink_first = 1'd0;
reg           main_litedramcore_bankmachine6_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine6_sink_payload_addr;
wire          main_litedramcore_bankmachine6_sink_payload_we;
wire          main_litedramcore_bankmachine6_sink_ready;
wire          main_litedramcore_bankmachine6_sink_sink_first;
wire          main_litedramcore_bankmachine6_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine6_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine6_sink_sink_payload_we;
wire          main_litedramcore_bankmachine6_sink_sink_ready;
wire          main_litedramcore_bankmachine6_sink_sink_valid;
wire          main_litedramcore_bankmachine6_sink_valid;
wire          main_litedramcore_bankmachine6_source_first;
wire          main_litedramcore_bankmachine6_source_last;
wire   [21:0] main_litedramcore_bankmachine6_source_payload_addr;
wire          main_litedramcore_bankmachine6_source_payload_we;
wire          main_litedramcore_bankmachine6_source_ready;
wire          main_litedramcore_bankmachine6_source_source_first;
wire          main_litedramcore_bankmachine6_source_source_last;
wire   [21:0] main_litedramcore_bankmachine6_source_source_payload_addr;
wire          main_litedramcore_bankmachine6_source_source_payload_we;
wire          main_litedramcore_bankmachine6_source_source_ready;
wire          main_litedramcore_bankmachine6_source_source_valid;
wire          main_litedramcore_bankmachine6_source_valid;
wire   [24:0] main_litedramcore_bankmachine6_syncfifo6_din;
wire   [24:0] main_litedramcore_bankmachine6_syncfifo6_dout;
wire          main_litedramcore_bankmachine6_syncfifo6_re;
wire          main_litedramcore_bankmachine6_syncfifo6_readable;
wire          main_litedramcore_bankmachine6_syncfifo6_we;
wire          main_litedramcore_bankmachine6_syncfifo6_writable;
reg     [2:0] main_litedramcore_bankmachine6_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine6_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine6_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine6_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine6_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine6_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine6_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine6_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine6_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine6_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine6_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine6_wrport_dat_w;
wire          main_litedramcore_bankmachine6_wrport_we;
reg           main_litedramcore_bankmachine7_auto_precharge = 1'd0;
reg    [14:0] main_litedramcore_bankmachine7_cmd_payload_a = 15'd0;
wire    [2:0] main_litedramcore_bankmachine7_cmd_payload_ba;
reg           main_litedramcore_bankmachine7_cmd_payload_cas = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_payload_ras = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_payload_we = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_ready = 1'd0;
reg           main_litedramcore_bankmachine7_cmd_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine7_consume = 4'd0;
wire          main_litedramcore_bankmachine7_do_read;
wire          main_litedramcore_bankmachine7_fifo_in_first;
wire          main_litedramcore_bankmachine7_fifo_in_last;
wire   [21:0] main_litedramcore_bankmachine7_fifo_in_payload_addr;
wire          main_litedramcore_bankmachine7_fifo_in_payload_we;
wire          main_litedramcore_bankmachine7_fifo_out_first;
wire          main_litedramcore_bankmachine7_fifo_out_last;
wire   [21:0] main_litedramcore_bankmachine7_fifo_out_payload_addr;
wire          main_litedramcore_bankmachine7_fifo_out_payload_we;
reg     [4:0] main_litedramcore_bankmachine7_level = 5'd0;
wire          main_litedramcore_bankmachine7_pipe_valid_sink_first;
wire          main_litedramcore_bankmachine7_pipe_valid_sink_last;
wire   [21:0] main_litedramcore_bankmachine7_pipe_valid_sink_payload_addr;
wire          main_litedramcore_bankmachine7_pipe_valid_sink_payload_we;
wire          main_litedramcore_bankmachine7_pipe_valid_sink_ready;
wire          main_litedramcore_bankmachine7_pipe_valid_sink_valid;
reg           main_litedramcore_bankmachine7_pipe_valid_source_first = 1'd0;
reg           main_litedramcore_bankmachine7_pipe_valid_source_last = 1'd0;
reg    [21:0] main_litedramcore_bankmachine7_pipe_valid_source_payload_addr = 22'd0;
reg           main_litedramcore_bankmachine7_pipe_valid_source_payload_we = 1'd0;
wire          main_litedramcore_bankmachine7_pipe_valid_source_ready;
reg           main_litedramcore_bankmachine7_pipe_valid_source_valid = 1'd0;
reg     [3:0] main_litedramcore_bankmachine7_produce = 4'd0;
wire    [3:0] main_litedramcore_bankmachine7_rdport_adr;
wire   [24:0] main_litedramcore_bankmachine7_rdport_dat_r;
reg           main_litedramcore_bankmachine7_refresh_gnt = 1'd0;
wire          main_litedramcore_bankmachine7_refresh_req;
reg           main_litedramcore_bankmachine7_replace = 1'd0;
wire   [21:0] main_litedramcore_bankmachine7_req_addr;
wire          main_litedramcore_bankmachine7_req_lock;
reg           main_litedramcore_bankmachine7_req_rdata_valid = 1'd0;
wire          main_litedramcore_bankmachine7_req_ready;
wire          main_litedramcore_bankmachine7_req_valid;
reg           main_litedramcore_bankmachine7_req_wdata_ready = 1'd0;
wire          main_litedramcore_bankmachine7_req_we;
reg    [14:0] main_litedramcore_bankmachine7_row = 15'd0;
reg           main_litedramcore_bankmachine7_row_close = 1'd0;
reg           main_litedramcore_bankmachine7_row_col_n_addr_sel = 1'd0;
wire          main_litedramcore_bankmachine7_row_hit;
reg           main_litedramcore_bankmachine7_row_open = 1'd0;
reg           main_litedramcore_bankmachine7_row_opened = 1'd0;
reg           main_litedramcore_bankmachine7_sink_first = 1'd0;
reg           main_litedramcore_bankmachine7_sink_last = 1'd0;
wire   [21:0] main_litedramcore_bankmachine7_sink_payload_addr;
wire          main_litedramcore_bankmachine7_sink_payload_we;
wire          main_litedramcore_bankmachine7_sink_ready;
wire          main_litedramcore_bankmachine7_sink_sink_first;
wire          main_litedramcore_bankmachine7_sink_sink_last;
wire   [21:0] main_litedramcore_bankmachine7_sink_sink_payload_addr;
wire          main_litedramcore_bankmachine7_sink_sink_payload_we;
wire          main_litedramcore_bankmachine7_sink_sink_ready;
wire          main_litedramcore_bankmachine7_sink_sink_valid;
wire          main_litedramcore_bankmachine7_sink_valid;
wire          main_litedramcore_bankmachine7_source_first;
wire          main_litedramcore_bankmachine7_source_last;
wire   [21:0] main_litedramcore_bankmachine7_source_payload_addr;
wire          main_litedramcore_bankmachine7_source_payload_we;
wire          main_litedramcore_bankmachine7_source_ready;
wire          main_litedramcore_bankmachine7_source_source_first;
wire          main_litedramcore_bankmachine7_source_source_last;
wire   [21:0] main_litedramcore_bankmachine7_source_source_payload_addr;
wire          main_litedramcore_bankmachine7_source_source_payload_we;
wire          main_litedramcore_bankmachine7_source_source_ready;
wire          main_litedramcore_bankmachine7_source_source_valid;
wire          main_litedramcore_bankmachine7_source_valid;
wire   [24:0] main_litedramcore_bankmachine7_syncfifo7_din;
wire   [24:0] main_litedramcore_bankmachine7_syncfifo7_dout;
wire          main_litedramcore_bankmachine7_syncfifo7_re;
wire          main_litedramcore_bankmachine7_syncfifo7_readable;
wire          main_litedramcore_bankmachine7_syncfifo7_we;
wire          main_litedramcore_bankmachine7_syncfifo7_writable;
reg     [2:0] main_litedramcore_bankmachine7_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine7_trascon_ready = 1'd0;
wire          main_litedramcore_bankmachine7_trascon_valid;
reg     [2:0] main_litedramcore_bankmachine7_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine7_trccon_ready = 1'd0;
wire          main_litedramcore_bankmachine7_trccon_valid;
reg     [2:0] main_litedramcore_bankmachine7_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_bankmachine7_twtpcon_ready = 1'd0;
wire          main_litedramcore_bankmachine7_twtpcon_valid;
reg     [3:0] main_litedramcore_bankmachine7_wrport_adr = 4'd0;
wire   [24:0] main_litedramcore_bankmachine7_wrport_dat_r;
wire   [24:0] main_litedramcore_bankmachine7_wrport_dat_w;
wire          main_litedramcore_bankmachine7_wrport_we;
wire          main_litedramcore_cas_allowed;
wire          main_litedramcore_choose_cmd_ce;
wire   [14:0] main_litedramcore_choose_cmd_cmd_payload_a;
wire    [2:0] main_litedramcore_choose_cmd_cmd_payload_ba;
reg           main_litedramcore_choose_cmd_cmd_payload_cas = 1'd0;
wire          main_litedramcore_choose_cmd_cmd_payload_is_cmd;
wire          main_litedramcore_choose_cmd_cmd_payload_is_read;
wire          main_litedramcore_choose_cmd_cmd_payload_is_write;
reg           main_litedramcore_choose_cmd_cmd_payload_ras = 1'd0;
reg           main_litedramcore_choose_cmd_cmd_payload_we = 1'd0;
reg           main_litedramcore_choose_cmd_cmd_ready = 1'd0;
wire          main_litedramcore_choose_cmd_cmd_valid;
reg     [2:0] main_litedramcore_choose_cmd_grant = 3'd0;
wire    [7:0] main_litedramcore_choose_cmd_request;
reg     [7:0] main_litedramcore_choose_cmd_valids = 8'd0;
reg           main_litedramcore_choose_cmd_want_activates = 1'd0;
reg           main_litedramcore_choose_cmd_want_cmds = 1'd0;
reg           main_litedramcore_choose_cmd_want_reads = 1'd0;
reg           main_litedramcore_choose_cmd_want_writes = 1'd0;
wire          main_litedramcore_choose_req_ce;
wire   [14:0] main_litedramcore_choose_req_cmd_payload_a;
wire    [2:0] main_litedramcore_choose_req_cmd_payload_ba;
reg           main_litedramcore_choose_req_cmd_payload_cas = 1'd0;
wire          main_litedramcore_choose_req_cmd_payload_is_cmd;
wire          main_litedramcore_choose_req_cmd_payload_is_read;
wire          main_litedramcore_choose_req_cmd_payload_is_write;
reg           main_litedramcore_choose_req_cmd_payload_ras = 1'd0;
reg           main_litedramcore_choose_req_cmd_payload_we = 1'd0;
reg           main_litedramcore_choose_req_cmd_ready = 1'd0;
wire          main_litedramcore_choose_req_cmd_valid;
reg     [2:0] main_litedramcore_choose_req_grant = 3'd0;
wire    [7:0] main_litedramcore_choose_req_request;
reg     [7:0] main_litedramcore_choose_req_valids = 8'd0;
reg           main_litedramcore_choose_req_want_activates = 1'd0;
reg           main_litedramcore_choose_req_want_cmds = 1'd0;
reg           main_litedramcore_choose_req_want_reads = 1'd0;
reg           main_litedramcore_choose_req_want_writes = 1'd0;
wire          main_litedramcore_cke;
reg           main_litedramcore_cmd_last = 1'd0;
reg    [14:0] main_litedramcore_cmd_payload_a = 15'd0;
reg     [2:0] main_litedramcore_cmd_payload_ba = 3'd0;
reg           main_litedramcore_cmd_payload_cas = 1'd0;
reg           main_litedramcore_cmd_payload_is_read = 1'd0;
reg           main_litedramcore_cmd_payload_is_write = 1'd0;
reg           main_litedramcore_cmd_payload_ras = 1'd0;
reg           main_litedramcore_cmd_payload_we = 1'd0;
reg           main_litedramcore_cmd_ready = 1'd0;
reg           main_litedramcore_cmd_valid = 1'd0;
reg           main_litedramcore_csr_dfi_p0_act_n = 1'd1;
wire   [14:0] main_litedramcore_csr_dfi_p0_address;
wire    [2:0] main_litedramcore_csr_dfi_p0_bank;
reg           main_litedramcore_csr_dfi_p0_cas_n = 1'd1;
wire          main_litedramcore_csr_dfi_p0_cke;
reg           main_litedramcore_csr_dfi_p0_cs_n = 1'd1;
wire          main_litedramcore_csr_dfi_p0_odt;
reg           main_litedramcore_csr_dfi_p0_ras_n = 1'd1;
reg    [63:0] main_litedramcore_csr_dfi_p0_rddata = 64'd0;
wire          main_litedramcore_csr_dfi_p0_rddata_en;
reg           main_litedramcore_csr_dfi_p0_rddata_valid = 1'd0;
wire          main_litedramcore_csr_dfi_p0_reset_n;
reg           main_litedramcore_csr_dfi_p0_we_n = 1'd1;
wire   [63:0] main_litedramcore_csr_dfi_p0_wrdata;
wire          main_litedramcore_csr_dfi_p0_wrdata_en;
wire    [7:0] main_litedramcore_csr_dfi_p0_wrdata_mask;
reg           main_litedramcore_csr_dfi_p1_act_n = 1'd1;
wire   [14:0] main_litedramcore_csr_dfi_p1_address;
wire    [2:0] main_litedramcore_csr_dfi_p1_bank;
reg           main_litedramcore_csr_dfi_p1_cas_n = 1'd1;
wire          main_litedramcore_csr_dfi_p1_cke;
reg           main_litedramcore_csr_dfi_p1_cs_n = 1'd1;
wire          main_litedramcore_csr_dfi_p1_odt;
reg           main_litedramcore_csr_dfi_p1_ras_n = 1'd1;
reg    [63:0] main_litedramcore_csr_dfi_p1_rddata = 64'd0;
wire          main_litedramcore_csr_dfi_p1_rddata_en;
reg           main_litedramcore_csr_dfi_p1_rddata_valid = 1'd0;
wire          main_litedramcore_csr_dfi_p1_reset_n;
reg           main_litedramcore_csr_dfi_p1_we_n = 1'd1;
wire   [63:0] main_litedramcore_csr_dfi_p1_wrdata;
wire          main_litedramcore_csr_dfi_p1_wrdata_en;
wire    [7:0] main_litedramcore_csr_dfi_p1_wrdata_mask;
reg           main_litedramcore_csr_dfi_p2_act_n = 1'd1;
wire   [14:0] main_litedramcore_csr_dfi_p2_address;
wire    [2:0] main_litedramcore_csr_dfi_p2_bank;
reg           main_litedramcore_csr_dfi_p2_cas_n = 1'd1;
wire          main_litedramcore_csr_dfi_p2_cke;
reg           main_litedramcore_csr_dfi_p2_cs_n = 1'd1;
wire          main_litedramcore_csr_dfi_p2_odt;
reg           main_litedramcore_csr_dfi_p2_ras_n = 1'd1;
reg    [63:0] main_litedramcore_csr_dfi_p2_rddata = 64'd0;
wire          main_litedramcore_csr_dfi_p2_rddata_en;
reg           main_litedramcore_csr_dfi_p2_rddata_valid = 1'd0;
wire          main_litedramcore_csr_dfi_p2_reset_n;
reg           main_litedramcore_csr_dfi_p2_we_n = 1'd1;
wire   [63:0] main_litedramcore_csr_dfi_p2_wrdata;
wire          main_litedramcore_csr_dfi_p2_wrdata_en;
wire    [7:0] main_litedramcore_csr_dfi_p2_wrdata_mask;
reg           main_litedramcore_csr_dfi_p3_act_n = 1'd1;
wire   [14:0] main_litedramcore_csr_dfi_p3_address;
wire    [2:0] main_litedramcore_csr_dfi_p3_bank;
reg           main_litedramcore_csr_dfi_p3_cas_n = 1'd1;
wire          main_litedramcore_csr_dfi_p3_cke;
reg           main_litedramcore_csr_dfi_p3_cs_n = 1'd1;
wire          main_litedramcore_csr_dfi_p3_odt;
reg           main_litedramcore_csr_dfi_p3_ras_n = 1'd1;
reg    [63:0] main_litedramcore_csr_dfi_p3_rddata = 64'd0;
wire          main_litedramcore_csr_dfi_p3_rddata_en;
reg           main_litedramcore_csr_dfi_p3_rddata_valid = 1'd0;
wire          main_litedramcore_csr_dfi_p3_reset_n;
reg           main_litedramcore_csr_dfi_p3_we_n = 1'd1;
wire   [63:0] main_litedramcore_csr_dfi_p3_wrdata;
wire          main_litedramcore_csr_dfi_p3_wrdata_en;
wire    [7:0] main_litedramcore_csr_dfi_p3_wrdata_mask;
reg           main_litedramcore_dfi_p0_act_n = 1'd1;
reg    [14:0] main_litedramcore_dfi_p0_address = 15'd0;
reg     [2:0] main_litedramcore_dfi_p0_bank = 3'd0;
reg           main_litedramcore_dfi_p0_cas_n = 1'd1;
wire          main_litedramcore_dfi_p0_cke;
reg           main_litedramcore_dfi_p0_cs_n = 1'd1;
wire          main_litedramcore_dfi_p0_odt;
reg           main_litedramcore_dfi_p0_ras_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p0_rddata;
reg           main_litedramcore_dfi_p0_rddata_en = 1'd0;
wire          main_litedramcore_dfi_p0_rddata_valid;
wire          main_litedramcore_dfi_p0_reset_n;
reg           main_litedramcore_dfi_p0_we_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p0_wrdata;
reg           main_litedramcore_dfi_p0_wrdata_en = 1'd0;
wire    [7:0] main_litedramcore_dfi_p0_wrdata_mask;
reg           main_litedramcore_dfi_p1_act_n = 1'd1;
reg    [14:0] main_litedramcore_dfi_p1_address = 15'd0;
reg     [2:0] main_litedramcore_dfi_p1_bank = 3'd0;
reg           main_litedramcore_dfi_p1_cas_n = 1'd1;
wire          main_litedramcore_dfi_p1_cke;
reg           main_litedramcore_dfi_p1_cs_n = 1'd1;
wire          main_litedramcore_dfi_p1_odt;
reg           main_litedramcore_dfi_p1_ras_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p1_rddata;
reg           main_litedramcore_dfi_p1_rddata_en = 1'd0;
wire          main_litedramcore_dfi_p1_rddata_valid;
wire          main_litedramcore_dfi_p1_reset_n;
reg           main_litedramcore_dfi_p1_we_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p1_wrdata;
reg           main_litedramcore_dfi_p1_wrdata_en = 1'd0;
wire    [7:0] main_litedramcore_dfi_p1_wrdata_mask;
reg           main_litedramcore_dfi_p2_act_n = 1'd1;
reg    [14:0] main_litedramcore_dfi_p2_address = 15'd0;
reg     [2:0] main_litedramcore_dfi_p2_bank = 3'd0;
reg           main_litedramcore_dfi_p2_cas_n = 1'd1;
wire          main_litedramcore_dfi_p2_cke;
reg           main_litedramcore_dfi_p2_cs_n = 1'd1;
wire          main_litedramcore_dfi_p2_odt;
reg           main_litedramcore_dfi_p2_ras_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p2_rddata;
reg           main_litedramcore_dfi_p2_rddata_en = 1'd0;
wire          main_litedramcore_dfi_p2_rddata_valid;
wire          main_litedramcore_dfi_p2_reset_n;
reg           main_litedramcore_dfi_p2_we_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p2_wrdata;
reg           main_litedramcore_dfi_p2_wrdata_en = 1'd0;
wire    [7:0] main_litedramcore_dfi_p2_wrdata_mask;
reg           main_litedramcore_dfi_p3_act_n = 1'd1;
reg    [14:0] main_litedramcore_dfi_p3_address = 15'd0;
reg     [2:0] main_litedramcore_dfi_p3_bank = 3'd0;
reg           main_litedramcore_dfi_p3_cas_n = 1'd1;
wire          main_litedramcore_dfi_p3_cke;
reg           main_litedramcore_dfi_p3_cs_n = 1'd1;
wire          main_litedramcore_dfi_p3_odt;
reg           main_litedramcore_dfi_p3_ras_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p3_rddata;
reg           main_litedramcore_dfi_p3_rddata_en = 1'd0;
wire          main_litedramcore_dfi_p3_rddata_valid;
wire          main_litedramcore_dfi_p3_reset_n;
reg           main_litedramcore_dfi_p3_we_n = 1'd1;
wire   [63:0] main_litedramcore_dfi_p3_wrdata;
reg           main_litedramcore_dfi_p3_wrdata_en = 1'd0;
wire    [7:0] main_litedramcore_dfi_p3_wrdata_mask;
reg           main_litedramcore_en0 = 1'd0;
reg           main_litedramcore_en1 = 1'd0;
reg           main_litedramcore_ext_dfi_p0_act_n = 1'd1;
reg    [14:0] main_litedramcore_ext_dfi_p0_address = 15'd0;
reg     [2:0] main_litedramcore_ext_dfi_p0_bank = 3'd0;
reg           main_litedramcore_ext_dfi_p0_cas_n = 1'd1;
reg           main_litedramcore_ext_dfi_p0_cke = 1'd0;
reg           main_litedramcore_ext_dfi_p0_cs_n = 1'd1;
reg           main_litedramcore_ext_dfi_p0_odt = 1'd0;
reg           main_litedramcore_ext_dfi_p0_ras_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p0_rddata = 64'd0;
reg           main_litedramcore_ext_dfi_p0_rddata_en = 1'd0;
reg           main_litedramcore_ext_dfi_p0_rddata_valid = 1'd0;
reg           main_litedramcore_ext_dfi_p0_reset_n = 1'd0;
reg           main_litedramcore_ext_dfi_p0_we_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p0_wrdata = 64'd0;
reg           main_litedramcore_ext_dfi_p0_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_ext_dfi_p0_wrdata_mask = 8'd0;
reg           main_litedramcore_ext_dfi_p1_act_n = 1'd1;
reg    [14:0] main_litedramcore_ext_dfi_p1_address = 15'd0;
reg     [2:0] main_litedramcore_ext_dfi_p1_bank = 3'd0;
reg           main_litedramcore_ext_dfi_p1_cas_n = 1'd1;
reg           main_litedramcore_ext_dfi_p1_cke = 1'd0;
reg           main_litedramcore_ext_dfi_p1_cs_n = 1'd1;
reg           main_litedramcore_ext_dfi_p1_odt = 1'd0;
reg           main_litedramcore_ext_dfi_p1_ras_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p1_rddata = 64'd0;
reg           main_litedramcore_ext_dfi_p1_rddata_en = 1'd0;
reg           main_litedramcore_ext_dfi_p1_rddata_valid = 1'd0;
reg           main_litedramcore_ext_dfi_p1_reset_n = 1'd0;
reg           main_litedramcore_ext_dfi_p1_we_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p1_wrdata = 64'd0;
reg           main_litedramcore_ext_dfi_p1_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_ext_dfi_p1_wrdata_mask = 8'd0;
reg           main_litedramcore_ext_dfi_p2_act_n = 1'd1;
reg    [14:0] main_litedramcore_ext_dfi_p2_address = 15'd0;
reg     [2:0] main_litedramcore_ext_dfi_p2_bank = 3'd0;
reg           main_litedramcore_ext_dfi_p2_cas_n = 1'd1;
reg           main_litedramcore_ext_dfi_p2_cke = 1'd0;
reg           main_litedramcore_ext_dfi_p2_cs_n = 1'd1;
reg           main_litedramcore_ext_dfi_p2_odt = 1'd0;
reg           main_litedramcore_ext_dfi_p2_ras_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p2_rddata = 64'd0;
reg           main_litedramcore_ext_dfi_p2_rddata_en = 1'd0;
reg           main_litedramcore_ext_dfi_p2_rddata_valid = 1'd0;
reg           main_litedramcore_ext_dfi_p2_reset_n = 1'd0;
reg           main_litedramcore_ext_dfi_p2_we_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p2_wrdata = 64'd0;
reg           main_litedramcore_ext_dfi_p2_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_ext_dfi_p2_wrdata_mask = 8'd0;
reg           main_litedramcore_ext_dfi_p3_act_n = 1'd1;
reg    [14:0] main_litedramcore_ext_dfi_p3_address = 15'd0;
reg     [2:0] main_litedramcore_ext_dfi_p3_bank = 3'd0;
reg           main_litedramcore_ext_dfi_p3_cas_n = 1'd1;
reg           main_litedramcore_ext_dfi_p3_cke = 1'd0;
reg           main_litedramcore_ext_dfi_p3_cs_n = 1'd1;
reg           main_litedramcore_ext_dfi_p3_odt = 1'd0;
reg           main_litedramcore_ext_dfi_p3_ras_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p3_rddata = 64'd0;
reg           main_litedramcore_ext_dfi_p3_rddata_en = 1'd0;
reg           main_litedramcore_ext_dfi_p3_rddata_valid = 1'd0;
reg           main_litedramcore_ext_dfi_p3_reset_n = 1'd0;
reg           main_litedramcore_ext_dfi_p3_we_n = 1'd1;
reg    [63:0] main_litedramcore_ext_dfi_p3_wrdata = 64'd0;
reg           main_litedramcore_ext_dfi_p3_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_ext_dfi_p3_wrdata_mask = 8'd0;
reg           main_litedramcore_ext_dfi_sel = 1'd0;
wire          main_litedramcore_go_to_refresh;
wire   [21:0] main_litedramcore_interface_bank0_addr;
wire          main_litedramcore_interface_bank0_lock;
wire          main_litedramcore_interface_bank0_rdata_valid;
wire          main_litedramcore_interface_bank0_ready;
wire          main_litedramcore_interface_bank0_valid;
wire          main_litedramcore_interface_bank0_wdata_ready;
wire          main_litedramcore_interface_bank0_we;
wire   [21:0] main_litedramcore_interface_bank1_addr;
wire          main_litedramcore_interface_bank1_lock;
wire          main_litedramcore_interface_bank1_rdata_valid;
wire          main_litedramcore_interface_bank1_ready;
wire          main_litedramcore_interface_bank1_valid;
wire          main_litedramcore_interface_bank1_wdata_ready;
wire          main_litedramcore_interface_bank1_we;
wire   [21:0] main_litedramcore_interface_bank2_addr;
wire          main_litedramcore_interface_bank2_lock;
wire          main_litedramcore_interface_bank2_rdata_valid;
wire          main_litedramcore_interface_bank2_ready;
wire          main_litedramcore_interface_bank2_valid;
wire          main_litedramcore_interface_bank2_wdata_ready;
wire          main_litedramcore_interface_bank2_we;
wire   [21:0] main_litedramcore_interface_bank3_addr;
wire          main_litedramcore_interface_bank3_lock;
wire          main_litedramcore_interface_bank3_rdata_valid;
wire          main_litedramcore_interface_bank3_ready;
wire          main_litedramcore_interface_bank3_valid;
wire          main_litedramcore_interface_bank3_wdata_ready;
wire          main_litedramcore_interface_bank3_we;
wire   [21:0] main_litedramcore_interface_bank4_addr;
wire          main_litedramcore_interface_bank4_lock;
wire          main_litedramcore_interface_bank4_rdata_valid;
wire          main_litedramcore_interface_bank4_ready;
wire          main_litedramcore_interface_bank4_valid;
wire          main_litedramcore_interface_bank4_wdata_ready;
wire          main_litedramcore_interface_bank4_we;
wire   [21:0] main_litedramcore_interface_bank5_addr;
wire          main_litedramcore_interface_bank5_lock;
wire          main_litedramcore_interface_bank5_rdata_valid;
wire          main_litedramcore_interface_bank5_ready;
wire          main_litedramcore_interface_bank5_valid;
wire          main_litedramcore_interface_bank5_wdata_ready;
wire          main_litedramcore_interface_bank5_we;
wire   [21:0] main_litedramcore_interface_bank6_addr;
wire          main_litedramcore_interface_bank6_lock;
wire          main_litedramcore_interface_bank6_rdata_valid;
wire          main_litedramcore_interface_bank6_ready;
wire          main_litedramcore_interface_bank6_valid;
wire          main_litedramcore_interface_bank6_wdata_ready;
wire          main_litedramcore_interface_bank6_we;
wire   [21:0] main_litedramcore_interface_bank7_addr;
wire          main_litedramcore_interface_bank7_lock;
wire          main_litedramcore_interface_bank7_rdata_valid;
wire          main_litedramcore_interface_bank7_ready;
wire          main_litedramcore_interface_bank7_valid;
wire          main_litedramcore_interface_bank7_wdata_ready;
wire          main_litedramcore_interface_bank7_we;
wire  [255:0] main_litedramcore_interface_rdata;
reg   [255:0] main_litedramcore_interface_wdata = 256'd0;
reg    [31:0] main_litedramcore_interface_wdata_we = 32'd0;
reg           main_litedramcore_master_p0_act_n = 1'd1;
reg    [14:0] main_litedramcore_master_p0_address = 15'd0;
reg     [2:0] main_litedramcore_master_p0_bank = 3'd0;
reg           main_litedramcore_master_p0_cas_n = 1'd1;
reg           main_litedramcore_master_p0_cke = 1'd0;
reg           main_litedramcore_master_p0_cs_n = 1'd1;
reg           main_litedramcore_master_p0_odt = 1'd0;
reg           main_litedramcore_master_p0_ras_n = 1'd1;
wire   [63:0] main_litedramcore_master_p0_rddata;
reg           main_litedramcore_master_p0_rddata_en = 1'd0;
wire          main_litedramcore_master_p0_rddata_valid;
reg           main_litedramcore_master_p0_reset_n = 1'd0;
reg           main_litedramcore_master_p0_we_n = 1'd1;
reg    [63:0] main_litedramcore_master_p0_wrdata = 64'd0;
reg           main_litedramcore_master_p0_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_master_p0_wrdata_mask = 8'd0;
reg           main_litedramcore_master_p1_act_n = 1'd1;
reg    [14:0] main_litedramcore_master_p1_address = 15'd0;
reg     [2:0] main_litedramcore_master_p1_bank = 3'd0;
reg           main_litedramcore_master_p1_cas_n = 1'd1;
reg           main_litedramcore_master_p1_cke = 1'd0;
reg           main_litedramcore_master_p1_cs_n = 1'd1;
reg           main_litedramcore_master_p1_odt = 1'd0;
reg           main_litedramcore_master_p1_ras_n = 1'd1;
wire   [63:0] main_litedramcore_master_p1_rddata;
reg           main_litedramcore_master_p1_rddata_en = 1'd0;
wire          main_litedramcore_master_p1_rddata_valid;
reg           main_litedramcore_master_p1_reset_n = 1'd0;
reg           main_litedramcore_master_p1_we_n = 1'd1;
reg    [63:0] main_litedramcore_master_p1_wrdata = 64'd0;
reg           main_litedramcore_master_p1_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_master_p1_wrdata_mask = 8'd0;
reg           main_litedramcore_master_p2_act_n = 1'd1;
reg    [14:0] main_litedramcore_master_p2_address = 15'd0;
reg     [2:0] main_litedramcore_master_p2_bank = 3'd0;
reg           main_litedramcore_master_p2_cas_n = 1'd1;
reg           main_litedramcore_master_p2_cke = 1'd0;
reg           main_litedramcore_master_p2_cs_n = 1'd1;
reg           main_litedramcore_master_p2_odt = 1'd0;
reg           main_litedramcore_master_p2_ras_n = 1'd1;
wire   [63:0] main_litedramcore_master_p2_rddata;
reg           main_litedramcore_master_p2_rddata_en = 1'd0;
wire          main_litedramcore_master_p2_rddata_valid;
reg           main_litedramcore_master_p2_reset_n = 1'd0;
reg           main_litedramcore_master_p2_we_n = 1'd1;
reg    [63:0] main_litedramcore_master_p2_wrdata = 64'd0;
reg           main_litedramcore_master_p2_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_master_p2_wrdata_mask = 8'd0;
reg           main_litedramcore_master_p3_act_n = 1'd1;
reg    [14:0] main_litedramcore_master_p3_address = 15'd0;
reg     [2:0] main_litedramcore_master_p3_bank = 3'd0;
reg           main_litedramcore_master_p3_cas_n = 1'd1;
reg           main_litedramcore_master_p3_cke = 1'd0;
reg           main_litedramcore_master_p3_cs_n = 1'd1;
reg           main_litedramcore_master_p3_odt = 1'd0;
reg           main_litedramcore_master_p3_ras_n = 1'd1;
wire   [63:0] main_litedramcore_master_p3_rddata;
reg           main_litedramcore_master_p3_rddata_en = 1'd0;
wire          main_litedramcore_master_p3_rddata_valid;
reg           main_litedramcore_master_p3_reset_n = 1'd0;
reg           main_litedramcore_master_p3_we_n = 1'd1;
reg    [63:0] main_litedramcore_master_p3_wrdata = 64'd0;
reg           main_litedramcore_master_p3_wrdata_en = 1'd0;
reg     [7:0] main_litedramcore_master_p3_wrdata_mask = 8'd0;
wire          main_litedramcore_max_time0;
wire          main_litedramcore_max_time1;
reg    [14:0] main_litedramcore_nop_a = 15'd0;
reg     [2:0] main_litedramcore_nop_ba = 3'd0;
wire    [1:0] main_litedramcore_nphases;
wire          main_litedramcore_odt;
reg           main_litedramcore_phaseinjector0_address_re = 1'd0;
reg    [14:0] main_litedramcore_phaseinjector0_address_storage = 15'd0;
reg           main_litedramcore_phaseinjector0_baddress_re = 1'd0;
reg     [2:0] main_litedramcore_phaseinjector0_baddress_storage = 3'd0;
wire          main_litedramcore_phaseinjector0_command_issue_r;
reg           main_litedramcore_phaseinjector0_command_issue_re = 1'd0;
reg           main_litedramcore_phaseinjector0_command_issue_w = 1'd0;
reg           main_litedramcore_phaseinjector0_command_issue_we = 1'd0;
reg           main_litedramcore_phaseinjector0_command_re = 1'd0;
reg     [7:0] main_litedramcore_phaseinjector0_command_storage = 8'd0;
wire          main_litedramcore_phaseinjector0_csrfield_cas;
wire          main_litedramcore_phaseinjector0_csrfield_cs;
wire          main_litedramcore_phaseinjector0_csrfield_cs_bottom;
wire          main_litedramcore_phaseinjector0_csrfield_cs_top;
wire          main_litedramcore_phaseinjector0_csrfield_ras;
wire          main_litedramcore_phaseinjector0_csrfield_rden;
wire          main_litedramcore_phaseinjector0_csrfield_we;
wire          main_litedramcore_phaseinjector0_csrfield_wren;
reg           main_litedramcore_phaseinjector0_rddata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector0_rddata_status = 64'd0;
wire          main_litedramcore_phaseinjector0_rddata_we;
reg           main_litedramcore_phaseinjector0_wrdata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector0_wrdata_storage = 64'd0;
reg           main_litedramcore_phaseinjector1_address_re = 1'd0;
reg    [14:0] main_litedramcore_phaseinjector1_address_storage = 15'd0;
reg           main_litedramcore_phaseinjector1_baddress_re = 1'd0;
reg     [2:0] main_litedramcore_phaseinjector1_baddress_storage = 3'd0;
wire          main_litedramcore_phaseinjector1_command_issue_r;
reg           main_litedramcore_phaseinjector1_command_issue_re = 1'd0;
reg           main_litedramcore_phaseinjector1_command_issue_w = 1'd0;
reg           main_litedramcore_phaseinjector1_command_issue_we = 1'd0;
reg           main_litedramcore_phaseinjector1_command_re = 1'd0;
reg     [7:0] main_litedramcore_phaseinjector1_command_storage = 8'd0;
wire          main_litedramcore_phaseinjector1_csrfield_cas;
wire          main_litedramcore_phaseinjector1_csrfield_cs;
wire          main_litedramcore_phaseinjector1_csrfield_cs_bottom;
wire          main_litedramcore_phaseinjector1_csrfield_cs_top;
wire          main_litedramcore_phaseinjector1_csrfield_ras;
wire          main_litedramcore_phaseinjector1_csrfield_rden;
wire          main_litedramcore_phaseinjector1_csrfield_we;
wire          main_litedramcore_phaseinjector1_csrfield_wren;
reg           main_litedramcore_phaseinjector1_rddata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector1_rddata_status = 64'd0;
wire          main_litedramcore_phaseinjector1_rddata_we;
reg           main_litedramcore_phaseinjector1_wrdata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector1_wrdata_storage = 64'd0;
reg           main_litedramcore_phaseinjector2_address_re = 1'd0;
reg    [14:0] main_litedramcore_phaseinjector2_address_storage = 15'd0;
reg           main_litedramcore_phaseinjector2_baddress_re = 1'd0;
reg     [2:0] main_litedramcore_phaseinjector2_baddress_storage = 3'd0;
wire          main_litedramcore_phaseinjector2_command_issue_r;
reg           main_litedramcore_phaseinjector2_command_issue_re = 1'd0;
reg           main_litedramcore_phaseinjector2_command_issue_w = 1'd0;
reg           main_litedramcore_phaseinjector2_command_issue_we = 1'd0;
reg           main_litedramcore_phaseinjector2_command_re = 1'd0;
reg     [7:0] main_litedramcore_phaseinjector2_command_storage = 8'd0;
wire          main_litedramcore_phaseinjector2_csrfield_cas;
wire          main_litedramcore_phaseinjector2_csrfield_cs;
wire          main_litedramcore_phaseinjector2_csrfield_cs_bottom;
wire          main_litedramcore_phaseinjector2_csrfield_cs_top;
wire          main_litedramcore_phaseinjector2_csrfield_ras;
wire          main_litedramcore_phaseinjector2_csrfield_rden;
wire          main_litedramcore_phaseinjector2_csrfield_we;
wire          main_litedramcore_phaseinjector2_csrfield_wren;
reg           main_litedramcore_phaseinjector2_rddata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector2_rddata_status = 64'd0;
wire          main_litedramcore_phaseinjector2_rddata_we;
reg           main_litedramcore_phaseinjector2_wrdata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector2_wrdata_storage = 64'd0;
reg           main_litedramcore_phaseinjector3_address_re = 1'd0;
reg    [14:0] main_litedramcore_phaseinjector3_address_storage = 15'd0;
reg           main_litedramcore_phaseinjector3_baddress_re = 1'd0;
reg     [2:0] main_litedramcore_phaseinjector3_baddress_storage = 3'd0;
wire          main_litedramcore_phaseinjector3_command_issue_r;
reg           main_litedramcore_phaseinjector3_command_issue_re = 1'd0;
reg           main_litedramcore_phaseinjector3_command_issue_w = 1'd0;
reg           main_litedramcore_phaseinjector3_command_issue_we = 1'd0;
reg           main_litedramcore_phaseinjector3_command_re = 1'd0;
reg     [7:0] main_litedramcore_phaseinjector3_command_storage = 8'd0;
wire          main_litedramcore_phaseinjector3_csrfield_cas;
wire          main_litedramcore_phaseinjector3_csrfield_cs;
wire          main_litedramcore_phaseinjector3_csrfield_cs_bottom;
wire          main_litedramcore_phaseinjector3_csrfield_cs_top;
wire          main_litedramcore_phaseinjector3_csrfield_ras;
wire          main_litedramcore_phaseinjector3_csrfield_rden;
wire          main_litedramcore_phaseinjector3_csrfield_we;
wire          main_litedramcore_phaseinjector3_csrfield_wren;
reg           main_litedramcore_phaseinjector3_rddata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector3_rddata_status = 64'd0;
wire          main_litedramcore_phaseinjector3_rddata_we;
reg           main_litedramcore_phaseinjector3_wrdata_re = 1'd0;
reg    [63:0] main_litedramcore_phaseinjector3_wrdata_storage = 64'd0;
reg           main_litedramcore_postponer_count = 1'd0;
wire          main_litedramcore_postponer_req_i;
reg           main_litedramcore_postponer_req_o = 1'd0;
wire          main_litedramcore_ras_allowed;
wire    [1:0] main_litedramcore_rdphase;
reg           main_litedramcore_re = 1'd0;
wire          main_litedramcore_read_available;
wire          main_litedramcore_reset_n;
wire          main_litedramcore_sel;
reg           main_litedramcore_sequencer_count = 1'd0;
wire          main_litedramcore_sequencer_done0;
reg           main_litedramcore_sequencer_done1 = 1'd0;
reg           main_litedramcore_sequencer_start0 = 1'd0;
wire          main_litedramcore_sequencer_start1;
reg     [5:0] main_litedramcore_sequencer_trigger = 6'd0;
wire          main_litedramcore_slave_p0_act_n;
wire   [14:0] main_litedramcore_slave_p0_address;
wire    [2:0] main_litedramcore_slave_p0_bank;
wire          main_litedramcore_slave_p0_cas_n;
wire          main_litedramcore_slave_p0_cke;
wire          main_litedramcore_slave_p0_cs_n;
wire          main_litedramcore_slave_p0_odt;
wire          main_litedramcore_slave_p0_ras_n;
reg    [63:0] main_litedramcore_slave_p0_rddata = 64'd0;
wire          main_litedramcore_slave_p0_rddata_en;
reg           main_litedramcore_slave_p0_rddata_valid = 1'd0;
wire          main_litedramcore_slave_p0_reset_n;
wire          main_litedramcore_slave_p0_we_n;
wire   [63:0] main_litedramcore_slave_p0_wrdata;
wire          main_litedramcore_slave_p0_wrdata_en;
wire    [7:0] main_litedramcore_slave_p0_wrdata_mask;
wire          main_litedramcore_slave_p1_act_n;
wire   [14:0] main_litedramcore_slave_p1_address;
wire    [2:0] main_litedramcore_slave_p1_bank;
wire          main_litedramcore_slave_p1_cas_n;
wire          main_litedramcore_slave_p1_cke;
wire          main_litedramcore_slave_p1_cs_n;
wire          main_litedramcore_slave_p1_odt;
wire          main_litedramcore_slave_p1_ras_n;
reg    [63:0] main_litedramcore_slave_p1_rddata = 64'd0;
wire          main_litedramcore_slave_p1_rddata_en;
reg           main_litedramcore_slave_p1_rddata_valid = 1'd0;
wire          main_litedramcore_slave_p1_reset_n;
wire          main_litedramcore_slave_p1_we_n;
wire   [63:0] main_litedramcore_slave_p1_wrdata;
wire          main_litedramcore_slave_p1_wrdata_en;
wire    [7:0] main_litedramcore_slave_p1_wrdata_mask;
wire          main_litedramcore_slave_p2_act_n;
wire   [14:0] main_litedramcore_slave_p2_address;
wire    [2:0] main_litedramcore_slave_p2_bank;
wire          main_litedramcore_slave_p2_cas_n;
wire          main_litedramcore_slave_p2_cke;
wire          main_litedramcore_slave_p2_cs_n;
wire          main_litedramcore_slave_p2_odt;
wire          main_litedramcore_slave_p2_ras_n;
reg    [63:0] main_litedramcore_slave_p2_rddata = 64'd0;
wire          main_litedramcore_slave_p2_rddata_en;
reg           main_litedramcore_slave_p2_rddata_valid = 1'd0;
wire          main_litedramcore_slave_p2_reset_n;
wire          main_litedramcore_slave_p2_we_n;
wire   [63:0] main_litedramcore_slave_p2_wrdata;
wire          main_litedramcore_slave_p2_wrdata_en;
wire    [7:0] main_litedramcore_slave_p2_wrdata_mask;
wire          main_litedramcore_slave_p3_act_n;
wire   [14:0] main_litedramcore_slave_p3_address;
wire    [2:0] main_litedramcore_slave_p3_bank;
wire          main_litedramcore_slave_p3_cas_n;
wire          main_litedramcore_slave_p3_cke;
wire          main_litedramcore_slave_p3_cs_n;
wire          main_litedramcore_slave_p3_odt;
wire          main_litedramcore_slave_p3_ras_n;
reg    [63:0] main_litedramcore_slave_p3_rddata = 64'd0;
wire          main_litedramcore_slave_p3_rddata_en;
reg           main_litedramcore_slave_p3_rddata_valid = 1'd0;
wire          main_litedramcore_slave_p3_reset_n;
wire          main_litedramcore_slave_p3_we_n;
wire   [63:0] main_litedramcore_slave_p3_wrdata;
wire          main_litedramcore_slave_p3_wrdata_en;
wire    [7:0] main_litedramcore_slave_p3_wrdata_mask;
reg     [1:0] main_litedramcore_steerer0 = 2'd0;
reg     [1:0] main_litedramcore_steerer1 = 2'd0;
reg           main_litedramcore_steerer10 = 1'd1;
reg           main_litedramcore_steerer11 = 1'd1;
reg     [1:0] main_litedramcore_steerer2 = 2'd0;
reg     [1:0] main_litedramcore_steerer3 = 2'd0;
reg           main_litedramcore_steerer4 = 1'd1;
reg           main_litedramcore_steerer5 = 1'd1;
reg           main_litedramcore_steerer6 = 1'd1;
reg           main_litedramcore_steerer7 = 1'd1;
reg           main_litedramcore_steerer8 = 1'd1;
reg           main_litedramcore_steerer9 = 1'd1;
reg     [3:0] main_litedramcore_storage = 4'd1;
reg           main_litedramcore_tccdcon_count = 1'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_tccdcon_ready = 1'd0;
wire          main_litedramcore_tccdcon_valid;
wire    [2:0] main_litedramcore_tfawcon_count;
(* dont_touch = "true" *)
reg           main_litedramcore_tfawcon_ready = 1'd1;
wire          main_litedramcore_tfawcon_valid;
reg     [4:0] main_litedramcore_tfawcon_window = 5'd0;
reg     [4:0] main_litedramcore_time0 = 5'd0;
reg     [3:0] main_litedramcore_time1 = 4'd0;
wire    [9:0] main_litedramcore_timer_count0;
reg     [9:0] main_litedramcore_timer_count1 = 10'd781;
wire          main_litedramcore_timer_done0;
wire          main_litedramcore_timer_done1;
wire          main_litedramcore_timer_wait;
reg           main_litedramcore_trrdcon_count = 1'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_trrdcon_ready = 1'd0;
wire          main_litedramcore_trrdcon_valid;
reg     [2:0] main_litedramcore_twtrcon_count = 3'd0;
(* dont_touch = "true" *)
reg           main_litedramcore_twtrcon_ready = 1'd0;
wire          main_litedramcore_twtrcon_valid;
wire          main_litedramcore_wants_refresh;
wire          main_litedramcore_wants_zqcs;
wire          main_litedramcore_write_available;
reg           main_litedramcore_zqcs_executer_done = 1'd0;
reg           main_litedramcore_zqcs_executer_start = 1'd0;
reg     [4:0] main_litedramcore_zqcs_executer_trigger = 5'd0;
wire   [26:0] main_litedramcore_zqcs_timer_count0;
reg    [26:0] main_litedramcore_zqcs_timer_count1 = 27'd99999999;
wire          main_litedramcore_zqcs_timer_done0;
wire          main_litedramcore_zqcs_timer_done1;
wire          main_litedramcore_zqcs_timer_wait;
wire          main_locked;
reg           main_power_down = 1'd0;
wire          main_reset;
reg     [3:0] main_reset_counter = 4'd15;
reg           main_rst = 1'd0;
wire          main_user_enable;
wire   [24:0] main_user_port_cmd_payload_addr;
wire          main_user_port_cmd_payload_we;
wire          main_user_port_cmd_ready;
wire          main_user_port_cmd_valid;
wire  [255:0] main_user_port_rdata_payload_data;
wire          main_user_port_rdata_ready;
wire          main_user_port_rdata_valid;
wire  [255:0] main_user_port_wdata_payload_data;
wire   [31:0] main_user_port_wdata_payload_we;
wire          main_user_port_wdata_ready;
wire          main_user_port_wdata_valid;
wire          main_wb_bus_ack;
wire   [29:0] main_wb_bus_adr;
wire    [1:0] main_wb_bus_bte;
wire    [2:0] main_wb_bus_cti;
wire          main_wb_bus_cyc;
wire   [31:0] main_wb_bus_dat_r;
wire   [31:0] main_wb_bus_dat_w;
wire          main_wb_bus_err;
wire    [3:0] main_wb_bus_sel;
wire          main_wb_bus_stb;
wire          main_wb_bus_we;
wire          sys4x_clk;
wire          sys4x_dqs_clk;
wire          sys_clk;
wire          sys_rst;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign init_done = main_init_done_storage;
assign init_error = main_init_error_storage;
assign main_wb_bus_adr = wb_ctrl_adr;
assign main_wb_bus_dat_w = wb_ctrl_dat_w;
assign wb_ctrl_dat_r = main_wb_bus_dat_r;
assign main_wb_bus_sel = wb_ctrl_sel;
assign main_wb_bus_cyc = wb_ctrl_cyc;
assign main_wb_bus_stb = wb_ctrl_stb;
assign wb_ctrl_ack = main_wb_bus_ack;
assign main_wb_bus_we = wb_ctrl_we;
assign main_wb_bus_cti = wb_ctrl_cti;
assign main_wb_bus_bte = wb_ctrl_bte;
assign wb_ctrl_err = main_wb_bus_err;
assign user_clk = sys_clk;
assign user_rst = sys_rst;
assign main_user_enable = 1'd1;
assign main_user_port_cmd_valid = (user_port_native_0_cmd_valid & main_user_enable);
assign user_port_native_0_cmd_ready = (main_user_port_cmd_ready & main_user_enable);
assign main_user_port_cmd_payload_we = user_port_native_0_cmd_we;
assign main_user_port_cmd_payload_addr = user_port_native_0_cmd_addr;
assign main_user_port_wdata_valid = (user_port_native_0_wdata_valid & main_user_enable);
assign user_port_native_0_wdata_ready = (main_user_port_wdata_ready & main_user_enable);
assign main_user_port_wdata_payload_we = user_port_native_0_wdata_we;
assign main_user_port_wdata_payload_data = user_port_native_0_wdata_data;
assign user_port_native_0_rdata_valid = (main_user_port_rdata_valid & main_user_enable);
assign main_user_port_rdata_ready = (user_port_native_0_rdata_ready & main_user_enable);
assign user_port_native_0_rdata_data = main_user_port_rdata_payload_data;
assign builder_interface0_adr = main_wb_bus_adr;
assign builder_interface0_dat_w = main_wb_bus_dat_w;
assign main_wb_bus_dat_r = builder_interface0_dat_r;
assign builder_interface0_sel = main_wb_bus_sel;
assign builder_interface0_cyc = main_wb_bus_cyc;
assign builder_interface0_stb = main_wb_bus_stb;
assign main_wb_bus_ack = builder_interface0_ack;
assign builder_interface0_we = main_wb_bus_we;
assign builder_interface0_cti = main_wb_bus_cti;
assign builder_interface0_bte = main_wb_bus_bte;
assign main_wb_bus_err = builder_interface0_err;
assign main_reset = (rst | main_rst);
assign pll_locked = main_locked;
assign main_clkin = clk;
assign iodelay_clk = main_clkout_buf0;
assign sys_clk = main_clkout_buf1;
assign sys4x_clk = main_clkout_buf2;
assign sys4x_dqs_clk = main_clkout_buf3;
assign ddram_ba = main_k7ddrphy_pads_ba;
assign main_k7ddrphy_dqs_oe_delay_tappeddelayline = ((main_k7ddrphy_dqs_preamble | main_k7ddrphy_dqs_oe) | main_k7ddrphy_dqs_postamble);
assign main_k7ddrphy_dq_oe_delay_tappeddelayline = ((main_k7ddrphy_dqs_preamble | main_k7ddrphy_dq_oe) | main_k7ddrphy_dqs_postamble);
always @(*) begin
    main_k7ddrphy_dfi_p0_rddata <= 64'd0;
    main_k7ddrphy_dfi_p0_rddata[0] <= main_k7ddrphy_bitslip04[0];
    main_k7ddrphy_dfi_p0_rddata[32] <= main_k7ddrphy_bitslip04[1];
    main_k7ddrphy_dfi_p0_rddata[1] <= main_k7ddrphy_bitslip14[0];
    main_k7ddrphy_dfi_p0_rddata[33] <= main_k7ddrphy_bitslip14[1];
    main_k7ddrphy_dfi_p0_rddata[2] <= main_k7ddrphy_bitslip24[0];
    main_k7ddrphy_dfi_p0_rddata[34] <= main_k7ddrphy_bitslip24[1];
    main_k7ddrphy_dfi_p0_rddata[3] <= main_k7ddrphy_bitslip34[0];
    main_k7ddrphy_dfi_p0_rddata[35] <= main_k7ddrphy_bitslip34[1];
    main_k7ddrphy_dfi_p0_rddata[4] <= main_k7ddrphy_bitslip42[0];
    main_k7ddrphy_dfi_p0_rddata[36] <= main_k7ddrphy_bitslip42[1];
    main_k7ddrphy_dfi_p0_rddata[5] <= main_k7ddrphy_bitslip52[0];
    main_k7ddrphy_dfi_p0_rddata[37] <= main_k7ddrphy_bitslip52[1];
    main_k7ddrphy_dfi_p0_rddata[6] <= main_k7ddrphy_bitslip62[0];
    main_k7ddrphy_dfi_p0_rddata[38] <= main_k7ddrphy_bitslip62[1];
    main_k7ddrphy_dfi_p0_rddata[7] <= main_k7ddrphy_bitslip72[0];
    main_k7ddrphy_dfi_p0_rddata[39] <= main_k7ddrphy_bitslip72[1];
    main_k7ddrphy_dfi_p0_rddata[8] <= main_k7ddrphy_bitslip82[0];
    main_k7ddrphy_dfi_p0_rddata[40] <= main_k7ddrphy_bitslip82[1];
    main_k7ddrphy_dfi_p0_rddata[9] <= main_k7ddrphy_bitslip92[0];
    main_k7ddrphy_dfi_p0_rddata[41] <= main_k7ddrphy_bitslip92[1];
    main_k7ddrphy_dfi_p0_rddata[10] <= main_k7ddrphy_bitslip102[0];
    main_k7ddrphy_dfi_p0_rddata[42] <= main_k7ddrphy_bitslip102[1];
    main_k7ddrphy_dfi_p0_rddata[11] <= main_k7ddrphy_bitslip112[0];
    main_k7ddrphy_dfi_p0_rddata[43] <= main_k7ddrphy_bitslip112[1];
    main_k7ddrphy_dfi_p0_rddata[12] <= main_k7ddrphy_bitslip122[0];
    main_k7ddrphy_dfi_p0_rddata[44] <= main_k7ddrphy_bitslip122[1];
    main_k7ddrphy_dfi_p0_rddata[13] <= main_k7ddrphy_bitslip132[0];
    main_k7ddrphy_dfi_p0_rddata[45] <= main_k7ddrphy_bitslip132[1];
    main_k7ddrphy_dfi_p0_rddata[14] <= main_k7ddrphy_bitslip142[0];
    main_k7ddrphy_dfi_p0_rddata[46] <= main_k7ddrphy_bitslip142[1];
    main_k7ddrphy_dfi_p0_rddata[15] <= main_k7ddrphy_bitslip152[0];
    main_k7ddrphy_dfi_p0_rddata[47] <= main_k7ddrphy_bitslip152[1];
    main_k7ddrphy_dfi_p0_rddata[16] <= main_k7ddrphy_bitslip162[0];
    main_k7ddrphy_dfi_p0_rddata[48] <= main_k7ddrphy_bitslip162[1];
    main_k7ddrphy_dfi_p0_rddata[17] <= main_k7ddrphy_bitslip172[0];
    main_k7ddrphy_dfi_p0_rddata[49] <= main_k7ddrphy_bitslip172[1];
    main_k7ddrphy_dfi_p0_rddata[18] <= main_k7ddrphy_bitslip182[0];
    main_k7ddrphy_dfi_p0_rddata[50] <= main_k7ddrphy_bitslip182[1];
    main_k7ddrphy_dfi_p0_rddata[19] <= main_k7ddrphy_bitslip192[0];
    main_k7ddrphy_dfi_p0_rddata[51] <= main_k7ddrphy_bitslip192[1];
    main_k7ddrphy_dfi_p0_rddata[20] <= main_k7ddrphy_bitslip202[0];
    main_k7ddrphy_dfi_p0_rddata[52] <= main_k7ddrphy_bitslip202[1];
    main_k7ddrphy_dfi_p0_rddata[21] <= main_k7ddrphy_bitslip212[0];
    main_k7ddrphy_dfi_p0_rddata[53] <= main_k7ddrphy_bitslip212[1];
    main_k7ddrphy_dfi_p0_rddata[22] <= main_k7ddrphy_bitslip222[0];
    main_k7ddrphy_dfi_p0_rddata[54] <= main_k7ddrphy_bitslip222[1];
    main_k7ddrphy_dfi_p0_rddata[23] <= main_k7ddrphy_bitslip232[0];
    main_k7ddrphy_dfi_p0_rddata[55] <= main_k7ddrphy_bitslip232[1];
    main_k7ddrphy_dfi_p0_rddata[24] <= main_k7ddrphy_bitslip242[0];
    main_k7ddrphy_dfi_p0_rddata[56] <= main_k7ddrphy_bitslip242[1];
    main_k7ddrphy_dfi_p0_rddata[25] <= main_k7ddrphy_bitslip252[0];
    main_k7ddrphy_dfi_p0_rddata[57] <= main_k7ddrphy_bitslip252[1];
    main_k7ddrphy_dfi_p0_rddata[26] <= main_k7ddrphy_bitslip262[0];
    main_k7ddrphy_dfi_p0_rddata[58] <= main_k7ddrphy_bitslip262[1];
    main_k7ddrphy_dfi_p0_rddata[27] <= main_k7ddrphy_bitslip272[0];
    main_k7ddrphy_dfi_p0_rddata[59] <= main_k7ddrphy_bitslip272[1];
    main_k7ddrphy_dfi_p0_rddata[28] <= main_k7ddrphy_bitslip282[0];
    main_k7ddrphy_dfi_p0_rddata[60] <= main_k7ddrphy_bitslip282[1];
    main_k7ddrphy_dfi_p0_rddata[29] <= main_k7ddrphy_bitslip292[0];
    main_k7ddrphy_dfi_p0_rddata[61] <= main_k7ddrphy_bitslip292[1];
    main_k7ddrphy_dfi_p0_rddata[30] <= main_k7ddrphy_bitslip302[0];
    main_k7ddrphy_dfi_p0_rddata[62] <= main_k7ddrphy_bitslip302[1];
    main_k7ddrphy_dfi_p0_rddata[31] <= main_k7ddrphy_bitslip312[0];
    main_k7ddrphy_dfi_p0_rddata[63] <= main_k7ddrphy_bitslip312[1];
end
always @(*) begin
    main_k7ddrphy_dfi_p1_rddata <= 64'd0;
    main_k7ddrphy_dfi_p1_rddata[0] <= main_k7ddrphy_bitslip04[2];
    main_k7ddrphy_dfi_p1_rddata[32] <= main_k7ddrphy_bitslip04[3];
    main_k7ddrphy_dfi_p1_rddata[1] <= main_k7ddrphy_bitslip14[2];
    main_k7ddrphy_dfi_p1_rddata[33] <= main_k7ddrphy_bitslip14[3];
    main_k7ddrphy_dfi_p1_rddata[2] <= main_k7ddrphy_bitslip24[2];
    main_k7ddrphy_dfi_p1_rddata[34] <= main_k7ddrphy_bitslip24[3];
    main_k7ddrphy_dfi_p1_rddata[3] <= main_k7ddrphy_bitslip34[2];
    main_k7ddrphy_dfi_p1_rddata[35] <= main_k7ddrphy_bitslip34[3];
    main_k7ddrphy_dfi_p1_rddata[4] <= main_k7ddrphy_bitslip42[2];
    main_k7ddrphy_dfi_p1_rddata[36] <= main_k7ddrphy_bitslip42[3];
    main_k7ddrphy_dfi_p1_rddata[5] <= main_k7ddrphy_bitslip52[2];
    main_k7ddrphy_dfi_p1_rddata[37] <= main_k7ddrphy_bitslip52[3];
    main_k7ddrphy_dfi_p1_rddata[6] <= main_k7ddrphy_bitslip62[2];
    main_k7ddrphy_dfi_p1_rddata[38] <= main_k7ddrphy_bitslip62[3];
    main_k7ddrphy_dfi_p1_rddata[7] <= main_k7ddrphy_bitslip72[2];
    main_k7ddrphy_dfi_p1_rddata[39] <= main_k7ddrphy_bitslip72[3];
    main_k7ddrphy_dfi_p1_rddata[8] <= main_k7ddrphy_bitslip82[2];
    main_k7ddrphy_dfi_p1_rddata[40] <= main_k7ddrphy_bitslip82[3];
    main_k7ddrphy_dfi_p1_rddata[9] <= main_k7ddrphy_bitslip92[2];
    main_k7ddrphy_dfi_p1_rddata[41] <= main_k7ddrphy_bitslip92[3];
    main_k7ddrphy_dfi_p1_rddata[10] <= main_k7ddrphy_bitslip102[2];
    main_k7ddrphy_dfi_p1_rddata[42] <= main_k7ddrphy_bitslip102[3];
    main_k7ddrphy_dfi_p1_rddata[11] <= main_k7ddrphy_bitslip112[2];
    main_k7ddrphy_dfi_p1_rddata[43] <= main_k7ddrphy_bitslip112[3];
    main_k7ddrphy_dfi_p1_rddata[12] <= main_k7ddrphy_bitslip122[2];
    main_k7ddrphy_dfi_p1_rddata[44] <= main_k7ddrphy_bitslip122[3];
    main_k7ddrphy_dfi_p1_rddata[13] <= main_k7ddrphy_bitslip132[2];
    main_k7ddrphy_dfi_p1_rddata[45] <= main_k7ddrphy_bitslip132[3];
    main_k7ddrphy_dfi_p1_rddata[14] <= main_k7ddrphy_bitslip142[2];
    main_k7ddrphy_dfi_p1_rddata[46] <= main_k7ddrphy_bitslip142[3];
    main_k7ddrphy_dfi_p1_rddata[15] <= main_k7ddrphy_bitslip152[2];
    main_k7ddrphy_dfi_p1_rddata[47] <= main_k7ddrphy_bitslip152[3];
    main_k7ddrphy_dfi_p1_rddata[16] <= main_k7ddrphy_bitslip162[2];
    main_k7ddrphy_dfi_p1_rddata[48] <= main_k7ddrphy_bitslip162[3];
    main_k7ddrphy_dfi_p1_rddata[17] <= main_k7ddrphy_bitslip172[2];
    main_k7ddrphy_dfi_p1_rddata[49] <= main_k7ddrphy_bitslip172[3];
    main_k7ddrphy_dfi_p1_rddata[18] <= main_k7ddrphy_bitslip182[2];
    main_k7ddrphy_dfi_p1_rddata[50] <= main_k7ddrphy_bitslip182[3];
    main_k7ddrphy_dfi_p1_rddata[19] <= main_k7ddrphy_bitslip192[2];
    main_k7ddrphy_dfi_p1_rddata[51] <= main_k7ddrphy_bitslip192[3];
    main_k7ddrphy_dfi_p1_rddata[20] <= main_k7ddrphy_bitslip202[2];
    main_k7ddrphy_dfi_p1_rddata[52] <= main_k7ddrphy_bitslip202[3];
    main_k7ddrphy_dfi_p1_rddata[21] <= main_k7ddrphy_bitslip212[2];
    main_k7ddrphy_dfi_p1_rddata[53] <= main_k7ddrphy_bitslip212[3];
    main_k7ddrphy_dfi_p1_rddata[22] <= main_k7ddrphy_bitslip222[2];
    main_k7ddrphy_dfi_p1_rddata[54] <= main_k7ddrphy_bitslip222[3];
    main_k7ddrphy_dfi_p1_rddata[23] <= main_k7ddrphy_bitslip232[2];
    main_k7ddrphy_dfi_p1_rddata[55] <= main_k7ddrphy_bitslip232[3];
    main_k7ddrphy_dfi_p1_rddata[24] <= main_k7ddrphy_bitslip242[2];
    main_k7ddrphy_dfi_p1_rddata[56] <= main_k7ddrphy_bitslip242[3];
    main_k7ddrphy_dfi_p1_rddata[25] <= main_k7ddrphy_bitslip252[2];
    main_k7ddrphy_dfi_p1_rddata[57] <= main_k7ddrphy_bitslip252[3];
    main_k7ddrphy_dfi_p1_rddata[26] <= main_k7ddrphy_bitslip262[2];
    main_k7ddrphy_dfi_p1_rddata[58] <= main_k7ddrphy_bitslip262[3];
    main_k7ddrphy_dfi_p1_rddata[27] <= main_k7ddrphy_bitslip272[2];
    main_k7ddrphy_dfi_p1_rddata[59] <= main_k7ddrphy_bitslip272[3];
    main_k7ddrphy_dfi_p1_rddata[28] <= main_k7ddrphy_bitslip282[2];
    main_k7ddrphy_dfi_p1_rddata[60] <= main_k7ddrphy_bitslip282[3];
    main_k7ddrphy_dfi_p1_rddata[29] <= main_k7ddrphy_bitslip292[2];
    main_k7ddrphy_dfi_p1_rddata[61] <= main_k7ddrphy_bitslip292[3];
    main_k7ddrphy_dfi_p1_rddata[30] <= main_k7ddrphy_bitslip302[2];
    main_k7ddrphy_dfi_p1_rddata[62] <= main_k7ddrphy_bitslip302[3];
    main_k7ddrphy_dfi_p1_rddata[31] <= main_k7ddrphy_bitslip312[2];
    main_k7ddrphy_dfi_p1_rddata[63] <= main_k7ddrphy_bitslip312[3];
end
always @(*) begin
    main_k7ddrphy_dfi_p2_rddata <= 64'd0;
    main_k7ddrphy_dfi_p2_rddata[0] <= main_k7ddrphy_bitslip04[4];
    main_k7ddrphy_dfi_p2_rddata[32] <= main_k7ddrphy_bitslip04[5];
    main_k7ddrphy_dfi_p2_rddata[1] <= main_k7ddrphy_bitslip14[4];
    main_k7ddrphy_dfi_p2_rddata[33] <= main_k7ddrphy_bitslip14[5];
    main_k7ddrphy_dfi_p2_rddata[2] <= main_k7ddrphy_bitslip24[4];
    main_k7ddrphy_dfi_p2_rddata[34] <= main_k7ddrphy_bitslip24[5];
    main_k7ddrphy_dfi_p2_rddata[3] <= main_k7ddrphy_bitslip34[4];
    main_k7ddrphy_dfi_p2_rddata[35] <= main_k7ddrphy_bitslip34[5];
    main_k7ddrphy_dfi_p2_rddata[4] <= main_k7ddrphy_bitslip42[4];
    main_k7ddrphy_dfi_p2_rddata[36] <= main_k7ddrphy_bitslip42[5];
    main_k7ddrphy_dfi_p2_rddata[5] <= main_k7ddrphy_bitslip52[4];
    main_k7ddrphy_dfi_p2_rddata[37] <= main_k7ddrphy_bitslip52[5];
    main_k7ddrphy_dfi_p2_rddata[6] <= main_k7ddrphy_bitslip62[4];
    main_k7ddrphy_dfi_p2_rddata[38] <= main_k7ddrphy_bitslip62[5];
    main_k7ddrphy_dfi_p2_rddata[7] <= main_k7ddrphy_bitslip72[4];
    main_k7ddrphy_dfi_p2_rddata[39] <= main_k7ddrphy_bitslip72[5];
    main_k7ddrphy_dfi_p2_rddata[8] <= main_k7ddrphy_bitslip82[4];
    main_k7ddrphy_dfi_p2_rddata[40] <= main_k7ddrphy_bitslip82[5];
    main_k7ddrphy_dfi_p2_rddata[9] <= main_k7ddrphy_bitslip92[4];
    main_k7ddrphy_dfi_p2_rddata[41] <= main_k7ddrphy_bitslip92[5];
    main_k7ddrphy_dfi_p2_rddata[10] <= main_k7ddrphy_bitslip102[4];
    main_k7ddrphy_dfi_p2_rddata[42] <= main_k7ddrphy_bitslip102[5];
    main_k7ddrphy_dfi_p2_rddata[11] <= main_k7ddrphy_bitslip112[4];
    main_k7ddrphy_dfi_p2_rddata[43] <= main_k7ddrphy_bitslip112[5];
    main_k7ddrphy_dfi_p2_rddata[12] <= main_k7ddrphy_bitslip122[4];
    main_k7ddrphy_dfi_p2_rddata[44] <= main_k7ddrphy_bitslip122[5];
    main_k7ddrphy_dfi_p2_rddata[13] <= main_k7ddrphy_bitslip132[4];
    main_k7ddrphy_dfi_p2_rddata[45] <= main_k7ddrphy_bitslip132[5];
    main_k7ddrphy_dfi_p2_rddata[14] <= main_k7ddrphy_bitslip142[4];
    main_k7ddrphy_dfi_p2_rddata[46] <= main_k7ddrphy_bitslip142[5];
    main_k7ddrphy_dfi_p2_rddata[15] <= main_k7ddrphy_bitslip152[4];
    main_k7ddrphy_dfi_p2_rddata[47] <= main_k7ddrphy_bitslip152[5];
    main_k7ddrphy_dfi_p2_rddata[16] <= main_k7ddrphy_bitslip162[4];
    main_k7ddrphy_dfi_p2_rddata[48] <= main_k7ddrphy_bitslip162[5];
    main_k7ddrphy_dfi_p2_rddata[17] <= main_k7ddrphy_bitslip172[4];
    main_k7ddrphy_dfi_p2_rddata[49] <= main_k7ddrphy_bitslip172[5];
    main_k7ddrphy_dfi_p2_rddata[18] <= main_k7ddrphy_bitslip182[4];
    main_k7ddrphy_dfi_p2_rddata[50] <= main_k7ddrphy_bitslip182[5];
    main_k7ddrphy_dfi_p2_rddata[19] <= main_k7ddrphy_bitslip192[4];
    main_k7ddrphy_dfi_p2_rddata[51] <= main_k7ddrphy_bitslip192[5];
    main_k7ddrphy_dfi_p2_rddata[20] <= main_k7ddrphy_bitslip202[4];
    main_k7ddrphy_dfi_p2_rddata[52] <= main_k7ddrphy_bitslip202[5];
    main_k7ddrphy_dfi_p2_rddata[21] <= main_k7ddrphy_bitslip212[4];
    main_k7ddrphy_dfi_p2_rddata[53] <= main_k7ddrphy_bitslip212[5];
    main_k7ddrphy_dfi_p2_rddata[22] <= main_k7ddrphy_bitslip222[4];
    main_k7ddrphy_dfi_p2_rddata[54] <= main_k7ddrphy_bitslip222[5];
    main_k7ddrphy_dfi_p2_rddata[23] <= main_k7ddrphy_bitslip232[4];
    main_k7ddrphy_dfi_p2_rddata[55] <= main_k7ddrphy_bitslip232[5];
    main_k7ddrphy_dfi_p2_rddata[24] <= main_k7ddrphy_bitslip242[4];
    main_k7ddrphy_dfi_p2_rddata[56] <= main_k7ddrphy_bitslip242[5];
    main_k7ddrphy_dfi_p2_rddata[25] <= main_k7ddrphy_bitslip252[4];
    main_k7ddrphy_dfi_p2_rddata[57] <= main_k7ddrphy_bitslip252[5];
    main_k7ddrphy_dfi_p2_rddata[26] <= main_k7ddrphy_bitslip262[4];
    main_k7ddrphy_dfi_p2_rddata[58] <= main_k7ddrphy_bitslip262[5];
    main_k7ddrphy_dfi_p2_rddata[27] <= main_k7ddrphy_bitslip272[4];
    main_k7ddrphy_dfi_p2_rddata[59] <= main_k7ddrphy_bitslip272[5];
    main_k7ddrphy_dfi_p2_rddata[28] <= main_k7ddrphy_bitslip282[4];
    main_k7ddrphy_dfi_p2_rddata[60] <= main_k7ddrphy_bitslip282[5];
    main_k7ddrphy_dfi_p2_rddata[29] <= main_k7ddrphy_bitslip292[4];
    main_k7ddrphy_dfi_p2_rddata[61] <= main_k7ddrphy_bitslip292[5];
    main_k7ddrphy_dfi_p2_rddata[30] <= main_k7ddrphy_bitslip302[4];
    main_k7ddrphy_dfi_p2_rddata[62] <= main_k7ddrphy_bitslip302[5];
    main_k7ddrphy_dfi_p2_rddata[31] <= main_k7ddrphy_bitslip312[4];
    main_k7ddrphy_dfi_p2_rddata[63] <= main_k7ddrphy_bitslip312[5];
end
always @(*) begin
    main_k7ddrphy_dfi_p3_rddata <= 64'd0;
    main_k7ddrphy_dfi_p3_rddata[0] <= main_k7ddrphy_bitslip04[6];
    main_k7ddrphy_dfi_p3_rddata[32] <= main_k7ddrphy_bitslip04[7];
    main_k7ddrphy_dfi_p3_rddata[1] <= main_k7ddrphy_bitslip14[6];
    main_k7ddrphy_dfi_p3_rddata[33] <= main_k7ddrphy_bitslip14[7];
    main_k7ddrphy_dfi_p3_rddata[2] <= main_k7ddrphy_bitslip24[6];
    main_k7ddrphy_dfi_p3_rddata[34] <= main_k7ddrphy_bitslip24[7];
    main_k7ddrphy_dfi_p3_rddata[3] <= main_k7ddrphy_bitslip34[6];
    main_k7ddrphy_dfi_p3_rddata[35] <= main_k7ddrphy_bitslip34[7];
    main_k7ddrphy_dfi_p3_rddata[4] <= main_k7ddrphy_bitslip42[6];
    main_k7ddrphy_dfi_p3_rddata[36] <= main_k7ddrphy_bitslip42[7];
    main_k7ddrphy_dfi_p3_rddata[5] <= main_k7ddrphy_bitslip52[6];
    main_k7ddrphy_dfi_p3_rddata[37] <= main_k7ddrphy_bitslip52[7];
    main_k7ddrphy_dfi_p3_rddata[6] <= main_k7ddrphy_bitslip62[6];
    main_k7ddrphy_dfi_p3_rddata[38] <= main_k7ddrphy_bitslip62[7];
    main_k7ddrphy_dfi_p3_rddata[7] <= main_k7ddrphy_bitslip72[6];
    main_k7ddrphy_dfi_p3_rddata[39] <= main_k7ddrphy_bitslip72[7];
    main_k7ddrphy_dfi_p3_rddata[8] <= main_k7ddrphy_bitslip82[6];
    main_k7ddrphy_dfi_p3_rddata[40] <= main_k7ddrphy_bitslip82[7];
    main_k7ddrphy_dfi_p3_rddata[9] <= main_k7ddrphy_bitslip92[6];
    main_k7ddrphy_dfi_p3_rddata[41] <= main_k7ddrphy_bitslip92[7];
    main_k7ddrphy_dfi_p3_rddata[10] <= main_k7ddrphy_bitslip102[6];
    main_k7ddrphy_dfi_p3_rddata[42] <= main_k7ddrphy_bitslip102[7];
    main_k7ddrphy_dfi_p3_rddata[11] <= main_k7ddrphy_bitslip112[6];
    main_k7ddrphy_dfi_p3_rddata[43] <= main_k7ddrphy_bitslip112[7];
    main_k7ddrphy_dfi_p3_rddata[12] <= main_k7ddrphy_bitslip122[6];
    main_k7ddrphy_dfi_p3_rddata[44] <= main_k7ddrphy_bitslip122[7];
    main_k7ddrphy_dfi_p3_rddata[13] <= main_k7ddrphy_bitslip132[6];
    main_k7ddrphy_dfi_p3_rddata[45] <= main_k7ddrphy_bitslip132[7];
    main_k7ddrphy_dfi_p3_rddata[14] <= main_k7ddrphy_bitslip142[6];
    main_k7ddrphy_dfi_p3_rddata[46] <= main_k7ddrphy_bitslip142[7];
    main_k7ddrphy_dfi_p3_rddata[15] <= main_k7ddrphy_bitslip152[6];
    main_k7ddrphy_dfi_p3_rddata[47] <= main_k7ddrphy_bitslip152[7];
    main_k7ddrphy_dfi_p3_rddata[16] <= main_k7ddrphy_bitslip162[6];
    main_k7ddrphy_dfi_p3_rddata[48] <= main_k7ddrphy_bitslip162[7];
    main_k7ddrphy_dfi_p3_rddata[17] <= main_k7ddrphy_bitslip172[6];
    main_k7ddrphy_dfi_p3_rddata[49] <= main_k7ddrphy_bitslip172[7];
    main_k7ddrphy_dfi_p3_rddata[18] <= main_k7ddrphy_bitslip182[6];
    main_k7ddrphy_dfi_p3_rddata[50] <= main_k7ddrphy_bitslip182[7];
    main_k7ddrphy_dfi_p3_rddata[19] <= main_k7ddrphy_bitslip192[6];
    main_k7ddrphy_dfi_p3_rddata[51] <= main_k7ddrphy_bitslip192[7];
    main_k7ddrphy_dfi_p3_rddata[20] <= main_k7ddrphy_bitslip202[6];
    main_k7ddrphy_dfi_p3_rddata[52] <= main_k7ddrphy_bitslip202[7];
    main_k7ddrphy_dfi_p3_rddata[21] <= main_k7ddrphy_bitslip212[6];
    main_k7ddrphy_dfi_p3_rddata[53] <= main_k7ddrphy_bitslip212[7];
    main_k7ddrphy_dfi_p3_rddata[22] <= main_k7ddrphy_bitslip222[6];
    main_k7ddrphy_dfi_p3_rddata[54] <= main_k7ddrphy_bitslip222[7];
    main_k7ddrphy_dfi_p3_rddata[23] <= main_k7ddrphy_bitslip232[6];
    main_k7ddrphy_dfi_p3_rddata[55] <= main_k7ddrphy_bitslip232[7];
    main_k7ddrphy_dfi_p3_rddata[24] <= main_k7ddrphy_bitslip242[6];
    main_k7ddrphy_dfi_p3_rddata[56] <= main_k7ddrphy_bitslip242[7];
    main_k7ddrphy_dfi_p3_rddata[25] <= main_k7ddrphy_bitslip252[6];
    main_k7ddrphy_dfi_p3_rddata[57] <= main_k7ddrphy_bitslip252[7];
    main_k7ddrphy_dfi_p3_rddata[26] <= main_k7ddrphy_bitslip262[6];
    main_k7ddrphy_dfi_p3_rddata[58] <= main_k7ddrphy_bitslip262[7];
    main_k7ddrphy_dfi_p3_rddata[27] <= main_k7ddrphy_bitslip272[6];
    main_k7ddrphy_dfi_p3_rddata[59] <= main_k7ddrphy_bitslip272[7];
    main_k7ddrphy_dfi_p3_rddata[28] <= main_k7ddrphy_bitslip282[6];
    main_k7ddrphy_dfi_p3_rddata[60] <= main_k7ddrphy_bitslip282[7];
    main_k7ddrphy_dfi_p3_rddata[29] <= main_k7ddrphy_bitslip292[6];
    main_k7ddrphy_dfi_p3_rddata[61] <= main_k7ddrphy_bitslip292[7];
    main_k7ddrphy_dfi_p3_rddata[30] <= main_k7ddrphy_bitslip302[6];
    main_k7ddrphy_dfi_p3_rddata[62] <= main_k7ddrphy_bitslip302[7];
    main_k7ddrphy_dfi_p3_rddata[31] <= main_k7ddrphy_bitslip312[6];
    main_k7ddrphy_dfi_p3_rddata[63] <= main_k7ddrphy_bitslip312[7];
end
assign main_k7ddrphy_dfi_p0_rddata_valid = (main_k7ddrphy_rddata_en_tappeddelayline7 | main_k7ddrphy_wlevel_en_storage);
assign main_k7ddrphy_dfi_p1_rddata_valid = (main_k7ddrphy_rddata_en_tappeddelayline7 | main_k7ddrphy_wlevel_en_storage);
assign main_k7ddrphy_dfi_p2_rddata_valid = (main_k7ddrphy_rddata_en_tappeddelayline7 | main_k7ddrphy_wlevel_en_storage);
assign main_k7ddrphy_dfi_p3_rddata_valid = (main_k7ddrphy_rddata_en_tappeddelayline7 | main_k7ddrphy_wlevel_en_storage);
assign main_k7ddrphy_dq_oe = main_k7ddrphy_wrdata_en_tappeddelayline1;
always @(*) begin
    main_k7ddrphy_dqs_oe <= 1'd0;
    if (main_k7ddrphy_wlevel_en_storage) begin
        main_k7ddrphy_dqs_oe <= 1'd1;
    end else begin
        main_k7ddrphy_dqs_oe <= main_k7ddrphy_dq_oe;
    end
end
assign main_k7ddrphy_dqs_preamble = (main_k7ddrphy_wrdata_en_tappeddelayline0 & (~main_k7ddrphy_wrdata_en_tappeddelayline1));
assign main_k7ddrphy_dqs_postamble = (main_k7ddrphy_wrdata_en_tappeddelayline2 & (~main_k7ddrphy_wrdata_en_tappeddelayline1));
always @(*) begin
    main_k7ddrphy_dqspattern_o <= 8'd0;
    main_k7ddrphy_dqspattern_o <= 7'd85;
    if (main_k7ddrphy_dqspattern0) begin
        main_k7ddrphy_dqspattern_o <= 5'd21;
    end
    if (main_k7ddrphy_dqspattern1) begin
        main_k7ddrphy_dqspattern_o <= 7'd84;
    end
    if (main_k7ddrphy_wlevel_en_storage) begin
        main_k7ddrphy_dqspattern_o <= 1'd0;
        if (main_k7ddrphy_wlevel_strobe_re) begin
            main_k7ddrphy_dqspattern_o <= 1'd1;
        end
    end
end
always @(*) begin
    main_k7ddrphy_bitslip00 <= 8'd0;
    case (main_k7ddrphy_bitslip0_value0)
        1'd0: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip00 <= main_k7ddrphy_bitslip0_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip10 <= 8'd0;
    case (main_k7ddrphy_bitslip1_value0)
        1'd0: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip10 <= main_k7ddrphy_bitslip1_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip20 <= 8'd0;
    case (main_k7ddrphy_bitslip2_value0)
        1'd0: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip20 <= main_k7ddrphy_bitslip2_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip30 <= 8'd0;
    case (main_k7ddrphy_bitslip3_value0)
        1'd0: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip30 <= main_k7ddrphy_bitslip3_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip01 <= 8'd0;
    case (main_k7ddrphy_bitslip0_value1)
        1'd0: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip01 <= main_k7ddrphy_bitslip0_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip11 <= 8'd0;
    case (main_k7ddrphy_bitslip1_value1)
        1'd0: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip11 <= main_k7ddrphy_bitslip1_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip21 <= 8'd0;
    case (main_k7ddrphy_bitslip2_value1)
        1'd0: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip21 <= main_k7ddrphy_bitslip2_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip31 <= 8'd0;
    case (main_k7ddrphy_bitslip3_value1)
        1'd0: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip31 <= main_k7ddrphy_bitslip3_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip02 <= 8'd0;
    case (main_k7ddrphy_bitslip0_value2)
        1'd0: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip02 <= main_k7ddrphy_bitslip0_r2[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip04 <= 8'd0;
    case (main_k7ddrphy_bitslip0_value3)
        1'd0: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip04 <= main_k7ddrphy_bitslip0_r3[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip12 <= 8'd0;
    case (main_k7ddrphy_bitslip1_value2)
        1'd0: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip12 <= main_k7ddrphy_bitslip1_r2[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip14 <= 8'd0;
    case (main_k7ddrphy_bitslip1_value3)
        1'd0: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip14 <= main_k7ddrphy_bitslip1_r3[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip22 <= 8'd0;
    case (main_k7ddrphy_bitslip2_value2)
        1'd0: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip22 <= main_k7ddrphy_bitslip2_r2[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip24 <= 8'd0;
    case (main_k7ddrphy_bitslip2_value3)
        1'd0: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip24 <= main_k7ddrphy_bitslip2_r3[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip32 <= 8'd0;
    case (main_k7ddrphy_bitslip3_value2)
        1'd0: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip32 <= main_k7ddrphy_bitslip3_r2[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip34 <= 8'd0;
    case (main_k7ddrphy_bitslip3_value3)
        1'd0: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip34 <= main_k7ddrphy_bitslip3_r3[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip40 <= 8'd0;
    case (main_k7ddrphy_bitslip4_value0)
        1'd0: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip40 <= main_k7ddrphy_bitslip4_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip42 <= 8'd0;
    case (main_k7ddrphy_bitslip4_value1)
        1'd0: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip42 <= main_k7ddrphy_bitslip4_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip50 <= 8'd0;
    case (main_k7ddrphy_bitslip5_value0)
        1'd0: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip50 <= main_k7ddrphy_bitslip5_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip52 <= 8'd0;
    case (main_k7ddrphy_bitslip5_value1)
        1'd0: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip52 <= main_k7ddrphy_bitslip5_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip60 <= 8'd0;
    case (main_k7ddrphy_bitslip6_value0)
        1'd0: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip60 <= main_k7ddrphy_bitslip6_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip62 <= 8'd0;
    case (main_k7ddrphy_bitslip6_value1)
        1'd0: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip62 <= main_k7ddrphy_bitslip6_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip70 <= 8'd0;
    case (main_k7ddrphy_bitslip7_value0)
        1'd0: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip70 <= main_k7ddrphy_bitslip7_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip72 <= 8'd0;
    case (main_k7ddrphy_bitslip7_value1)
        1'd0: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip72 <= main_k7ddrphy_bitslip7_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip80 <= 8'd0;
    case (main_k7ddrphy_bitslip8_value0)
        1'd0: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip80 <= main_k7ddrphy_bitslip8_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip82 <= 8'd0;
    case (main_k7ddrphy_bitslip8_value1)
        1'd0: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip82 <= main_k7ddrphy_bitslip8_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip90 <= 8'd0;
    case (main_k7ddrphy_bitslip9_value0)
        1'd0: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip90 <= main_k7ddrphy_bitslip9_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip92 <= 8'd0;
    case (main_k7ddrphy_bitslip9_value1)
        1'd0: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip92 <= main_k7ddrphy_bitslip9_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip100 <= 8'd0;
    case (main_k7ddrphy_bitslip10_value0)
        1'd0: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip100 <= main_k7ddrphy_bitslip10_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip102 <= 8'd0;
    case (main_k7ddrphy_bitslip10_value1)
        1'd0: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip102 <= main_k7ddrphy_bitslip10_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip110 <= 8'd0;
    case (main_k7ddrphy_bitslip11_value0)
        1'd0: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip110 <= main_k7ddrphy_bitslip11_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip112 <= 8'd0;
    case (main_k7ddrphy_bitslip11_value1)
        1'd0: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip112 <= main_k7ddrphy_bitslip11_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip120 <= 8'd0;
    case (main_k7ddrphy_bitslip12_value0)
        1'd0: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip120 <= main_k7ddrphy_bitslip12_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip122 <= 8'd0;
    case (main_k7ddrphy_bitslip12_value1)
        1'd0: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip122 <= main_k7ddrphy_bitslip12_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip130 <= 8'd0;
    case (main_k7ddrphy_bitslip13_value0)
        1'd0: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip130 <= main_k7ddrphy_bitslip13_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip132 <= 8'd0;
    case (main_k7ddrphy_bitslip13_value1)
        1'd0: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip132 <= main_k7ddrphy_bitslip13_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip140 <= 8'd0;
    case (main_k7ddrphy_bitslip14_value0)
        1'd0: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip140 <= main_k7ddrphy_bitslip14_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip142 <= 8'd0;
    case (main_k7ddrphy_bitslip14_value1)
        1'd0: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip142 <= main_k7ddrphy_bitslip14_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip150 <= 8'd0;
    case (main_k7ddrphy_bitslip15_value0)
        1'd0: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip150 <= main_k7ddrphy_bitslip15_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip152 <= 8'd0;
    case (main_k7ddrphy_bitslip15_value1)
        1'd0: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip152 <= main_k7ddrphy_bitslip15_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip160 <= 8'd0;
    case (main_k7ddrphy_bitslip16_value0)
        1'd0: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip160 <= main_k7ddrphy_bitslip16_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip162 <= 8'd0;
    case (main_k7ddrphy_bitslip16_value1)
        1'd0: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip162 <= main_k7ddrphy_bitslip16_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip170 <= 8'd0;
    case (main_k7ddrphy_bitslip17_value0)
        1'd0: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip170 <= main_k7ddrphy_bitslip17_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip172 <= 8'd0;
    case (main_k7ddrphy_bitslip17_value1)
        1'd0: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip172 <= main_k7ddrphy_bitslip17_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip180 <= 8'd0;
    case (main_k7ddrphy_bitslip18_value0)
        1'd0: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip180 <= main_k7ddrphy_bitslip18_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip182 <= 8'd0;
    case (main_k7ddrphy_bitslip18_value1)
        1'd0: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip182 <= main_k7ddrphy_bitslip18_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip190 <= 8'd0;
    case (main_k7ddrphy_bitslip19_value0)
        1'd0: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip190 <= main_k7ddrphy_bitslip19_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip192 <= 8'd0;
    case (main_k7ddrphy_bitslip19_value1)
        1'd0: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip192 <= main_k7ddrphy_bitslip19_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip200 <= 8'd0;
    case (main_k7ddrphy_bitslip20_value0)
        1'd0: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip200 <= main_k7ddrphy_bitslip20_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip202 <= 8'd0;
    case (main_k7ddrphy_bitslip20_value1)
        1'd0: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip202 <= main_k7ddrphy_bitslip20_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip210 <= 8'd0;
    case (main_k7ddrphy_bitslip21_value0)
        1'd0: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip210 <= main_k7ddrphy_bitslip21_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip212 <= 8'd0;
    case (main_k7ddrphy_bitslip21_value1)
        1'd0: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip212 <= main_k7ddrphy_bitslip21_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip220 <= 8'd0;
    case (main_k7ddrphy_bitslip22_value0)
        1'd0: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip220 <= main_k7ddrphy_bitslip22_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip222 <= 8'd0;
    case (main_k7ddrphy_bitslip22_value1)
        1'd0: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip222 <= main_k7ddrphy_bitslip22_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip230 <= 8'd0;
    case (main_k7ddrphy_bitslip23_value0)
        1'd0: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip230 <= main_k7ddrphy_bitslip23_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip232 <= 8'd0;
    case (main_k7ddrphy_bitslip23_value1)
        1'd0: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip232 <= main_k7ddrphy_bitslip23_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip240 <= 8'd0;
    case (main_k7ddrphy_bitslip24_value0)
        1'd0: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip240 <= main_k7ddrphy_bitslip24_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip242 <= 8'd0;
    case (main_k7ddrphy_bitslip24_value1)
        1'd0: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip242 <= main_k7ddrphy_bitslip24_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip250 <= 8'd0;
    case (main_k7ddrphy_bitslip25_value0)
        1'd0: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip250 <= main_k7ddrphy_bitslip25_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip252 <= 8'd0;
    case (main_k7ddrphy_bitslip25_value1)
        1'd0: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip252 <= main_k7ddrphy_bitslip25_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip260 <= 8'd0;
    case (main_k7ddrphy_bitslip26_value0)
        1'd0: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip260 <= main_k7ddrphy_bitslip26_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip262 <= 8'd0;
    case (main_k7ddrphy_bitslip26_value1)
        1'd0: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip262 <= main_k7ddrphy_bitslip26_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip270 <= 8'd0;
    case (main_k7ddrphy_bitslip27_value0)
        1'd0: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip270 <= main_k7ddrphy_bitslip27_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip272 <= 8'd0;
    case (main_k7ddrphy_bitslip27_value1)
        1'd0: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip272 <= main_k7ddrphy_bitslip27_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip280 <= 8'd0;
    case (main_k7ddrphy_bitslip28_value0)
        1'd0: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip280 <= main_k7ddrphy_bitslip28_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip282 <= 8'd0;
    case (main_k7ddrphy_bitslip28_value1)
        1'd0: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip282 <= main_k7ddrphy_bitslip28_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip290 <= 8'd0;
    case (main_k7ddrphy_bitslip29_value0)
        1'd0: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip290 <= main_k7ddrphy_bitslip29_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip292 <= 8'd0;
    case (main_k7ddrphy_bitslip29_value1)
        1'd0: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip292 <= main_k7ddrphy_bitslip29_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip300 <= 8'd0;
    case (main_k7ddrphy_bitslip30_value0)
        1'd0: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip300 <= main_k7ddrphy_bitslip30_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip302 <= 8'd0;
    case (main_k7ddrphy_bitslip30_value1)
        1'd0: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip302 <= main_k7ddrphy_bitslip30_r1[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip310 <= 8'd0;
    case (main_k7ddrphy_bitslip31_value0)
        1'd0: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip310 <= main_k7ddrphy_bitslip31_r0[15:8];
        end
    endcase
end
always @(*) begin
    main_k7ddrphy_bitslip312 <= 8'd0;
    case (main_k7ddrphy_bitslip31_value1)
        1'd0: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[8:1];
        end
        1'd1: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[9:2];
        end
        2'd2: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[10:3];
        end
        2'd3: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[11:4];
        end
        3'd4: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[12:5];
        end
        3'd5: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[13:6];
        end
        3'd6: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[14:7];
        end
        3'd7: begin
            main_k7ddrphy_bitslip312 <= main_k7ddrphy_bitslip31_r1[15:8];
        end
    endcase
end
assign main_k7ddrphy_dfi_p0_address = main_litedramcore_master_p0_address;
assign main_k7ddrphy_dfi_p0_bank = main_litedramcore_master_p0_bank;
assign main_k7ddrphy_dfi_p0_cas_n = main_litedramcore_master_p0_cas_n;
assign main_k7ddrphy_dfi_p0_cs_n = main_litedramcore_master_p0_cs_n;
assign main_k7ddrphy_dfi_p0_ras_n = main_litedramcore_master_p0_ras_n;
assign main_k7ddrphy_dfi_p0_we_n = main_litedramcore_master_p0_we_n;
assign main_k7ddrphy_dfi_p0_cke = main_litedramcore_master_p0_cke;
assign main_k7ddrphy_dfi_p0_odt = main_litedramcore_master_p0_odt;
assign main_k7ddrphy_dfi_p0_reset_n = main_litedramcore_master_p0_reset_n;
assign main_k7ddrphy_dfi_p0_act_n = main_litedramcore_master_p0_act_n;
assign main_k7ddrphy_dfi_p0_wrdata = main_litedramcore_master_p0_wrdata;
assign main_k7ddrphy_dfi_p0_wrdata_en = main_litedramcore_master_p0_wrdata_en;
assign main_k7ddrphy_dfi_p0_wrdata_mask = main_litedramcore_master_p0_wrdata_mask;
assign main_k7ddrphy_dfi_p0_rddata_en = main_litedramcore_master_p0_rddata_en;
assign main_litedramcore_master_p0_rddata = main_k7ddrphy_dfi_p0_rddata;
assign main_litedramcore_master_p0_rddata_valid = main_k7ddrphy_dfi_p0_rddata_valid;
assign main_k7ddrphy_dfi_p1_address = main_litedramcore_master_p1_address;
assign main_k7ddrphy_dfi_p1_bank = main_litedramcore_master_p1_bank;
assign main_k7ddrphy_dfi_p1_cas_n = main_litedramcore_master_p1_cas_n;
assign main_k7ddrphy_dfi_p1_cs_n = main_litedramcore_master_p1_cs_n;
assign main_k7ddrphy_dfi_p1_ras_n = main_litedramcore_master_p1_ras_n;
assign main_k7ddrphy_dfi_p1_we_n = main_litedramcore_master_p1_we_n;
assign main_k7ddrphy_dfi_p1_cke = main_litedramcore_master_p1_cke;
assign main_k7ddrphy_dfi_p1_odt = main_litedramcore_master_p1_odt;
assign main_k7ddrphy_dfi_p1_reset_n = main_litedramcore_master_p1_reset_n;
assign main_k7ddrphy_dfi_p1_act_n = main_litedramcore_master_p1_act_n;
assign main_k7ddrphy_dfi_p1_wrdata = main_litedramcore_master_p1_wrdata;
assign main_k7ddrphy_dfi_p1_wrdata_en = main_litedramcore_master_p1_wrdata_en;
assign main_k7ddrphy_dfi_p1_wrdata_mask = main_litedramcore_master_p1_wrdata_mask;
assign main_k7ddrphy_dfi_p1_rddata_en = main_litedramcore_master_p1_rddata_en;
assign main_litedramcore_master_p1_rddata = main_k7ddrphy_dfi_p1_rddata;
assign main_litedramcore_master_p1_rddata_valid = main_k7ddrphy_dfi_p1_rddata_valid;
assign main_k7ddrphy_dfi_p2_address = main_litedramcore_master_p2_address;
assign main_k7ddrphy_dfi_p2_bank = main_litedramcore_master_p2_bank;
assign main_k7ddrphy_dfi_p2_cas_n = main_litedramcore_master_p2_cas_n;
assign main_k7ddrphy_dfi_p2_cs_n = main_litedramcore_master_p2_cs_n;
assign main_k7ddrphy_dfi_p2_ras_n = main_litedramcore_master_p2_ras_n;
assign main_k7ddrphy_dfi_p2_we_n = main_litedramcore_master_p2_we_n;
assign main_k7ddrphy_dfi_p2_cke = main_litedramcore_master_p2_cke;
assign main_k7ddrphy_dfi_p2_odt = main_litedramcore_master_p2_odt;
assign main_k7ddrphy_dfi_p2_reset_n = main_litedramcore_master_p2_reset_n;
assign main_k7ddrphy_dfi_p2_act_n = main_litedramcore_master_p2_act_n;
assign main_k7ddrphy_dfi_p2_wrdata = main_litedramcore_master_p2_wrdata;
assign main_k7ddrphy_dfi_p2_wrdata_en = main_litedramcore_master_p2_wrdata_en;
assign main_k7ddrphy_dfi_p2_wrdata_mask = main_litedramcore_master_p2_wrdata_mask;
assign main_k7ddrphy_dfi_p2_rddata_en = main_litedramcore_master_p2_rddata_en;
assign main_litedramcore_master_p2_rddata = main_k7ddrphy_dfi_p2_rddata;
assign main_litedramcore_master_p2_rddata_valid = main_k7ddrphy_dfi_p2_rddata_valid;
assign main_k7ddrphy_dfi_p3_address = main_litedramcore_master_p3_address;
assign main_k7ddrphy_dfi_p3_bank = main_litedramcore_master_p3_bank;
assign main_k7ddrphy_dfi_p3_cas_n = main_litedramcore_master_p3_cas_n;
assign main_k7ddrphy_dfi_p3_cs_n = main_litedramcore_master_p3_cs_n;
assign main_k7ddrphy_dfi_p3_ras_n = main_litedramcore_master_p3_ras_n;
assign main_k7ddrphy_dfi_p3_we_n = main_litedramcore_master_p3_we_n;
assign main_k7ddrphy_dfi_p3_cke = main_litedramcore_master_p3_cke;
assign main_k7ddrphy_dfi_p3_odt = main_litedramcore_master_p3_odt;
assign main_k7ddrphy_dfi_p3_reset_n = main_litedramcore_master_p3_reset_n;
assign main_k7ddrphy_dfi_p3_act_n = main_litedramcore_master_p3_act_n;
assign main_k7ddrphy_dfi_p3_wrdata = main_litedramcore_master_p3_wrdata;
assign main_k7ddrphy_dfi_p3_wrdata_en = main_litedramcore_master_p3_wrdata_en;
assign main_k7ddrphy_dfi_p3_wrdata_mask = main_litedramcore_master_p3_wrdata_mask;
assign main_k7ddrphy_dfi_p3_rddata_en = main_litedramcore_master_p3_rddata_en;
assign main_litedramcore_master_p3_rddata = main_k7ddrphy_dfi_p3_rddata;
assign main_litedramcore_master_p3_rddata_valid = main_k7ddrphy_dfi_p3_rddata_valid;
assign main_litedramcore_slave_p0_address = main_litedramcore_dfi_p0_address;
assign main_litedramcore_slave_p0_bank = main_litedramcore_dfi_p0_bank;
assign main_litedramcore_slave_p0_cas_n = main_litedramcore_dfi_p0_cas_n;
assign main_litedramcore_slave_p0_cs_n = main_litedramcore_dfi_p0_cs_n;
assign main_litedramcore_slave_p0_ras_n = main_litedramcore_dfi_p0_ras_n;
assign main_litedramcore_slave_p0_we_n = main_litedramcore_dfi_p0_we_n;
assign main_litedramcore_slave_p0_cke = main_litedramcore_dfi_p0_cke;
assign main_litedramcore_slave_p0_odt = main_litedramcore_dfi_p0_odt;
assign main_litedramcore_slave_p0_reset_n = main_litedramcore_dfi_p0_reset_n;
assign main_litedramcore_slave_p0_act_n = main_litedramcore_dfi_p0_act_n;
assign main_litedramcore_slave_p0_wrdata = main_litedramcore_dfi_p0_wrdata;
assign main_litedramcore_slave_p0_wrdata_en = main_litedramcore_dfi_p0_wrdata_en;
assign main_litedramcore_slave_p0_wrdata_mask = main_litedramcore_dfi_p0_wrdata_mask;
assign main_litedramcore_slave_p0_rddata_en = main_litedramcore_dfi_p0_rddata_en;
assign main_litedramcore_dfi_p0_rddata = main_litedramcore_slave_p0_rddata;
assign main_litedramcore_dfi_p0_rddata_valid = main_litedramcore_slave_p0_rddata_valid;
assign main_litedramcore_slave_p1_address = main_litedramcore_dfi_p1_address;
assign main_litedramcore_slave_p1_bank = main_litedramcore_dfi_p1_bank;
assign main_litedramcore_slave_p1_cas_n = main_litedramcore_dfi_p1_cas_n;
assign main_litedramcore_slave_p1_cs_n = main_litedramcore_dfi_p1_cs_n;
assign main_litedramcore_slave_p1_ras_n = main_litedramcore_dfi_p1_ras_n;
assign main_litedramcore_slave_p1_we_n = main_litedramcore_dfi_p1_we_n;
assign main_litedramcore_slave_p1_cke = main_litedramcore_dfi_p1_cke;
assign main_litedramcore_slave_p1_odt = main_litedramcore_dfi_p1_odt;
assign main_litedramcore_slave_p1_reset_n = main_litedramcore_dfi_p1_reset_n;
assign main_litedramcore_slave_p1_act_n = main_litedramcore_dfi_p1_act_n;
assign main_litedramcore_slave_p1_wrdata = main_litedramcore_dfi_p1_wrdata;
assign main_litedramcore_slave_p1_wrdata_en = main_litedramcore_dfi_p1_wrdata_en;
assign main_litedramcore_slave_p1_wrdata_mask = main_litedramcore_dfi_p1_wrdata_mask;
assign main_litedramcore_slave_p1_rddata_en = main_litedramcore_dfi_p1_rddata_en;
assign main_litedramcore_dfi_p1_rddata = main_litedramcore_slave_p1_rddata;
assign main_litedramcore_dfi_p1_rddata_valid = main_litedramcore_slave_p1_rddata_valid;
assign main_litedramcore_slave_p2_address = main_litedramcore_dfi_p2_address;
assign main_litedramcore_slave_p2_bank = main_litedramcore_dfi_p2_bank;
assign main_litedramcore_slave_p2_cas_n = main_litedramcore_dfi_p2_cas_n;
assign main_litedramcore_slave_p2_cs_n = main_litedramcore_dfi_p2_cs_n;
assign main_litedramcore_slave_p2_ras_n = main_litedramcore_dfi_p2_ras_n;
assign main_litedramcore_slave_p2_we_n = main_litedramcore_dfi_p2_we_n;
assign main_litedramcore_slave_p2_cke = main_litedramcore_dfi_p2_cke;
assign main_litedramcore_slave_p2_odt = main_litedramcore_dfi_p2_odt;
assign main_litedramcore_slave_p2_reset_n = main_litedramcore_dfi_p2_reset_n;
assign main_litedramcore_slave_p2_act_n = main_litedramcore_dfi_p2_act_n;
assign main_litedramcore_slave_p2_wrdata = main_litedramcore_dfi_p2_wrdata;
assign main_litedramcore_slave_p2_wrdata_en = main_litedramcore_dfi_p2_wrdata_en;
assign main_litedramcore_slave_p2_wrdata_mask = main_litedramcore_dfi_p2_wrdata_mask;
assign main_litedramcore_slave_p2_rddata_en = main_litedramcore_dfi_p2_rddata_en;
assign main_litedramcore_dfi_p2_rddata = main_litedramcore_slave_p2_rddata;
assign main_litedramcore_dfi_p2_rddata_valid = main_litedramcore_slave_p2_rddata_valid;
assign main_litedramcore_slave_p3_address = main_litedramcore_dfi_p3_address;
assign main_litedramcore_slave_p3_bank = main_litedramcore_dfi_p3_bank;
assign main_litedramcore_slave_p3_cas_n = main_litedramcore_dfi_p3_cas_n;
assign main_litedramcore_slave_p3_cs_n = main_litedramcore_dfi_p3_cs_n;
assign main_litedramcore_slave_p3_ras_n = main_litedramcore_dfi_p3_ras_n;
assign main_litedramcore_slave_p3_we_n = main_litedramcore_dfi_p3_we_n;
assign main_litedramcore_slave_p3_cke = main_litedramcore_dfi_p3_cke;
assign main_litedramcore_slave_p3_odt = main_litedramcore_dfi_p3_odt;
assign main_litedramcore_slave_p3_reset_n = main_litedramcore_dfi_p3_reset_n;
assign main_litedramcore_slave_p3_act_n = main_litedramcore_dfi_p3_act_n;
assign main_litedramcore_slave_p3_wrdata = main_litedramcore_dfi_p3_wrdata;
assign main_litedramcore_slave_p3_wrdata_en = main_litedramcore_dfi_p3_wrdata_en;
assign main_litedramcore_slave_p3_wrdata_mask = main_litedramcore_dfi_p3_wrdata_mask;
assign main_litedramcore_slave_p3_rddata_en = main_litedramcore_dfi_p3_rddata_en;
assign main_litedramcore_dfi_p3_rddata = main_litedramcore_slave_p3_rddata;
assign main_litedramcore_dfi_p3_rddata_valid = main_litedramcore_slave_p3_rddata_valid;
always @(*) begin
    main_litedramcore_csr_dfi_p0_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p0_rddata <= main_litedramcore_master_p0_rddata;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p0_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p0_rddata_valid <= main_litedramcore_master_p0_rddata_valid;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p1_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p1_rddata <= main_litedramcore_master_p1_rddata;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p1_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p1_rddata_valid <= main_litedramcore_master_p1_rddata_valid;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p2_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p2_rddata <= main_litedramcore_master_p2_rddata;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p2_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p2_rddata_valid <= main_litedramcore_master_p2_rddata_valid;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p3_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p3_rddata <= main_litedramcore_master_p3_rddata;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p3_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
    end else begin
        main_litedramcore_csr_dfi_p3_rddata_valid <= main_litedramcore_master_p3_rddata_valid;
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p0_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p0_rddata <= main_litedramcore_master_p0_rddata;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p0_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p0_rddata_valid <= main_litedramcore_master_p0_rddata_valid;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p1_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p1_rddata <= main_litedramcore_master_p1_rddata;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p1_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p1_rddata_valid <= main_litedramcore_master_p1_rddata_valid;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p2_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p2_rddata <= main_litedramcore_master_p2_rddata;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p2_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p2_rddata_valid <= main_litedramcore_master_p2_rddata_valid;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p0_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p0_rddata <= main_litedramcore_master_p0_rddata;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p0_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p0_rddata_valid <= main_litedramcore_master_p0_rddata_valid;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p3_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p3_rddata <= main_litedramcore_master_p3_rddata;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_ext_dfi_p3_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_ext_dfi_p3_rddata_valid <= main_litedramcore_master_p3_rddata_valid;
        end else begin
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p1_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p1_rddata <= main_litedramcore_master_p1_rddata;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p1_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p1_rddata_valid <= main_litedramcore_master_p1_rddata_valid;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p2_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p2_rddata <= main_litedramcore_master_p2_rddata;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p2_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p2_rddata_valid <= main_litedramcore_master_p2_rddata_valid;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p3_rddata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p3_rddata <= main_litedramcore_master_p3_rddata;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_slave_p3_rddata_valid <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
        end else begin
            main_litedramcore_slave_p3_rddata_valid <= main_litedramcore_master_p3_rddata_valid;
        end
    end else begin
    end
end
always @(*) begin
    main_litedramcore_master_p0_address <= 15'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_address <= main_litedramcore_ext_dfi_p0_address;
        end else begin
            main_litedramcore_master_p0_address <= main_litedramcore_slave_p0_address;
        end
    end else begin
        main_litedramcore_master_p0_address <= main_litedramcore_csr_dfi_p0_address;
    end
end
always @(*) begin
    main_litedramcore_master_p0_bank <= 3'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_bank <= main_litedramcore_ext_dfi_p0_bank;
        end else begin
            main_litedramcore_master_p0_bank <= main_litedramcore_slave_p0_bank;
        end
    end else begin
        main_litedramcore_master_p0_bank <= main_litedramcore_csr_dfi_p0_bank;
    end
end
always @(*) begin
    main_litedramcore_master_p0_cas_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_cas_n <= main_litedramcore_ext_dfi_p0_cas_n;
        end else begin
            main_litedramcore_master_p0_cas_n <= main_litedramcore_slave_p0_cas_n;
        end
    end else begin
        main_litedramcore_master_p0_cas_n <= main_litedramcore_csr_dfi_p0_cas_n;
    end
end
always @(*) begin
    main_litedramcore_master_p0_cs_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_cs_n <= main_litedramcore_ext_dfi_p0_cs_n;
        end else begin
            main_litedramcore_master_p0_cs_n <= main_litedramcore_slave_p0_cs_n;
            if (1'd0) begin
                main_litedramcore_master_p0_cs_n <= {2{main_litedramcore_slave_p0_cs_n}};
            end
        end
    end else begin
        main_litedramcore_master_p0_cs_n <= main_litedramcore_csr_dfi_p0_cs_n;
    end
end
always @(*) begin
    main_litedramcore_master_p0_ras_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_ras_n <= main_litedramcore_ext_dfi_p0_ras_n;
        end else begin
            main_litedramcore_master_p0_ras_n <= main_litedramcore_slave_p0_ras_n;
        end
    end else begin
        main_litedramcore_master_p0_ras_n <= main_litedramcore_csr_dfi_p0_ras_n;
    end
end
always @(*) begin
    main_litedramcore_master_p0_we_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_we_n <= main_litedramcore_ext_dfi_p0_we_n;
        end else begin
            main_litedramcore_master_p0_we_n <= main_litedramcore_slave_p0_we_n;
        end
    end else begin
        main_litedramcore_master_p0_we_n <= main_litedramcore_csr_dfi_p0_we_n;
    end
end
always @(*) begin
    main_litedramcore_master_p0_cke <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_cke <= main_litedramcore_ext_dfi_p0_cke;
        end else begin
            main_litedramcore_master_p0_cke <= main_litedramcore_slave_p0_cke;
        end
    end else begin
        main_litedramcore_master_p0_cke <= main_litedramcore_csr_dfi_p0_cke;
    end
end
always @(*) begin
    main_litedramcore_master_p0_odt <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_odt <= main_litedramcore_ext_dfi_p0_odt;
        end else begin
            main_litedramcore_master_p0_odt <= main_litedramcore_slave_p0_odt;
        end
    end else begin
        main_litedramcore_master_p0_odt <= main_litedramcore_csr_dfi_p0_odt;
    end
end
always @(*) begin
    main_litedramcore_master_p0_reset_n <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_reset_n <= main_litedramcore_ext_dfi_p0_reset_n;
        end else begin
            main_litedramcore_master_p0_reset_n <= main_litedramcore_slave_p0_reset_n;
        end
    end else begin
        main_litedramcore_master_p0_reset_n <= main_litedramcore_csr_dfi_p0_reset_n;
    end
end
always @(*) begin
    main_litedramcore_master_p0_act_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_act_n <= main_litedramcore_ext_dfi_p0_act_n;
        end else begin
            main_litedramcore_master_p0_act_n <= main_litedramcore_slave_p0_act_n;
        end
    end else begin
        main_litedramcore_master_p0_act_n <= main_litedramcore_csr_dfi_p0_act_n;
    end
end
always @(*) begin
    main_litedramcore_master_p0_wrdata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_wrdata <= main_litedramcore_ext_dfi_p0_wrdata;
        end else begin
            main_litedramcore_master_p0_wrdata <= main_litedramcore_slave_p0_wrdata;
        end
    end else begin
        main_litedramcore_master_p0_wrdata <= main_litedramcore_csr_dfi_p0_wrdata;
    end
end
always @(*) begin
    main_litedramcore_master_p0_wrdata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_wrdata_en <= main_litedramcore_ext_dfi_p0_wrdata_en;
        end else begin
            main_litedramcore_master_p0_wrdata_en <= main_litedramcore_slave_p0_wrdata_en;
        end
    end else begin
        main_litedramcore_master_p0_wrdata_en <= main_litedramcore_csr_dfi_p0_wrdata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p0_wrdata_mask <= 8'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_wrdata_mask <= main_litedramcore_ext_dfi_p0_wrdata_mask;
        end else begin
            main_litedramcore_master_p0_wrdata_mask <= main_litedramcore_slave_p0_wrdata_mask;
        end
    end else begin
        main_litedramcore_master_p0_wrdata_mask <= main_litedramcore_csr_dfi_p0_wrdata_mask;
    end
end
always @(*) begin
    main_litedramcore_master_p0_rddata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p0_rddata_en <= main_litedramcore_ext_dfi_p0_rddata_en;
        end else begin
            main_litedramcore_master_p0_rddata_en <= main_litedramcore_slave_p0_rddata_en;
        end
    end else begin
        main_litedramcore_master_p0_rddata_en <= main_litedramcore_csr_dfi_p0_rddata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p1_address <= 15'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_address <= main_litedramcore_ext_dfi_p1_address;
        end else begin
            main_litedramcore_master_p1_address <= main_litedramcore_slave_p1_address;
        end
    end else begin
        main_litedramcore_master_p1_address <= main_litedramcore_csr_dfi_p1_address;
    end
end
always @(*) begin
    main_litedramcore_master_p1_bank <= 3'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_bank <= main_litedramcore_ext_dfi_p1_bank;
        end else begin
            main_litedramcore_master_p1_bank <= main_litedramcore_slave_p1_bank;
        end
    end else begin
        main_litedramcore_master_p1_bank <= main_litedramcore_csr_dfi_p1_bank;
    end
end
always @(*) begin
    main_litedramcore_master_p1_cas_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_cas_n <= main_litedramcore_ext_dfi_p1_cas_n;
        end else begin
            main_litedramcore_master_p1_cas_n <= main_litedramcore_slave_p1_cas_n;
        end
    end else begin
        main_litedramcore_master_p1_cas_n <= main_litedramcore_csr_dfi_p1_cas_n;
    end
end
always @(*) begin
    main_litedramcore_master_p1_cs_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_cs_n <= main_litedramcore_ext_dfi_p1_cs_n;
        end else begin
            main_litedramcore_master_p1_cs_n <= main_litedramcore_slave_p1_cs_n;
            if (1'd0) begin
                main_litedramcore_master_p1_cs_n <= {2{main_litedramcore_slave_p1_cs_n}};
            end
        end
    end else begin
        main_litedramcore_master_p1_cs_n <= main_litedramcore_csr_dfi_p1_cs_n;
    end
end
always @(*) begin
    main_litedramcore_master_p1_ras_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_ras_n <= main_litedramcore_ext_dfi_p1_ras_n;
        end else begin
            main_litedramcore_master_p1_ras_n <= main_litedramcore_slave_p1_ras_n;
        end
    end else begin
        main_litedramcore_master_p1_ras_n <= main_litedramcore_csr_dfi_p1_ras_n;
    end
end
always @(*) begin
    main_litedramcore_master_p1_we_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_we_n <= main_litedramcore_ext_dfi_p1_we_n;
        end else begin
            main_litedramcore_master_p1_we_n <= main_litedramcore_slave_p1_we_n;
        end
    end else begin
        main_litedramcore_master_p1_we_n <= main_litedramcore_csr_dfi_p1_we_n;
    end
end
always @(*) begin
    main_litedramcore_master_p1_cke <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_cke <= main_litedramcore_ext_dfi_p1_cke;
        end else begin
            main_litedramcore_master_p1_cke <= main_litedramcore_slave_p1_cke;
        end
    end else begin
        main_litedramcore_master_p1_cke <= main_litedramcore_csr_dfi_p1_cke;
    end
end
always @(*) begin
    main_litedramcore_master_p1_odt <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_odt <= main_litedramcore_ext_dfi_p1_odt;
        end else begin
            main_litedramcore_master_p1_odt <= main_litedramcore_slave_p1_odt;
        end
    end else begin
        main_litedramcore_master_p1_odt <= main_litedramcore_csr_dfi_p1_odt;
    end
end
always @(*) begin
    main_litedramcore_master_p1_reset_n <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_reset_n <= main_litedramcore_ext_dfi_p1_reset_n;
        end else begin
            main_litedramcore_master_p1_reset_n <= main_litedramcore_slave_p1_reset_n;
        end
    end else begin
        main_litedramcore_master_p1_reset_n <= main_litedramcore_csr_dfi_p1_reset_n;
    end
end
always @(*) begin
    main_litedramcore_master_p1_act_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_act_n <= main_litedramcore_ext_dfi_p1_act_n;
        end else begin
            main_litedramcore_master_p1_act_n <= main_litedramcore_slave_p1_act_n;
        end
    end else begin
        main_litedramcore_master_p1_act_n <= main_litedramcore_csr_dfi_p1_act_n;
    end
end
always @(*) begin
    main_litedramcore_master_p1_wrdata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_wrdata <= main_litedramcore_ext_dfi_p1_wrdata;
        end else begin
            main_litedramcore_master_p1_wrdata <= main_litedramcore_slave_p1_wrdata;
        end
    end else begin
        main_litedramcore_master_p1_wrdata <= main_litedramcore_csr_dfi_p1_wrdata;
    end
end
always @(*) begin
    main_litedramcore_master_p1_wrdata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_wrdata_en <= main_litedramcore_ext_dfi_p1_wrdata_en;
        end else begin
            main_litedramcore_master_p1_wrdata_en <= main_litedramcore_slave_p1_wrdata_en;
        end
    end else begin
        main_litedramcore_master_p1_wrdata_en <= main_litedramcore_csr_dfi_p1_wrdata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p1_wrdata_mask <= 8'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_wrdata_mask <= main_litedramcore_ext_dfi_p1_wrdata_mask;
        end else begin
            main_litedramcore_master_p1_wrdata_mask <= main_litedramcore_slave_p1_wrdata_mask;
        end
    end else begin
        main_litedramcore_master_p1_wrdata_mask <= main_litedramcore_csr_dfi_p1_wrdata_mask;
    end
end
always @(*) begin
    main_litedramcore_master_p1_rddata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p1_rddata_en <= main_litedramcore_ext_dfi_p1_rddata_en;
        end else begin
            main_litedramcore_master_p1_rddata_en <= main_litedramcore_slave_p1_rddata_en;
        end
    end else begin
        main_litedramcore_master_p1_rddata_en <= main_litedramcore_csr_dfi_p1_rddata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p2_address <= 15'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_address <= main_litedramcore_ext_dfi_p2_address;
        end else begin
            main_litedramcore_master_p2_address <= main_litedramcore_slave_p2_address;
        end
    end else begin
        main_litedramcore_master_p2_address <= main_litedramcore_csr_dfi_p2_address;
    end
end
always @(*) begin
    main_litedramcore_master_p2_bank <= 3'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_bank <= main_litedramcore_ext_dfi_p2_bank;
        end else begin
            main_litedramcore_master_p2_bank <= main_litedramcore_slave_p2_bank;
        end
    end else begin
        main_litedramcore_master_p2_bank <= main_litedramcore_csr_dfi_p2_bank;
    end
end
always @(*) begin
    main_litedramcore_master_p2_cas_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_cas_n <= main_litedramcore_ext_dfi_p2_cas_n;
        end else begin
            main_litedramcore_master_p2_cas_n <= main_litedramcore_slave_p2_cas_n;
        end
    end else begin
        main_litedramcore_master_p2_cas_n <= main_litedramcore_csr_dfi_p2_cas_n;
    end
end
always @(*) begin
    main_litedramcore_master_p2_cs_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_cs_n <= main_litedramcore_ext_dfi_p2_cs_n;
        end else begin
            main_litedramcore_master_p2_cs_n <= main_litedramcore_slave_p2_cs_n;
            if (1'd0) begin
                main_litedramcore_master_p2_cs_n <= {2{main_litedramcore_slave_p2_cs_n}};
            end
        end
    end else begin
        main_litedramcore_master_p2_cs_n <= main_litedramcore_csr_dfi_p2_cs_n;
    end
end
always @(*) begin
    main_litedramcore_master_p2_ras_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_ras_n <= main_litedramcore_ext_dfi_p2_ras_n;
        end else begin
            main_litedramcore_master_p2_ras_n <= main_litedramcore_slave_p2_ras_n;
        end
    end else begin
        main_litedramcore_master_p2_ras_n <= main_litedramcore_csr_dfi_p2_ras_n;
    end
end
always @(*) begin
    main_litedramcore_master_p2_we_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_we_n <= main_litedramcore_ext_dfi_p2_we_n;
        end else begin
            main_litedramcore_master_p2_we_n <= main_litedramcore_slave_p2_we_n;
        end
    end else begin
        main_litedramcore_master_p2_we_n <= main_litedramcore_csr_dfi_p2_we_n;
    end
end
always @(*) begin
    main_litedramcore_master_p2_cke <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_cke <= main_litedramcore_ext_dfi_p2_cke;
        end else begin
            main_litedramcore_master_p2_cke <= main_litedramcore_slave_p2_cke;
        end
    end else begin
        main_litedramcore_master_p2_cke <= main_litedramcore_csr_dfi_p2_cke;
    end
end
always @(*) begin
    main_litedramcore_master_p2_odt <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_odt <= main_litedramcore_ext_dfi_p2_odt;
        end else begin
            main_litedramcore_master_p2_odt <= main_litedramcore_slave_p2_odt;
        end
    end else begin
        main_litedramcore_master_p2_odt <= main_litedramcore_csr_dfi_p2_odt;
    end
end
always @(*) begin
    main_litedramcore_master_p2_reset_n <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_reset_n <= main_litedramcore_ext_dfi_p2_reset_n;
        end else begin
            main_litedramcore_master_p2_reset_n <= main_litedramcore_slave_p2_reset_n;
        end
    end else begin
        main_litedramcore_master_p2_reset_n <= main_litedramcore_csr_dfi_p2_reset_n;
    end
end
always @(*) begin
    main_litedramcore_master_p2_act_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_act_n <= main_litedramcore_ext_dfi_p2_act_n;
        end else begin
            main_litedramcore_master_p2_act_n <= main_litedramcore_slave_p2_act_n;
        end
    end else begin
        main_litedramcore_master_p2_act_n <= main_litedramcore_csr_dfi_p2_act_n;
    end
end
always @(*) begin
    main_litedramcore_master_p2_wrdata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_wrdata <= main_litedramcore_ext_dfi_p2_wrdata;
        end else begin
            main_litedramcore_master_p2_wrdata <= main_litedramcore_slave_p2_wrdata;
        end
    end else begin
        main_litedramcore_master_p2_wrdata <= main_litedramcore_csr_dfi_p2_wrdata;
    end
end
always @(*) begin
    main_litedramcore_master_p2_wrdata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_wrdata_en <= main_litedramcore_ext_dfi_p2_wrdata_en;
        end else begin
            main_litedramcore_master_p2_wrdata_en <= main_litedramcore_slave_p2_wrdata_en;
        end
    end else begin
        main_litedramcore_master_p2_wrdata_en <= main_litedramcore_csr_dfi_p2_wrdata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p2_wrdata_mask <= 8'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_wrdata_mask <= main_litedramcore_ext_dfi_p2_wrdata_mask;
        end else begin
            main_litedramcore_master_p2_wrdata_mask <= main_litedramcore_slave_p2_wrdata_mask;
        end
    end else begin
        main_litedramcore_master_p2_wrdata_mask <= main_litedramcore_csr_dfi_p2_wrdata_mask;
    end
end
always @(*) begin
    main_litedramcore_master_p2_rddata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p2_rddata_en <= main_litedramcore_ext_dfi_p2_rddata_en;
        end else begin
            main_litedramcore_master_p2_rddata_en <= main_litedramcore_slave_p2_rddata_en;
        end
    end else begin
        main_litedramcore_master_p2_rddata_en <= main_litedramcore_csr_dfi_p2_rddata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p3_address <= 15'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_address <= main_litedramcore_ext_dfi_p3_address;
        end else begin
            main_litedramcore_master_p3_address <= main_litedramcore_slave_p3_address;
        end
    end else begin
        main_litedramcore_master_p3_address <= main_litedramcore_csr_dfi_p3_address;
    end
end
always @(*) begin
    main_litedramcore_master_p3_bank <= 3'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_bank <= main_litedramcore_ext_dfi_p3_bank;
        end else begin
            main_litedramcore_master_p3_bank <= main_litedramcore_slave_p3_bank;
        end
    end else begin
        main_litedramcore_master_p3_bank <= main_litedramcore_csr_dfi_p3_bank;
    end
end
always @(*) begin
    main_litedramcore_master_p3_cas_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_cas_n <= main_litedramcore_ext_dfi_p3_cas_n;
        end else begin
            main_litedramcore_master_p3_cas_n <= main_litedramcore_slave_p3_cas_n;
        end
    end else begin
        main_litedramcore_master_p3_cas_n <= main_litedramcore_csr_dfi_p3_cas_n;
    end
end
always @(*) begin
    main_litedramcore_master_p3_cs_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_cs_n <= main_litedramcore_ext_dfi_p3_cs_n;
        end else begin
            main_litedramcore_master_p3_cs_n <= main_litedramcore_slave_p3_cs_n;
            if (1'd0) begin
                main_litedramcore_master_p3_cs_n <= {2{main_litedramcore_slave_p3_cs_n}};
            end
        end
    end else begin
        main_litedramcore_master_p3_cs_n <= main_litedramcore_csr_dfi_p3_cs_n;
    end
end
always @(*) begin
    main_litedramcore_master_p3_ras_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_ras_n <= main_litedramcore_ext_dfi_p3_ras_n;
        end else begin
            main_litedramcore_master_p3_ras_n <= main_litedramcore_slave_p3_ras_n;
        end
    end else begin
        main_litedramcore_master_p3_ras_n <= main_litedramcore_csr_dfi_p3_ras_n;
    end
end
always @(*) begin
    main_litedramcore_master_p3_we_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_we_n <= main_litedramcore_ext_dfi_p3_we_n;
        end else begin
            main_litedramcore_master_p3_we_n <= main_litedramcore_slave_p3_we_n;
        end
    end else begin
        main_litedramcore_master_p3_we_n <= main_litedramcore_csr_dfi_p3_we_n;
    end
end
always @(*) begin
    main_litedramcore_master_p3_cke <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_cke <= main_litedramcore_ext_dfi_p3_cke;
        end else begin
            main_litedramcore_master_p3_cke <= main_litedramcore_slave_p3_cke;
        end
    end else begin
        main_litedramcore_master_p3_cke <= main_litedramcore_csr_dfi_p3_cke;
    end
end
always @(*) begin
    main_litedramcore_master_p3_odt <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_odt <= main_litedramcore_ext_dfi_p3_odt;
        end else begin
            main_litedramcore_master_p3_odt <= main_litedramcore_slave_p3_odt;
        end
    end else begin
        main_litedramcore_master_p3_odt <= main_litedramcore_csr_dfi_p3_odt;
    end
end
always @(*) begin
    main_litedramcore_master_p3_reset_n <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_reset_n <= main_litedramcore_ext_dfi_p3_reset_n;
        end else begin
            main_litedramcore_master_p3_reset_n <= main_litedramcore_slave_p3_reset_n;
        end
    end else begin
        main_litedramcore_master_p3_reset_n <= main_litedramcore_csr_dfi_p3_reset_n;
    end
end
always @(*) begin
    main_litedramcore_master_p3_act_n <= 1'd1;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_act_n <= main_litedramcore_ext_dfi_p3_act_n;
        end else begin
            main_litedramcore_master_p3_act_n <= main_litedramcore_slave_p3_act_n;
        end
    end else begin
        main_litedramcore_master_p3_act_n <= main_litedramcore_csr_dfi_p3_act_n;
    end
end
always @(*) begin
    main_litedramcore_master_p3_wrdata <= 64'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_wrdata <= main_litedramcore_ext_dfi_p3_wrdata;
        end else begin
            main_litedramcore_master_p3_wrdata <= main_litedramcore_slave_p3_wrdata;
        end
    end else begin
        main_litedramcore_master_p3_wrdata <= main_litedramcore_csr_dfi_p3_wrdata;
    end
end
always @(*) begin
    main_litedramcore_master_p3_wrdata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_wrdata_en <= main_litedramcore_ext_dfi_p3_wrdata_en;
        end else begin
            main_litedramcore_master_p3_wrdata_en <= main_litedramcore_slave_p3_wrdata_en;
        end
    end else begin
        main_litedramcore_master_p3_wrdata_en <= main_litedramcore_csr_dfi_p3_wrdata_en;
    end
end
always @(*) begin
    main_litedramcore_master_p3_wrdata_mask <= 8'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_wrdata_mask <= main_litedramcore_ext_dfi_p3_wrdata_mask;
        end else begin
            main_litedramcore_master_p3_wrdata_mask <= main_litedramcore_slave_p3_wrdata_mask;
        end
    end else begin
        main_litedramcore_master_p3_wrdata_mask <= main_litedramcore_csr_dfi_p3_wrdata_mask;
    end
end
always @(*) begin
    main_litedramcore_master_p3_rddata_en <= 1'd0;
    if (main_litedramcore_sel) begin
        if (main_litedramcore_ext_dfi_sel) begin
            main_litedramcore_master_p3_rddata_en <= main_litedramcore_ext_dfi_p3_rddata_en;
        end else begin
            main_litedramcore_master_p3_rddata_en <= main_litedramcore_slave_p3_rddata_en;
        end
    end else begin
        main_litedramcore_master_p3_rddata_en <= main_litedramcore_csr_dfi_p3_rddata_en;
    end
end
assign main_litedramcore_csr_dfi_p0_cke = main_litedramcore_cke;
assign main_litedramcore_csr_dfi_p1_cke = main_litedramcore_cke;
assign main_litedramcore_csr_dfi_p2_cke = main_litedramcore_cke;
assign main_litedramcore_csr_dfi_p3_cke = main_litedramcore_cke;
assign main_litedramcore_csr_dfi_p0_odt = main_litedramcore_odt;
assign main_litedramcore_csr_dfi_p1_odt = main_litedramcore_odt;
assign main_litedramcore_csr_dfi_p2_odt = main_litedramcore_odt;
assign main_litedramcore_csr_dfi_p3_odt = main_litedramcore_odt;
assign main_litedramcore_csr_dfi_p0_reset_n = main_litedramcore_reset_n;
assign main_litedramcore_csr_dfi_p1_reset_n = main_litedramcore_reset_n;
assign main_litedramcore_csr_dfi_p2_reset_n = main_litedramcore_reset_n;
assign main_litedramcore_csr_dfi_p3_reset_n = main_litedramcore_reset_n;
always @(*) begin
    main_litedramcore_csr_dfi_p0_cas_n <= 1'd1;
    if (main_litedramcore_phaseinjector0_command_issue_re) begin
        main_litedramcore_csr_dfi_p0_cas_n <= (~main_litedramcore_phaseinjector0_csrfield_cas);
    end else begin
        main_litedramcore_csr_dfi_p0_cas_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p0_cs_n <= 1'd1;
    if (main_litedramcore_phaseinjector0_command_issue_re) begin
        if (main_litedramcore_phaseinjector0_csrfield_cs_top) begin
            main_litedramcore_csr_dfi_p0_cs_n <= 2'd2;
        end else begin
            if (main_litedramcore_phaseinjector0_csrfield_cs_bottom) begin
                main_litedramcore_csr_dfi_p0_cs_n <= 1'd1;
            end else begin
                main_litedramcore_csr_dfi_p0_cs_n <= {1{(~main_litedramcore_phaseinjector0_csrfield_cs)}};
            end
        end
    end else begin
        main_litedramcore_csr_dfi_p0_cs_n <= {1{1'd1}};
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p0_ras_n <= 1'd1;
    if (main_litedramcore_phaseinjector0_command_issue_re) begin
        main_litedramcore_csr_dfi_p0_ras_n <= (~main_litedramcore_phaseinjector0_csrfield_ras);
    end else begin
        main_litedramcore_csr_dfi_p0_ras_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p0_we_n <= 1'd1;
    if (main_litedramcore_phaseinjector0_command_issue_re) begin
        main_litedramcore_csr_dfi_p0_we_n <= (~main_litedramcore_phaseinjector0_csrfield_we);
    end else begin
        main_litedramcore_csr_dfi_p0_we_n <= 1'd1;
    end
end
assign main_litedramcore_csr_dfi_p0_address = main_litedramcore_phaseinjector0_address_storage;
assign main_litedramcore_csr_dfi_p0_bank = main_litedramcore_phaseinjector0_baddress_storage;
assign main_litedramcore_csr_dfi_p0_wrdata_en = (main_litedramcore_phaseinjector0_command_issue_re & main_litedramcore_phaseinjector0_csrfield_wren);
assign main_litedramcore_csr_dfi_p0_rddata_en = (main_litedramcore_phaseinjector0_command_issue_re & main_litedramcore_phaseinjector0_csrfield_rden);
assign main_litedramcore_csr_dfi_p0_wrdata = main_litedramcore_phaseinjector0_wrdata_storage;
assign main_litedramcore_csr_dfi_p0_wrdata_mask = 1'd0;
always @(*) begin
    main_litedramcore_csr_dfi_p1_cas_n <= 1'd1;
    if (main_litedramcore_phaseinjector1_command_issue_re) begin
        main_litedramcore_csr_dfi_p1_cas_n <= (~main_litedramcore_phaseinjector1_csrfield_cas);
    end else begin
        main_litedramcore_csr_dfi_p1_cas_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p1_cs_n <= 1'd1;
    if (main_litedramcore_phaseinjector1_command_issue_re) begin
        if (main_litedramcore_phaseinjector1_csrfield_cs_top) begin
            main_litedramcore_csr_dfi_p1_cs_n <= 2'd2;
        end else begin
            if (main_litedramcore_phaseinjector1_csrfield_cs_bottom) begin
                main_litedramcore_csr_dfi_p1_cs_n <= 1'd1;
            end else begin
                main_litedramcore_csr_dfi_p1_cs_n <= {1{(~main_litedramcore_phaseinjector1_csrfield_cs)}};
            end
        end
    end else begin
        main_litedramcore_csr_dfi_p1_cs_n <= {1{1'd1}};
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p1_ras_n <= 1'd1;
    if (main_litedramcore_phaseinjector1_command_issue_re) begin
        main_litedramcore_csr_dfi_p1_ras_n <= (~main_litedramcore_phaseinjector1_csrfield_ras);
    end else begin
        main_litedramcore_csr_dfi_p1_ras_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p1_we_n <= 1'd1;
    if (main_litedramcore_phaseinjector1_command_issue_re) begin
        main_litedramcore_csr_dfi_p1_we_n <= (~main_litedramcore_phaseinjector1_csrfield_we);
    end else begin
        main_litedramcore_csr_dfi_p1_we_n <= 1'd1;
    end
end
assign main_litedramcore_csr_dfi_p1_address = main_litedramcore_phaseinjector1_address_storage;
assign main_litedramcore_csr_dfi_p1_bank = main_litedramcore_phaseinjector1_baddress_storage;
assign main_litedramcore_csr_dfi_p1_wrdata_en = (main_litedramcore_phaseinjector1_command_issue_re & main_litedramcore_phaseinjector1_csrfield_wren);
assign main_litedramcore_csr_dfi_p1_rddata_en = (main_litedramcore_phaseinjector1_command_issue_re & main_litedramcore_phaseinjector1_csrfield_rden);
assign main_litedramcore_csr_dfi_p1_wrdata = main_litedramcore_phaseinjector1_wrdata_storage;
assign main_litedramcore_csr_dfi_p1_wrdata_mask = 1'd0;
always @(*) begin
    main_litedramcore_csr_dfi_p2_cas_n <= 1'd1;
    if (main_litedramcore_phaseinjector2_command_issue_re) begin
        main_litedramcore_csr_dfi_p2_cas_n <= (~main_litedramcore_phaseinjector2_csrfield_cas);
    end else begin
        main_litedramcore_csr_dfi_p2_cas_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p2_cs_n <= 1'd1;
    if (main_litedramcore_phaseinjector2_command_issue_re) begin
        if (main_litedramcore_phaseinjector2_csrfield_cs_top) begin
            main_litedramcore_csr_dfi_p2_cs_n <= 2'd2;
        end else begin
            if (main_litedramcore_phaseinjector2_csrfield_cs_bottom) begin
                main_litedramcore_csr_dfi_p2_cs_n <= 1'd1;
            end else begin
                main_litedramcore_csr_dfi_p2_cs_n <= {1{(~main_litedramcore_phaseinjector2_csrfield_cs)}};
            end
        end
    end else begin
        main_litedramcore_csr_dfi_p2_cs_n <= {1{1'd1}};
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p2_ras_n <= 1'd1;
    if (main_litedramcore_phaseinjector2_command_issue_re) begin
        main_litedramcore_csr_dfi_p2_ras_n <= (~main_litedramcore_phaseinjector2_csrfield_ras);
    end else begin
        main_litedramcore_csr_dfi_p2_ras_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p2_we_n <= 1'd1;
    if (main_litedramcore_phaseinjector2_command_issue_re) begin
        main_litedramcore_csr_dfi_p2_we_n <= (~main_litedramcore_phaseinjector2_csrfield_we);
    end else begin
        main_litedramcore_csr_dfi_p2_we_n <= 1'd1;
    end
end
assign main_litedramcore_csr_dfi_p2_address = main_litedramcore_phaseinjector2_address_storage;
assign main_litedramcore_csr_dfi_p2_bank = main_litedramcore_phaseinjector2_baddress_storage;
assign main_litedramcore_csr_dfi_p2_wrdata_en = (main_litedramcore_phaseinjector2_command_issue_re & main_litedramcore_phaseinjector2_csrfield_wren);
assign main_litedramcore_csr_dfi_p2_rddata_en = (main_litedramcore_phaseinjector2_command_issue_re & main_litedramcore_phaseinjector2_csrfield_rden);
assign main_litedramcore_csr_dfi_p2_wrdata = main_litedramcore_phaseinjector2_wrdata_storage;
assign main_litedramcore_csr_dfi_p2_wrdata_mask = 1'd0;
always @(*) begin
    main_litedramcore_csr_dfi_p3_cas_n <= 1'd1;
    if (main_litedramcore_phaseinjector3_command_issue_re) begin
        main_litedramcore_csr_dfi_p3_cas_n <= (~main_litedramcore_phaseinjector3_csrfield_cas);
    end else begin
        main_litedramcore_csr_dfi_p3_cas_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p3_cs_n <= 1'd1;
    if (main_litedramcore_phaseinjector3_command_issue_re) begin
        if (main_litedramcore_phaseinjector3_csrfield_cs_top) begin
            main_litedramcore_csr_dfi_p3_cs_n <= 2'd2;
        end else begin
            if (main_litedramcore_phaseinjector3_csrfield_cs_bottom) begin
                main_litedramcore_csr_dfi_p3_cs_n <= 1'd1;
            end else begin
                main_litedramcore_csr_dfi_p3_cs_n <= {1{(~main_litedramcore_phaseinjector3_csrfield_cs)}};
            end
        end
    end else begin
        main_litedramcore_csr_dfi_p3_cs_n <= {1{1'd1}};
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p3_ras_n <= 1'd1;
    if (main_litedramcore_phaseinjector3_command_issue_re) begin
        main_litedramcore_csr_dfi_p3_ras_n <= (~main_litedramcore_phaseinjector3_csrfield_ras);
    end else begin
        main_litedramcore_csr_dfi_p3_ras_n <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_csr_dfi_p3_we_n <= 1'd1;
    if (main_litedramcore_phaseinjector3_command_issue_re) begin
        main_litedramcore_csr_dfi_p3_we_n <= (~main_litedramcore_phaseinjector3_csrfield_we);
    end else begin
        main_litedramcore_csr_dfi_p3_we_n <= 1'd1;
    end
end
assign main_litedramcore_csr_dfi_p3_address = main_litedramcore_phaseinjector3_address_storage;
assign main_litedramcore_csr_dfi_p3_bank = main_litedramcore_phaseinjector3_baddress_storage;
assign main_litedramcore_csr_dfi_p3_wrdata_en = (main_litedramcore_phaseinjector3_command_issue_re & main_litedramcore_phaseinjector3_csrfield_wren);
assign main_litedramcore_csr_dfi_p3_rddata_en = (main_litedramcore_phaseinjector3_command_issue_re & main_litedramcore_phaseinjector3_csrfield_rden);
assign main_litedramcore_csr_dfi_p3_wrdata = main_litedramcore_phaseinjector3_wrdata_storage;
assign main_litedramcore_csr_dfi_p3_wrdata_mask = 1'd0;
assign main_litedramcore_bankmachine0_req_valid = main_litedramcore_interface_bank0_valid;
assign main_litedramcore_interface_bank0_ready = main_litedramcore_bankmachine0_req_ready;
assign main_litedramcore_bankmachine0_req_we = main_litedramcore_interface_bank0_we;
assign main_litedramcore_bankmachine0_req_addr = main_litedramcore_interface_bank0_addr;
assign main_litedramcore_interface_bank0_lock = main_litedramcore_bankmachine0_req_lock;
assign main_litedramcore_interface_bank0_wdata_ready = main_litedramcore_bankmachine0_req_wdata_ready;
assign main_litedramcore_interface_bank0_rdata_valid = main_litedramcore_bankmachine0_req_rdata_valid;
assign main_litedramcore_bankmachine1_req_valid = main_litedramcore_interface_bank1_valid;
assign main_litedramcore_interface_bank1_ready = main_litedramcore_bankmachine1_req_ready;
assign main_litedramcore_bankmachine1_req_we = main_litedramcore_interface_bank1_we;
assign main_litedramcore_bankmachine1_req_addr = main_litedramcore_interface_bank1_addr;
assign main_litedramcore_interface_bank1_lock = main_litedramcore_bankmachine1_req_lock;
assign main_litedramcore_interface_bank1_wdata_ready = main_litedramcore_bankmachine1_req_wdata_ready;
assign main_litedramcore_interface_bank1_rdata_valid = main_litedramcore_bankmachine1_req_rdata_valid;
assign main_litedramcore_bankmachine2_req_valid = main_litedramcore_interface_bank2_valid;
assign main_litedramcore_interface_bank2_ready = main_litedramcore_bankmachine2_req_ready;
assign main_litedramcore_bankmachine2_req_we = main_litedramcore_interface_bank2_we;
assign main_litedramcore_bankmachine2_req_addr = main_litedramcore_interface_bank2_addr;
assign main_litedramcore_interface_bank2_lock = main_litedramcore_bankmachine2_req_lock;
assign main_litedramcore_interface_bank2_wdata_ready = main_litedramcore_bankmachine2_req_wdata_ready;
assign main_litedramcore_interface_bank2_rdata_valid = main_litedramcore_bankmachine2_req_rdata_valid;
assign main_litedramcore_bankmachine3_req_valid = main_litedramcore_interface_bank3_valid;
assign main_litedramcore_interface_bank3_ready = main_litedramcore_bankmachine3_req_ready;
assign main_litedramcore_bankmachine3_req_we = main_litedramcore_interface_bank3_we;
assign main_litedramcore_bankmachine3_req_addr = main_litedramcore_interface_bank3_addr;
assign main_litedramcore_interface_bank3_lock = main_litedramcore_bankmachine3_req_lock;
assign main_litedramcore_interface_bank3_wdata_ready = main_litedramcore_bankmachine3_req_wdata_ready;
assign main_litedramcore_interface_bank3_rdata_valid = main_litedramcore_bankmachine3_req_rdata_valid;
assign main_litedramcore_bankmachine4_req_valid = main_litedramcore_interface_bank4_valid;
assign main_litedramcore_interface_bank4_ready = main_litedramcore_bankmachine4_req_ready;
assign main_litedramcore_bankmachine4_req_we = main_litedramcore_interface_bank4_we;
assign main_litedramcore_bankmachine4_req_addr = main_litedramcore_interface_bank4_addr;
assign main_litedramcore_interface_bank4_lock = main_litedramcore_bankmachine4_req_lock;
assign main_litedramcore_interface_bank4_wdata_ready = main_litedramcore_bankmachine4_req_wdata_ready;
assign main_litedramcore_interface_bank4_rdata_valid = main_litedramcore_bankmachine4_req_rdata_valid;
assign main_litedramcore_bankmachine5_req_valid = main_litedramcore_interface_bank5_valid;
assign main_litedramcore_interface_bank5_ready = main_litedramcore_bankmachine5_req_ready;
assign main_litedramcore_bankmachine5_req_we = main_litedramcore_interface_bank5_we;
assign main_litedramcore_bankmachine5_req_addr = main_litedramcore_interface_bank5_addr;
assign main_litedramcore_interface_bank5_lock = main_litedramcore_bankmachine5_req_lock;
assign main_litedramcore_interface_bank5_wdata_ready = main_litedramcore_bankmachine5_req_wdata_ready;
assign main_litedramcore_interface_bank5_rdata_valid = main_litedramcore_bankmachine5_req_rdata_valid;
assign main_litedramcore_bankmachine6_req_valid = main_litedramcore_interface_bank6_valid;
assign main_litedramcore_interface_bank6_ready = main_litedramcore_bankmachine6_req_ready;
assign main_litedramcore_bankmachine6_req_we = main_litedramcore_interface_bank6_we;
assign main_litedramcore_bankmachine6_req_addr = main_litedramcore_interface_bank6_addr;
assign main_litedramcore_interface_bank6_lock = main_litedramcore_bankmachine6_req_lock;
assign main_litedramcore_interface_bank6_wdata_ready = main_litedramcore_bankmachine6_req_wdata_ready;
assign main_litedramcore_interface_bank6_rdata_valid = main_litedramcore_bankmachine6_req_rdata_valid;
assign main_litedramcore_bankmachine7_req_valid = main_litedramcore_interface_bank7_valid;
assign main_litedramcore_interface_bank7_ready = main_litedramcore_bankmachine7_req_ready;
assign main_litedramcore_bankmachine7_req_we = main_litedramcore_interface_bank7_we;
assign main_litedramcore_bankmachine7_req_addr = main_litedramcore_interface_bank7_addr;
assign main_litedramcore_interface_bank7_lock = main_litedramcore_bankmachine7_req_lock;
assign main_litedramcore_interface_bank7_wdata_ready = main_litedramcore_bankmachine7_req_wdata_ready;
assign main_litedramcore_interface_bank7_rdata_valid = main_litedramcore_bankmachine7_req_rdata_valid;
assign main_litedramcore_timer_wait = (~main_litedramcore_timer_done0);
assign main_litedramcore_postponer_req_i = main_litedramcore_timer_done0;
assign main_litedramcore_wants_refresh = main_litedramcore_postponer_req_o;
assign main_litedramcore_wants_zqcs = main_litedramcore_zqcs_timer_done0;
assign main_litedramcore_zqcs_timer_wait = (~main_litedramcore_zqcs_executer_done);
assign main_litedramcore_timer_done1 = (main_litedramcore_timer_count1 == 1'd0);
assign main_litedramcore_timer_done0 = main_litedramcore_timer_done1;
assign main_litedramcore_timer_count0 = main_litedramcore_timer_count1;
assign main_litedramcore_sequencer_start1 = (main_litedramcore_sequencer_start0 | (main_litedramcore_sequencer_count != 1'd0));
assign main_litedramcore_sequencer_done0 = (main_litedramcore_sequencer_done1 & (main_litedramcore_sequencer_count == 1'd0));
assign main_litedramcore_zqcs_timer_done1 = (main_litedramcore_zqcs_timer_count1 == 1'd0);
assign main_litedramcore_zqcs_timer_done0 = main_litedramcore_zqcs_timer_done1;
assign main_litedramcore_zqcs_timer_count0 = main_litedramcore_zqcs_timer_count1;
always @(*) begin
    builder_refresher_next_state <= 2'd0;
    builder_refresher_next_state <= builder_refresher_state;
    case (builder_refresher_state)
        1'd1: begin
            if (main_litedramcore_cmd_ready) begin
                builder_refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            if (main_litedramcore_sequencer_done0) begin
                if (main_litedramcore_wants_zqcs) begin
                    builder_refresher_next_state <= 2'd3;
                end else begin
                    builder_refresher_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            if (main_litedramcore_zqcs_executer_done) begin
                builder_refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (main_litedramcore_wants_refresh) begin
                    builder_refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_cmd_valid <= 1'd0;
    case (builder_refresher_state)
        1'd1: begin
            main_litedramcore_cmd_valid <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_cmd_valid <= 1'd1;
            if (main_litedramcore_sequencer_done0) begin
                if (main_litedramcore_wants_zqcs) begin
                end else begin
                    main_litedramcore_cmd_valid <= 1'd0;
                end
            end
        end
        2'd3: begin
            main_litedramcore_cmd_valid <= 1'd1;
            if (main_litedramcore_zqcs_executer_done) begin
                main_litedramcore_cmd_valid <= 1'd0;
            end
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_zqcs_executer_start <= 1'd0;
    case (builder_refresher_state)
        1'd1: begin
        end
        2'd2: begin
            if (main_litedramcore_sequencer_done0) begin
                if (main_litedramcore_wants_zqcs) begin
                    main_litedramcore_zqcs_executer_start <= 1'd1;
                end else begin
                end
            end
        end
        2'd3: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_cmd_last <= 1'd0;
    case (builder_refresher_state)
        1'd1: begin
        end
        2'd2: begin
            if (main_litedramcore_sequencer_done0) begin
                if (main_litedramcore_wants_zqcs) begin
                end else begin
                    main_litedramcore_cmd_last <= 1'd1;
                end
            end
        end
        2'd3: begin
            if (main_litedramcore_zqcs_executer_done) begin
                main_litedramcore_cmd_last <= 1'd1;
            end
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_sequencer_start0 <= 1'd0;
    case (builder_refresher_state)
        1'd1: begin
            if (main_litedramcore_cmd_ready) begin
                main_litedramcore_sequencer_start0 <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        default: begin
        end
    endcase
end
assign main_litedramcore_bankmachine0_sink_valid = main_litedramcore_bankmachine0_req_valid;
assign main_litedramcore_bankmachine0_req_ready = main_litedramcore_bankmachine0_sink_ready;
assign main_litedramcore_bankmachine0_sink_payload_we = main_litedramcore_bankmachine0_req_we;
assign main_litedramcore_bankmachine0_sink_payload_addr = main_litedramcore_bankmachine0_req_addr;
assign main_litedramcore_bankmachine0_sink_sink_valid = main_litedramcore_bankmachine0_source_valid;
assign main_litedramcore_bankmachine0_source_ready = main_litedramcore_bankmachine0_sink_sink_ready;
assign main_litedramcore_bankmachine0_sink_sink_first = main_litedramcore_bankmachine0_source_first;
assign main_litedramcore_bankmachine0_sink_sink_last = main_litedramcore_bankmachine0_source_last;
assign main_litedramcore_bankmachine0_sink_sink_payload_we = main_litedramcore_bankmachine0_source_payload_we;
assign main_litedramcore_bankmachine0_sink_sink_payload_addr = main_litedramcore_bankmachine0_source_payload_addr;
assign main_litedramcore_bankmachine0_source_source_ready = (main_litedramcore_bankmachine0_req_wdata_ready | main_litedramcore_bankmachine0_req_rdata_valid);
assign main_litedramcore_bankmachine0_req_lock = (main_litedramcore_bankmachine0_source_valid | main_litedramcore_bankmachine0_source_source_valid);
assign main_litedramcore_bankmachine0_row_hit = (main_litedramcore_bankmachine0_row == main_litedramcore_bankmachine0_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine0_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine0_cmd_payload_a <= main_litedramcore_bankmachine0_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine0_cmd_payload_a <= ((main_litedramcore_bankmachine0_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine0_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine0_twtpcon_valid = ((main_litedramcore_bankmachine0_cmd_valid & main_litedramcore_bankmachine0_cmd_ready) & main_litedramcore_bankmachine0_cmd_payload_is_write);
assign main_litedramcore_bankmachine0_trccon_valid = ((main_litedramcore_bankmachine0_cmd_valid & main_litedramcore_bankmachine0_cmd_ready) & main_litedramcore_bankmachine0_row_open);
assign main_litedramcore_bankmachine0_trascon_valid = ((main_litedramcore_bankmachine0_cmd_valid & main_litedramcore_bankmachine0_cmd_ready) & main_litedramcore_bankmachine0_row_open);
always @(*) begin
    main_litedramcore_bankmachine0_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine0_source_valid & main_litedramcore_bankmachine0_source_source_valid)) begin
        if ((main_litedramcore_bankmachine0_source_payload_addr[21:7] != main_litedramcore_bankmachine0_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine0_auto_precharge <= (main_litedramcore_bankmachine0_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine0_syncfifo0_din = {main_litedramcore_bankmachine0_fifo_in_last, main_litedramcore_bankmachine0_fifo_in_first, main_litedramcore_bankmachine0_fifo_in_payload_addr, main_litedramcore_bankmachine0_fifo_in_payload_we};
assign {main_litedramcore_bankmachine0_fifo_out_last, main_litedramcore_bankmachine0_fifo_out_first, main_litedramcore_bankmachine0_fifo_out_payload_addr, main_litedramcore_bankmachine0_fifo_out_payload_we} = main_litedramcore_bankmachine0_syncfifo0_dout;
assign {main_litedramcore_bankmachine0_fifo_out_last, main_litedramcore_bankmachine0_fifo_out_first, main_litedramcore_bankmachine0_fifo_out_payload_addr, main_litedramcore_bankmachine0_fifo_out_payload_we} = main_litedramcore_bankmachine0_syncfifo0_dout;
assign {main_litedramcore_bankmachine0_fifo_out_last, main_litedramcore_bankmachine0_fifo_out_first, main_litedramcore_bankmachine0_fifo_out_payload_addr, main_litedramcore_bankmachine0_fifo_out_payload_we} = main_litedramcore_bankmachine0_syncfifo0_dout;
assign {main_litedramcore_bankmachine0_fifo_out_last, main_litedramcore_bankmachine0_fifo_out_first, main_litedramcore_bankmachine0_fifo_out_payload_addr, main_litedramcore_bankmachine0_fifo_out_payload_we} = main_litedramcore_bankmachine0_syncfifo0_dout;
assign main_litedramcore_bankmachine0_sink_ready = main_litedramcore_bankmachine0_syncfifo0_writable;
assign main_litedramcore_bankmachine0_syncfifo0_we = main_litedramcore_bankmachine0_sink_valid;
assign main_litedramcore_bankmachine0_fifo_in_first = main_litedramcore_bankmachine0_sink_first;
assign main_litedramcore_bankmachine0_fifo_in_last = main_litedramcore_bankmachine0_sink_last;
assign main_litedramcore_bankmachine0_fifo_in_payload_we = main_litedramcore_bankmachine0_sink_payload_we;
assign main_litedramcore_bankmachine0_fifo_in_payload_addr = main_litedramcore_bankmachine0_sink_payload_addr;
assign main_litedramcore_bankmachine0_source_valid = main_litedramcore_bankmachine0_syncfifo0_readable;
assign main_litedramcore_bankmachine0_source_first = main_litedramcore_bankmachine0_fifo_out_first;
assign main_litedramcore_bankmachine0_source_last = main_litedramcore_bankmachine0_fifo_out_last;
assign main_litedramcore_bankmachine0_source_payload_we = main_litedramcore_bankmachine0_fifo_out_payload_we;
assign main_litedramcore_bankmachine0_source_payload_addr = main_litedramcore_bankmachine0_fifo_out_payload_addr;
assign main_litedramcore_bankmachine0_syncfifo0_re = main_litedramcore_bankmachine0_source_ready;
always @(*) begin
    main_litedramcore_bankmachine0_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine0_replace) begin
        main_litedramcore_bankmachine0_wrport_adr <= (main_litedramcore_bankmachine0_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine0_wrport_adr <= main_litedramcore_bankmachine0_produce;
    end
end
assign main_litedramcore_bankmachine0_wrport_dat_w = main_litedramcore_bankmachine0_syncfifo0_din;
assign main_litedramcore_bankmachine0_wrport_we = (main_litedramcore_bankmachine0_syncfifo0_we & (main_litedramcore_bankmachine0_syncfifo0_writable | main_litedramcore_bankmachine0_replace));
assign main_litedramcore_bankmachine0_do_read = (main_litedramcore_bankmachine0_syncfifo0_readable & main_litedramcore_bankmachine0_syncfifo0_re);
assign main_litedramcore_bankmachine0_rdport_adr = main_litedramcore_bankmachine0_consume;
assign main_litedramcore_bankmachine0_syncfifo0_dout = main_litedramcore_bankmachine0_rdport_dat_r;
assign main_litedramcore_bankmachine0_syncfifo0_writable = (main_litedramcore_bankmachine0_level != 5'd16);
assign main_litedramcore_bankmachine0_syncfifo0_readable = (main_litedramcore_bankmachine0_level != 1'd0);
assign main_litedramcore_bankmachine0_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine0_pipe_valid_source_valid) | main_litedramcore_bankmachine0_pipe_valid_source_ready);
assign main_litedramcore_bankmachine0_pipe_valid_sink_valid = main_litedramcore_bankmachine0_sink_sink_valid;
assign main_litedramcore_bankmachine0_sink_sink_ready = main_litedramcore_bankmachine0_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine0_pipe_valid_sink_first = main_litedramcore_bankmachine0_sink_sink_first;
assign main_litedramcore_bankmachine0_pipe_valid_sink_last = main_litedramcore_bankmachine0_sink_sink_last;
assign main_litedramcore_bankmachine0_pipe_valid_sink_payload_we = main_litedramcore_bankmachine0_sink_sink_payload_we;
assign main_litedramcore_bankmachine0_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine0_sink_sink_payload_addr;
assign main_litedramcore_bankmachine0_source_source_valid = main_litedramcore_bankmachine0_pipe_valid_source_valid;
assign main_litedramcore_bankmachine0_pipe_valid_source_ready = main_litedramcore_bankmachine0_source_source_ready;
assign main_litedramcore_bankmachine0_source_source_first = main_litedramcore_bankmachine0_pipe_valid_source_first;
assign main_litedramcore_bankmachine0_source_source_last = main_litedramcore_bankmachine0_pipe_valid_source_last;
assign main_litedramcore_bankmachine0_source_source_payload_we = main_litedramcore_bankmachine0_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine0_source_source_payload_addr = main_litedramcore_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine0_next_state <= 4'd0;
    builder_bankmachine0_next_state <= builder_bankmachine0_state;
    case (builder_bankmachine0_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine0_twtpcon_ready & main_litedramcore_bankmachine0_trascon_ready)) begin
                if (main_litedramcore_bankmachine0_cmd_ready) begin
                    builder_bankmachine0_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine0_twtpcon_ready & main_litedramcore_bankmachine0_trascon_ready)) begin
                builder_bankmachine0_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine0_trccon_ready) begin
                if (main_litedramcore_bankmachine0_cmd_ready) begin
                    builder_bankmachine0_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine0_refresh_req)) begin
                builder_bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine0_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine0_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine0_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
                builder_bankmachine0_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            if ((main_litedramcore_bankmachine0_cmd_ready & main_litedramcore_bankmachine0_auto_precharge)) begin
                                builder_bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            if (main_litedramcore_bankmachine0_source_source_payload_we) begin
                                main_litedramcore_bankmachine0_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_req_wdata_ready <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            if (main_litedramcore_bankmachine0_source_source_payload_we) begin
                                main_litedramcore_bankmachine0_req_wdata_ready <= main_litedramcore_bankmachine0_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_req_rdata_valid <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            if (main_litedramcore_bankmachine0_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine0_req_rdata_valid <= main_litedramcore_bankmachine0_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_refresh_gnt <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine0_twtpcon_ready) begin
                main_litedramcore_bankmachine0_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_row_open <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine0_trccon_ready) begin
                main_litedramcore_bankmachine0_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_valid <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine0_twtpcon_ready & main_litedramcore_bankmachine0_trascon_ready)) begin
                main_litedramcore_bankmachine0_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine0_trccon_ready) begin
                main_litedramcore_bankmachine0_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            main_litedramcore_bankmachine0_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_row_close <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
            main_litedramcore_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine0_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine0_trccon_ready) begin
                main_litedramcore_bankmachine0_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            main_litedramcore_bankmachine0_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine0_twtpcon_ready & main_litedramcore_bankmachine0_trascon_ready)) begin
                main_litedramcore_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine0_trccon_ready) begin
                main_litedramcore_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_we <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine0_twtpcon_ready & main_litedramcore_bankmachine0_trascon_ready)) begin
                main_litedramcore_bankmachine0_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            if (main_litedramcore_bankmachine0_source_source_payload_we) begin
                                main_litedramcore_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine0_twtpcon_ready & main_litedramcore_bankmachine0_trascon_ready)) begin
                main_litedramcore_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine0_trccon_ready) begin
                main_litedramcore_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine0_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine0_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine0_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine0_source_source_valid) begin
                    if (main_litedramcore_bankmachine0_row_opened) begin
                        if (main_litedramcore_bankmachine0_row_hit) begin
                            if (main_litedramcore_bankmachine0_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
assign main_litedramcore_bankmachine1_sink_valid = main_litedramcore_bankmachine1_req_valid;
assign main_litedramcore_bankmachine1_req_ready = main_litedramcore_bankmachine1_sink_ready;
assign main_litedramcore_bankmachine1_sink_payload_we = main_litedramcore_bankmachine1_req_we;
assign main_litedramcore_bankmachine1_sink_payload_addr = main_litedramcore_bankmachine1_req_addr;
assign main_litedramcore_bankmachine1_sink_sink_valid = main_litedramcore_bankmachine1_source_valid;
assign main_litedramcore_bankmachine1_source_ready = main_litedramcore_bankmachine1_sink_sink_ready;
assign main_litedramcore_bankmachine1_sink_sink_first = main_litedramcore_bankmachine1_source_first;
assign main_litedramcore_bankmachine1_sink_sink_last = main_litedramcore_bankmachine1_source_last;
assign main_litedramcore_bankmachine1_sink_sink_payload_we = main_litedramcore_bankmachine1_source_payload_we;
assign main_litedramcore_bankmachine1_sink_sink_payload_addr = main_litedramcore_bankmachine1_source_payload_addr;
assign main_litedramcore_bankmachine1_source_source_ready = (main_litedramcore_bankmachine1_req_wdata_ready | main_litedramcore_bankmachine1_req_rdata_valid);
assign main_litedramcore_bankmachine1_req_lock = (main_litedramcore_bankmachine1_source_valid | main_litedramcore_bankmachine1_source_source_valid);
assign main_litedramcore_bankmachine1_row_hit = (main_litedramcore_bankmachine1_row == main_litedramcore_bankmachine1_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine1_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine1_cmd_payload_a <= main_litedramcore_bankmachine1_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine1_cmd_payload_a <= ((main_litedramcore_bankmachine1_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine1_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine1_twtpcon_valid = ((main_litedramcore_bankmachine1_cmd_valid & main_litedramcore_bankmachine1_cmd_ready) & main_litedramcore_bankmachine1_cmd_payload_is_write);
assign main_litedramcore_bankmachine1_trccon_valid = ((main_litedramcore_bankmachine1_cmd_valid & main_litedramcore_bankmachine1_cmd_ready) & main_litedramcore_bankmachine1_row_open);
assign main_litedramcore_bankmachine1_trascon_valid = ((main_litedramcore_bankmachine1_cmd_valid & main_litedramcore_bankmachine1_cmd_ready) & main_litedramcore_bankmachine1_row_open);
always @(*) begin
    main_litedramcore_bankmachine1_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine1_source_valid & main_litedramcore_bankmachine1_source_source_valid)) begin
        if ((main_litedramcore_bankmachine1_source_payload_addr[21:7] != main_litedramcore_bankmachine1_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine1_auto_precharge <= (main_litedramcore_bankmachine1_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine1_syncfifo1_din = {main_litedramcore_bankmachine1_fifo_in_last, main_litedramcore_bankmachine1_fifo_in_first, main_litedramcore_bankmachine1_fifo_in_payload_addr, main_litedramcore_bankmachine1_fifo_in_payload_we};
assign {main_litedramcore_bankmachine1_fifo_out_last, main_litedramcore_bankmachine1_fifo_out_first, main_litedramcore_bankmachine1_fifo_out_payload_addr, main_litedramcore_bankmachine1_fifo_out_payload_we} = main_litedramcore_bankmachine1_syncfifo1_dout;
assign {main_litedramcore_bankmachine1_fifo_out_last, main_litedramcore_bankmachine1_fifo_out_first, main_litedramcore_bankmachine1_fifo_out_payload_addr, main_litedramcore_bankmachine1_fifo_out_payload_we} = main_litedramcore_bankmachine1_syncfifo1_dout;
assign {main_litedramcore_bankmachine1_fifo_out_last, main_litedramcore_bankmachine1_fifo_out_first, main_litedramcore_bankmachine1_fifo_out_payload_addr, main_litedramcore_bankmachine1_fifo_out_payload_we} = main_litedramcore_bankmachine1_syncfifo1_dout;
assign {main_litedramcore_bankmachine1_fifo_out_last, main_litedramcore_bankmachine1_fifo_out_first, main_litedramcore_bankmachine1_fifo_out_payload_addr, main_litedramcore_bankmachine1_fifo_out_payload_we} = main_litedramcore_bankmachine1_syncfifo1_dout;
assign main_litedramcore_bankmachine1_sink_ready = main_litedramcore_bankmachine1_syncfifo1_writable;
assign main_litedramcore_bankmachine1_syncfifo1_we = main_litedramcore_bankmachine1_sink_valid;
assign main_litedramcore_bankmachine1_fifo_in_first = main_litedramcore_bankmachine1_sink_first;
assign main_litedramcore_bankmachine1_fifo_in_last = main_litedramcore_bankmachine1_sink_last;
assign main_litedramcore_bankmachine1_fifo_in_payload_we = main_litedramcore_bankmachine1_sink_payload_we;
assign main_litedramcore_bankmachine1_fifo_in_payload_addr = main_litedramcore_bankmachine1_sink_payload_addr;
assign main_litedramcore_bankmachine1_source_valid = main_litedramcore_bankmachine1_syncfifo1_readable;
assign main_litedramcore_bankmachine1_source_first = main_litedramcore_bankmachine1_fifo_out_first;
assign main_litedramcore_bankmachine1_source_last = main_litedramcore_bankmachine1_fifo_out_last;
assign main_litedramcore_bankmachine1_source_payload_we = main_litedramcore_bankmachine1_fifo_out_payload_we;
assign main_litedramcore_bankmachine1_source_payload_addr = main_litedramcore_bankmachine1_fifo_out_payload_addr;
assign main_litedramcore_bankmachine1_syncfifo1_re = main_litedramcore_bankmachine1_source_ready;
always @(*) begin
    main_litedramcore_bankmachine1_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine1_replace) begin
        main_litedramcore_bankmachine1_wrport_adr <= (main_litedramcore_bankmachine1_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine1_wrport_adr <= main_litedramcore_bankmachine1_produce;
    end
end
assign main_litedramcore_bankmachine1_wrport_dat_w = main_litedramcore_bankmachine1_syncfifo1_din;
assign main_litedramcore_bankmachine1_wrport_we = (main_litedramcore_bankmachine1_syncfifo1_we & (main_litedramcore_bankmachine1_syncfifo1_writable | main_litedramcore_bankmachine1_replace));
assign main_litedramcore_bankmachine1_do_read = (main_litedramcore_bankmachine1_syncfifo1_readable & main_litedramcore_bankmachine1_syncfifo1_re);
assign main_litedramcore_bankmachine1_rdport_adr = main_litedramcore_bankmachine1_consume;
assign main_litedramcore_bankmachine1_syncfifo1_dout = main_litedramcore_bankmachine1_rdport_dat_r;
assign main_litedramcore_bankmachine1_syncfifo1_writable = (main_litedramcore_bankmachine1_level != 5'd16);
assign main_litedramcore_bankmachine1_syncfifo1_readable = (main_litedramcore_bankmachine1_level != 1'd0);
assign main_litedramcore_bankmachine1_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine1_pipe_valid_source_valid) | main_litedramcore_bankmachine1_pipe_valid_source_ready);
assign main_litedramcore_bankmachine1_pipe_valid_sink_valid = main_litedramcore_bankmachine1_sink_sink_valid;
assign main_litedramcore_bankmachine1_sink_sink_ready = main_litedramcore_bankmachine1_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine1_pipe_valid_sink_first = main_litedramcore_bankmachine1_sink_sink_first;
assign main_litedramcore_bankmachine1_pipe_valid_sink_last = main_litedramcore_bankmachine1_sink_sink_last;
assign main_litedramcore_bankmachine1_pipe_valid_sink_payload_we = main_litedramcore_bankmachine1_sink_sink_payload_we;
assign main_litedramcore_bankmachine1_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine1_sink_sink_payload_addr;
assign main_litedramcore_bankmachine1_source_source_valid = main_litedramcore_bankmachine1_pipe_valid_source_valid;
assign main_litedramcore_bankmachine1_pipe_valid_source_ready = main_litedramcore_bankmachine1_source_source_ready;
assign main_litedramcore_bankmachine1_source_source_first = main_litedramcore_bankmachine1_pipe_valid_source_first;
assign main_litedramcore_bankmachine1_source_source_last = main_litedramcore_bankmachine1_pipe_valid_source_last;
assign main_litedramcore_bankmachine1_source_source_payload_we = main_litedramcore_bankmachine1_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine1_source_source_payload_addr = main_litedramcore_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine1_next_state <= 4'd0;
    builder_bankmachine1_next_state <= builder_bankmachine1_state;
    case (builder_bankmachine1_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine1_twtpcon_ready & main_litedramcore_bankmachine1_trascon_ready)) begin
                if (main_litedramcore_bankmachine1_cmd_ready) begin
                    builder_bankmachine1_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine1_twtpcon_ready & main_litedramcore_bankmachine1_trascon_ready)) begin
                builder_bankmachine1_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine1_trccon_ready) begin
                if (main_litedramcore_bankmachine1_cmd_ready) begin
                    builder_bankmachine1_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine1_refresh_req)) begin
                builder_bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine1_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine1_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine1_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
                builder_bankmachine1_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            if ((main_litedramcore_bankmachine1_cmd_ready & main_litedramcore_bankmachine1_auto_precharge)) begin
                                builder_bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_refresh_gnt <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine1_twtpcon_ready) begin
                main_litedramcore_bankmachine1_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_row_open <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine1_trccon_ready) begin
                main_litedramcore_bankmachine1_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_valid <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine1_twtpcon_ready & main_litedramcore_bankmachine1_trascon_ready)) begin
                main_litedramcore_bankmachine1_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine1_trccon_ready) begin
                main_litedramcore_bankmachine1_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            main_litedramcore_bankmachine1_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_row_close <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
            main_litedramcore_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine1_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine1_trccon_ready) begin
                main_litedramcore_bankmachine1_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            main_litedramcore_bankmachine1_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine1_twtpcon_ready & main_litedramcore_bankmachine1_trascon_ready)) begin
                main_litedramcore_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine1_trccon_ready) begin
                main_litedramcore_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_we <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine1_twtpcon_ready & main_litedramcore_bankmachine1_trascon_ready)) begin
                main_litedramcore_bankmachine1_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            if (main_litedramcore_bankmachine1_source_source_payload_we) begin
                                main_litedramcore_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine1_twtpcon_ready & main_litedramcore_bankmachine1_trascon_ready)) begin
                main_litedramcore_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine1_trccon_ready) begin
                main_litedramcore_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine1_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            if (main_litedramcore_bankmachine1_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            if (main_litedramcore_bankmachine1_source_source_payload_we) begin
                                main_litedramcore_bankmachine1_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_req_wdata_ready <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            if (main_litedramcore_bankmachine1_source_source_payload_we) begin
                                main_litedramcore_bankmachine1_req_wdata_ready <= main_litedramcore_bankmachine1_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine1_req_rdata_valid <= 1'd0;
    case (builder_bankmachine1_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine1_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine1_source_source_valid) begin
                    if (main_litedramcore_bankmachine1_row_opened) begin
                        if (main_litedramcore_bankmachine1_row_hit) begin
                            if (main_litedramcore_bankmachine1_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine1_req_rdata_valid <= main_litedramcore_bankmachine1_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
assign main_litedramcore_bankmachine2_sink_valid = main_litedramcore_bankmachine2_req_valid;
assign main_litedramcore_bankmachine2_req_ready = main_litedramcore_bankmachine2_sink_ready;
assign main_litedramcore_bankmachine2_sink_payload_we = main_litedramcore_bankmachine2_req_we;
assign main_litedramcore_bankmachine2_sink_payload_addr = main_litedramcore_bankmachine2_req_addr;
assign main_litedramcore_bankmachine2_sink_sink_valid = main_litedramcore_bankmachine2_source_valid;
assign main_litedramcore_bankmachine2_source_ready = main_litedramcore_bankmachine2_sink_sink_ready;
assign main_litedramcore_bankmachine2_sink_sink_first = main_litedramcore_bankmachine2_source_first;
assign main_litedramcore_bankmachine2_sink_sink_last = main_litedramcore_bankmachine2_source_last;
assign main_litedramcore_bankmachine2_sink_sink_payload_we = main_litedramcore_bankmachine2_source_payload_we;
assign main_litedramcore_bankmachine2_sink_sink_payload_addr = main_litedramcore_bankmachine2_source_payload_addr;
assign main_litedramcore_bankmachine2_source_source_ready = (main_litedramcore_bankmachine2_req_wdata_ready | main_litedramcore_bankmachine2_req_rdata_valid);
assign main_litedramcore_bankmachine2_req_lock = (main_litedramcore_bankmachine2_source_valid | main_litedramcore_bankmachine2_source_source_valid);
assign main_litedramcore_bankmachine2_row_hit = (main_litedramcore_bankmachine2_row == main_litedramcore_bankmachine2_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine2_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine2_cmd_payload_a <= main_litedramcore_bankmachine2_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine2_cmd_payload_a <= ((main_litedramcore_bankmachine2_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine2_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine2_twtpcon_valid = ((main_litedramcore_bankmachine2_cmd_valid & main_litedramcore_bankmachine2_cmd_ready) & main_litedramcore_bankmachine2_cmd_payload_is_write);
assign main_litedramcore_bankmachine2_trccon_valid = ((main_litedramcore_bankmachine2_cmd_valid & main_litedramcore_bankmachine2_cmd_ready) & main_litedramcore_bankmachine2_row_open);
assign main_litedramcore_bankmachine2_trascon_valid = ((main_litedramcore_bankmachine2_cmd_valid & main_litedramcore_bankmachine2_cmd_ready) & main_litedramcore_bankmachine2_row_open);
always @(*) begin
    main_litedramcore_bankmachine2_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine2_source_valid & main_litedramcore_bankmachine2_source_source_valid)) begin
        if ((main_litedramcore_bankmachine2_source_payload_addr[21:7] != main_litedramcore_bankmachine2_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine2_auto_precharge <= (main_litedramcore_bankmachine2_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine2_syncfifo2_din = {main_litedramcore_bankmachine2_fifo_in_last, main_litedramcore_bankmachine2_fifo_in_first, main_litedramcore_bankmachine2_fifo_in_payload_addr, main_litedramcore_bankmachine2_fifo_in_payload_we};
assign {main_litedramcore_bankmachine2_fifo_out_last, main_litedramcore_bankmachine2_fifo_out_first, main_litedramcore_bankmachine2_fifo_out_payload_addr, main_litedramcore_bankmachine2_fifo_out_payload_we} = main_litedramcore_bankmachine2_syncfifo2_dout;
assign {main_litedramcore_bankmachine2_fifo_out_last, main_litedramcore_bankmachine2_fifo_out_first, main_litedramcore_bankmachine2_fifo_out_payload_addr, main_litedramcore_bankmachine2_fifo_out_payload_we} = main_litedramcore_bankmachine2_syncfifo2_dout;
assign {main_litedramcore_bankmachine2_fifo_out_last, main_litedramcore_bankmachine2_fifo_out_first, main_litedramcore_bankmachine2_fifo_out_payload_addr, main_litedramcore_bankmachine2_fifo_out_payload_we} = main_litedramcore_bankmachine2_syncfifo2_dout;
assign {main_litedramcore_bankmachine2_fifo_out_last, main_litedramcore_bankmachine2_fifo_out_first, main_litedramcore_bankmachine2_fifo_out_payload_addr, main_litedramcore_bankmachine2_fifo_out_payload_we} = main_litedramcore_bankmachine2_syncfifo2_dout;
assign main_litedramcore_bankmachine2_sink_ready = main_litedramcore_bankmachine2_syncfifo2_writable;
assign main_litedramcore_bankmachine2_syncfifo2_we = main_litedramcore_bankmachine2_sink_valid;
assign main_litedramcore_bankmachine2_fifo_in_first = main_litedramcore_bankmachine2_sink_first;
assign main_litedramcore_bankmachine2_fifo_in_last = main_litedramcore_bankmachine2_sink_last;
assign main_litedramcore_bankmachine2_fifo_in_payload_we = main_litedramcore_bankmachine2_sink_payload_we;
assign main_litedramcore_bankmachine2_fifo_in_payload_addr = main_litedramcore_bankmachine2_sink_payload_addr;
assign main_litedramcore_bankmachine2_source_valid = main_litedramcore_bankmachine2_syncfifo2_readable;
assign main_litedramcore_bankmachine2_source_first = main_litedramcore_bankmachine2_fifo_out_first;
assign main_litedramcore_bankmachine2_source_last = main_litedramcore_bankmachine2_fifo_out_last;
assign main_litedramcore_bankmachine2_source_payload_we = main_litedramcore_bankmachine2_fifo_out_payload_we;
assign main_litedramcore_bankmachine2_source_payload_addr = main_litedramcore_bankmachine2_fifo_out_payload_addr;
assign main_litedramcore_bankmachine2_syncfifo2_re = main_litedramcore_bankmachine2_source_ready;
always @(*) begin
    main_litedramcore_bankmachine2_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine2_replace) begin
        main_litedramcore_bankmachine2_wrport_adr <= (main_litedramcore_bankmachine2_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine2_wrport_adr <= main_litedramcore_bankmachine2_produce;
    end
end
assign main_litedramcore_bankmachine2_wrport_dat_w = main_litedramcore_bankmachine2_syncfifo2_din;
assign main_litedramcore_bankmachine2_wrport_we = (main_litedramcore_bankmachine2_syncfifo2_we & (main_litedramcore_bankmachine2_syncfifo2_writable | main_litedramcore_bankmachine2_replace));
assign main_litedramcore_bankmachine2_do_read = (main_litedramcore_bankmachine2_syncfifo2_readable & main_litedramcore_bankmachine2_syncfifo2_re);
assign main_litedramcore_bankmachine2_rdport_adr = main_litedramcore_bankmachine2_consume;
assign main_litedramcore_bankmachine2_syncfifo2_dout = main_litedramcore_bankmachine2_rdport_dat_r;
assign main_litedramcore_bankmachine2_syncfifo2_writable = (main_litedramcore_bankmachine2_level != 5'd16);
assign main_litedramcore_bankmachine2_syncfifo2_readable = (main_litedramcore_bankmachine2_level != 1'd0);
assign main_litedramcore_bankmachine2_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine2_pipe_valid_source_valid) | main_litedramcore_bankmachine2_pipe_valid_source_ready);
assign main_litedramcore_bankmachine2_pipe_valid_sink_valid = main_litedramcore_bankmachine2_sink_sink_valid;
assign main_litedramcore_bankmachine2_sink_sink_ready = main_litedramcore_bankmachine2_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine2_pipe_valid_sink_first = main_litedramcore_bankmachine2_sink_sink_first;
assign main_litedramcore_bankmachine2_pipe_valid_sink_last = main_litedramcore_bankmachine2_sink_sink_last;
assign main_litedramcore_bankmachine2_pipe_valid_sink_payload_we = main_litedramcore_bankmachine2_sink_sink_payload_we;
assign main_litedramcore_bankmachine2_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine2_sink_sink_payload_addr;
assign main_litedramcore_bankmachine2_source_source_valid = main_litedramcore_bankmachine2_pipe_valid_source_valid;
assign main_litedramcore_bankmachine2_pipe_valid_source_ready = main_litedramcore_bankmachine2_source_source_ready;
assign main_litedramcore_bankmachine2_source_source_first = main_litedramcore_bankmachine2_pipe_valid_source_first;
assign main_litedramcore_bankmachine2_source_source_last = main_litedramcore_bankmachine2_pipe_valid_source_last;
assign main_litedramcore_bankmachine2_source_source_payload_we = main_litedramcore_bankmachine2_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine2_source_source_payload_addr = main_litedramcore_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine2_next_state <= 4'd0;
    builder_bankmachine2_next_state <= builder_bankmachine2_state;
    case (builder_bankmachine2_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine2_twtpcon_ready & main_litedramcore_bankmachine2_trascon_ready)) begin
                if (main_litedramcore_bankmachine2_cmd_ready) begin
                    builder_bankmachine2_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine2_twtpcon_ready & main_litedramcore_bankmachine2_trascon_ready)) begin
                builder_bankmachine2_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine2_trccon_ready) begin
                if (main_litedramcore_bankmachine2_cmd_ready) begin
                    builder_bankmachine2_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine2_refresh_req)) begin
                builder_bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine2_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine2_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine2_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
                builder_bankmachine2_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            if ((main_litedramcore_bankmachine2_cmd_ready & main_litedramcore_bankmachine2_auto_precharge)) begin
                                builder_bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine2_trccon_ready) begin
                main_litedramcore_bankmachine2_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            main_litedramcore_bankmachine2_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine2_twtpcon_ready & main_litedramcore_bankmachine2_trascon_ready)) begin
                main_litedramcore_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine2_trccon_ready) begin
                main_litedramcore_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_we <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine2_twtpcon_ready & main_litedramcore_bankmachine2_trascon_ready)) begin
                main_litedramcore_bankmachine2_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            if (main_litedramcore_bankmachine2_source_source_payload_we) begin
                                main_litedramcore_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine2_twtpcon_ready & main_litedramcore_bankmachine2_trascon_ready)) begin
                main_litedramcore_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine2_trccon_ready) begin
                main_litedramcore_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine2_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_refresh_gnt <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine2_twtpcon_ready) begin
                main_litedramcore_bankmachine2_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            if (main_litedramcore_bankmachine2_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            if (main_litedramcore_bankmachine2_source_source_payload_we) begin
                                main_litedramcore_bankmachine2_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_req_wdata_ready <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            if (main_litedramcore_bankmachine2_source_source_payload_we) begin
                                main_litedramcore_bankmachine2_req_wdata_ready <= main_litedramcore_bankmachine2_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_req_rdata_valid <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            if (main_litedramcore_bankmachine2_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine2_req_rdata_valid <= main_litedramcore_bankmachine2_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_row_open <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine2_trccon_ready) begin
                main_litedramcore_bankmachine2_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_valid <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine2_twtpcon_ready & main_litedramcore_bankmachine2_trascon_ready)) begin
                main_litedramcore_bankmachine2_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine2_trccon_ready) begin
                main_litedramcore_bankmachine2_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine2_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine2_source_source_valid) begin
                    if (main_litedramcore_bankmachine2_row_opened) begin
                        if (main_litedramcore_bankmachine2_row_hit) begin
                            main_litedramcore_bankmachine2_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine2_row_close <= 1'd0;
    case (builder_bankmachine2_state)
        1'd1: begin
            main_litedramcore_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine2_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
assign main_litedramcore_bankmachine3_sink_valid = main_litedramcore_bankmachine3_req_valid;
assign main_litedramcore_bankmachine3_req_ready = main_litedramcore_bankmachine3_sink_ready;
assign main_litedramcore_bankmachine3_sink_payload_we = main_litedramcore_bankmachine3_req_we;
assign main_litedramcore_bankmachine3_sink_payload_addr = main_litedramcore_bankmachine3_req_addr;
assign main_litedramcore_bankmachine3_sink_sink_valid = main_litedramcore_bankmachine3_source_valid;
assign main_litedramcore_bankmachine3_source_ready = main_litedramcore_bankmachine3_sink_sink_ready;
assign main_litedramcore_bankmachine3_sink_sink_first = main_litedramcore_bankmachine3_source_first;
assign main_litedramcore_bankmachine3_sink_sink_last = main_litedramcore_bankmachine3_source_last;
assign main_litedramcore_bankmachine3_sink_sink_payload_we = main_litedramcore_bankmachine3_source_payload_we;
assign main_litedramcore_bankmachine3_sink_sink_payload_addr = main_litedramcore_bankmachine3_source_payload_addr;
assign main_litedramcore_bankmachine3_source_source_ready = (main_litedramcore_bankmachine3_req_wdata_ready | main_litedramcore_bankmachine3_req_rdata_valid);
assign main_litedramcore_bankmachine3_req_lock = (main_litedramcore_bankmachine3_source_valid | main_litedramcore_bankmachine3_source_source_valid);
assign main_litedramcore_bankmachine3_row_hit = (main_litedramcore_bankmachine3_row == main_litedramcore_bankmachine3_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine3_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine3_cmd_payload_a <= main_litedramcore_bankmachine3_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine3_cmd_payload_a <= ((main_litedramcore_bankmachine3_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine3_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine3_twtpcon_valid = ((main_litedramcore_bankmachine3_cmd_valid & main_litedramcore_bankmachine3_cmd_ready) & main_litedramcore_bankmachine3_cmd_payload_is_write);
assign main_litedramcore_bankmachine3_trccon_valid = ((main_litedramcore_bankmachine3_cmd_valid & main_litedramcore_bankmachine3_cmd_ready) & main_litedramcore_bankmachine3_row_open);
assign main_litedramcore_bankmachine3_trascon_valid = ((main_litedramcore_bankmachine3_cmd_valid & main_litedramcore_bankmachine3_cmd_ready) & main_litedramcore_bankmachine3_row_open);
always @(*) begin
    main_litedramcore_bankmachine3_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine3_source_valid & main_litedramcore_bankmachine3_source_source_valid)) begin
        if ((main_litedramcore_bankmachine3_source_payload_addr[21:7] != main_litedramcore_bankmachine3_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine3_auto_precharge <= (main_litedramcore_bankmachine3_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine3_syncfifo3_din = {main_litedramcore_bankmachine3_fifo_in_last, main_litedramcore_bankmachine3_fifo_in_first, main_litedramcore_bankmachine3_fifo_in_payload_addr, main_litedramcore_bankmachine3_fifo_in_payload_we};
assign {main_litedramcore_bankmachine3_fifo_out_last, main_litedramcore_bankmachine3_fifo_out_first, main_litedramcore_bankmachine3_fifo_out_payload_addr, main_litedramcore_bankmachine3_fifo_out_payload_we} = main_litedramcore_bankmachine3_syncfifo3_dout;
assign {main_litedramcore_bankmachine3_fifo_out_last, main_litedramcore_bankmachine3_fifo_out_first, main_litedramcore_bankmachine3_fifo_out_payload_addr, main_litedramcore_bankmachine3_fifo_out_payload_we} = main_litedramcore_bankmachine3_syncfifo3_dout;
assign {main_litedramcore_bankmachine3_fifo_out_last, main_litedramcore_bankmachine3_fifo_out_first, main_litedramcore_bankmachine3_fifo_out_payload_addr, main_litedramcore_bankmachine3_fifo_out_payload_we} = main_litedramcore_bankmachine3_syncfifo3_dout;
assign {main_litedramcore_bankmachine3_fifo_out_last, main_litedramcore_bankmachine3_fifo_out_first, main_litedramcore_bankmachine3_fifo_out_payload_addr, main_litedramcore_bankmachine3_fifo_out_payload_we} = main_litedramcore_bankmachine3_syncfifo3_dout;
assign main_litedramcore_bankmachine3_sink_ready = main_litedramcore_bankmachine3_syncfifo3_writable;
assign main_litedramcore_bankmachine3_syncfifo3_we = main_litedramcore_bankmachine3_sink_valid;
assign main_litedramcore_bankmachine3_fifo_in_first = main_litedramcore_bankmachine3_sink_first;
assign main_litedramcore_bankmachine3_fifo_in_last = main_litedramcore_bankmachine3_sink_last;
assign main_litedramcore_bankmachine3_fifo_in_payload_we = main_litedramcore_bankmachine3_sink_payload_we;
assign main_litedramcore_bankmachine3_fifo_in_payload_addr = main_litedramcore_bankmachine3_sink_payload_addr;
assign main_litedramcore_bankmachine3_source_valid = main_litedramcore_bankmachine3_syncfifo3_readable;
assign main_litedramcore_bankmachine3_source_first = main_litedramcore_bankmachine3_fifo_out_first;
assign main_litedramcore_bankmachine3_source_last = main_litedramcore_bankmachine3_fifo_out_last;
assign main_litedramcore_bankmachine3_source_payload_we = main_litedramcore_bankmachine3_fifo_out_payload_we;
assign main_litedramcore_bankmachine3_source_payload_addr = main_litedramcore_bankmachine3_fifo_out_payload_addr;
assign main_litedramcore_bankmachine3_syncfifo3_re = main_litedramcore_bankmachine3_source_ready;
always @(*) begin
    main_litedramcore_bankmachine3_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine3_replace) begin
        main_litedramcore_bankmachine3_wrport_adr <= (main_litedramcore_bankmachine3_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine3_wrport_adr <= main_litedramcore_bankmachine3_produce;
    end
end
assign main_litedramcore_bankmachine3_wrport_dat_w = main_litedramcore_bankmachine3_syncfifo3_din;
assign main_litedramcore_bankmachine3_wrport_we = (main_litedramcore_bankmachine3_syncfifo3_we & (main_litedramcore_bankmachine3_syncfifo3_writable | main_litedramcore_bankmachine3_replace));
assign main_litedramcore_bankmachine3_do_read = (main_litedramcore_bankmachine3_syncfifo3_readable & main_litedramcore_bankmachine3_syncfifo3_re);
assign main_litedramcore_bankmachine3_rdport_adr = main_litedramcore_bankmachine3_consume;
assign main_litedramcore_bankmachine3_syncfifo3_dout = main_litedramcore_bankmachine3_rdport_dat_r;
assign main_litedramcore_bankmachine3_syncfifo3_writable = (main_litedramcore_bankmachine3_level != 5'd16);
assign main_litedramcore_bankmachine3_syncfifo3_readable = (main_litedramcore_bankmachine3_level != 1'd0);
assign main_litedramcore_bankmachine3_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine3_pipe_valid_source_valid) | main_litedramcore_bankmachine3_pipe_valid_source_ready);
assign main_litedramcore_bankmachine3_pipe_valid_sink_valid = main_litedramcore_bankmachine3_sink_sink_valid;
assign main_litedramcore_bankmachine3_sink_sink_ready = main_litedramcore_bankmachine3_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine3_pipe_valid_sink_first = main_litedramcore_bankmachine3_sink_sink_first;
assign main_litedramcore_bankmachine3_pipe_valid_sink_last = main_litedramcore_bankmachine3_sink_sink_last;
assign main_litedramcore_bankmachine3_pipe_valid_sink_payload_we = main_litedramcore_bankmachine3_sink_sink_payload_we;
assign main_litedramcore_bankmachine3_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine3_sink_sink_payload_addr;
assign main_litedramcore_bankmachine3_source_source_valid = main_litedramcore_bankmachine3_pipe_valid_source_valid;
assign main_litedramcore_bankmachine3_pipe_valid_source_ready = main_litedramcore_bankmachine3_source_source_ready;
assign main_litedramcore_bankmachine3_source_source_first = main_litedramcore_bankmachine3_pipe_valid_source_first;
assign main_litedramcore_bankmachine3_source_source_last = main_litedramcore_bankmachine3_pipe_valid_source_last;
assign main_litedramcore_bankmachine3_source_source_payload_we = main_litedramcore_bankmachine3_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine3_source_source_payload_addr = main_litedramcore_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine3_next_state <= 4'd0;
    builder_bankmachine3_next_state <= builder_bankmachine3_state;
    case (builder_bankmachine3_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine3_twtpcon_ready & main_litedramcore_bankmachine3_trascon_ready)) begin
                if (main_litedramcore_bankmachine3_cmd_ready) begin
                    builder_bankmachine3_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine3_twtpcon_ready & main_litedramcore_bankmachine3_trascon_ready)) begin
                builder_bankmachine3_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine3_trccon_ready) begin
                if (main_litedramcore_bankmachine3_cmd_ready) begin
                    builder_bankmachine3_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine3_refresh_req)) begin
                builder_bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine3_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine3_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine3_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
                builder_bankmachine3_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            if ((main_litedramcore_bankmachine3_cmd_ready & main_litedramcore_bankmachine3_auto_precharge)) begin
                                builder_bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine3_twtpcon_ready & main_litedramcore_bankmachine3_trascon_ready)) begin
                main_litedramcore_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine3_trccon_ready) begin
                main_litedramcore_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_we <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine3_twtpcon_ready & main_litedramcore_bankmachine3_trascon_ready)) begin
                main_litedramcore_bankmachine3_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            if (main_litedramcore_bankmachine3_source_source_payload_we) begin
                                main_litedramcore_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine3_twtpcon_ready & main_litedramcore_bankmachine3_trascon_ready)) begin
                main_litedramcore_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine3_trccon_ready) begin
                main_litedramcore_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine3_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            if (main_litedramcore_bankmachine3_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            if (main_litedramcore_bankmachine3_source_source_payload_we) begin
                                main_litedramcore_bankmachine3_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_req_wdata_ready <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            if (main_litedramcore_bankmachine3_source_source_payload_we) begin
                                main_litedramcore_bankmachine3_req_wdata_ready <= main_litedramcore_bankmachine3_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_req_rdata_valid <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            if (main_litedramcore_bankmachine3_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine3_req_rdata_valid <= main_litedramcore_bankmachine3_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_refresh_gnt <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine3_twtpcon_ready) begin
                main_litedramcore_bankmachine3_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_row_open <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine3_trccon_ready) begin
                main_litedramcore_bankmachine3_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_valid <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine3_twtpcon_ready & main_litedramcore_bankmachine3_trascon_ready)) begin
                main_litedramcore_bankmachine3_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine3_trccon_ready) begin
                main_litedramcore_bankmachine3_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            main_litedramcore_bankmachine3_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_row_close <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
            main_litedramcore_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine3_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine3_trccon_ready) begin
                main_litedramcore_bankmachine3_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine3_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine3_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine3_source_source_valid) begin
                    if (main_litedramcore_bankmachine3_row_opened) begin
                        if (main_litedramcore_bankmachine3_row_hit) begin
                            main_litedramcore_bankmachine3_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
assign main_litedramcore_bankmachine4_sink_valid = main_litedramcore_bankmachine4_req_valid;
assign main_litedramcore_bankmachine4_req_ready = main_litedramcore_bankmachine4_sink_ready;
assign main_litedramcore_bankmachine4_sink_payload_we = main_litedramcore_bankmachine4_req_we;
assign main_litedramcore_bankmachine4_sink_payload_addr = main_litedramcore_bankmachine4_req_addr;
assign main_litedramcore_bankmachine4_sink_sink_valid = main_litedramcore_bankmachine4_source_valid;
assign main_litedramcore_bankmachine4_source_ready = main_litedramcore_bankmachine4_sink_sink_ready;
assign main_litedramcore_bankmachine4_sink_sink_first = main_litedramcore_bankmachine4_source_first;
assign main_litedramcore_bankmachine4_sink_sink_last = main_litedramcore_bankmachine4_source_last;
assign main_litedramcore_bankmachine4_sink_sink_payload_we = main_litedramcore_bankmachine4_source_payload_we;
assign main_litedramcore_bankmachine4_sink_sink_payload_addr = main_litedramcore_bankmachine4_source_payload_addr;
assign main_litedramcore_bankmachine4_source_source_ready = (main_litedramcore_bankmachine4_req_wdata_ready | main_litedramcore_bankmachine4_req_rdata_valid);
assign main_litedramcore_bankmachine4_req_lock = (main_litedramcore_bankmachine4_source_valid | main_litedramcore_bankmachine4_source_source_valid);
assign main_litedramcore_bankmachine4_row_hit = (main_litedramcore_bankmachine4_row == main_litedramcore_bankmachine4_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine4_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine4_cmd_payload_a <= main_litedramcore_bankmachine4_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine4_cmd_payload_a <= ((main_litedramcore_bankmachine4_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine4_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine4_twtpcon_valid = ((main_litedramcore_bankmachine4_cmd_valid & main_litedramcore_bankmachine4_cmd_ready) & main_litedramcore_bankmachine4_cmd_payload_is_write);
assign main_litedramcore_bankmachine4_trccon_valid = ((main_litedramcore_bankmachine4_cmd_valid & main_litedramcore_bankmachine4_cmd_ready) & main_litedramcore_bankmachine4_row_open);
assign main_litedramcore_bankmachine4_trascon_valid = ((main_litedramcore_bankmachine4_cmd_valid & main_litedramcore_bankmachine4_cmd_ready) & main_litedramcore_bankmachine4_row_open);
always @(*) begin
    main_litedramcore_bankmachine4_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine4_source_valid & main_litedramcore_bankmachine4_source_source_valid)) begin
        if ((main_litedramcore_bankmachine4_source_payload_addr[21:7] != main_litedramcore_bankmachine4_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine4_auto_precharge <= (main_litedramcore_bankmachine4_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine4_syncfifo4_din = {main_litedramcore_bankmachine4_fifo_in_last, main_litedramcore_bankmachine4_fifo_in_first, main_litedramcore_bankmachine4_fifo_in_payload_addr, main_litedramcore_bankmachine4_fifo_in_payload_we};
assign {main_litedramcore_bankmachine4_fifo_out_last, main_litedramcore_bankmachine4_fifo_out_first, main_litedramcore_bankmachine4_fifo_out_payload_addr, main_litedramcore_bankmachine4_fifo_out_payload_we} = main_litedramcore_bankmachine4_syncfifo4_dout;
assign {main_litedramcore_bankmachine4_fifo_out_last, main_litedramcore_bankmachine4_fifo_out_first, main_litedramcore_bankmachine4_fifo_out_payload_addr, main_litedramcore_bankmachine4_fifo_out_payload_we} = main_litedramcore_bankmachine4_syncfifo4_dout;
assign {main_litedramcore_bankmachine4_fifo_out_last, main_litedramcore_bankmachine4_fifo_out_first, main_litedramcore_bankmachine4_fifo_out_payload_addr, main_litedramcore_bankmachine4_fifo_out_payload_we} = main_litedramcore_bankmachine4_syncfifo4_dout;
assign {main_litedramcore_bankmachine4_fifo_out_last, main_litedramcore_bankmachine4_fifo_out_first, main_litedramcore_bankmachine4_fifo_out_payload_addr, main_litedramcore_bankmachine4_fifo_out_payload_we} = main_litedramcore_bankmachine4_syncfifo4_dout;
assign main_litedramcore_bankmachine4_sink_ready = main_litedramcore_bankmachine4_syncfifo4_writable;
assign main_litedramcore_bankmachine4_syncfifo4_we = main_litedramcore_bankmachine4_sink_valid;
assign main_litedramcore_bankmachine4_fifo_in_first = main_litedramcore_bankmachine4_sink_first;
assign main_litedramcore_bankmachine4_fifo_in_last = main_litedramcore_bankmachine4_sink_last;
assign main_litedramcore_bankmachine4_fifo_in_payload_we = main_litedramcore_bankmachine4_sink_payload_we;
assign main_litedramcore_bankmachine4_fifo_in_payload_addr = main_litedramcore_bankmachine4_sink_payload_addr;
assign main_litedramcore_bankmachine4_source_valid = main_litedramcore_bankmachine4_syncfifo4_readable;
assign main_litedramcore_bankmachine4_source_first = main_litedramcore_bankmachine4_fifo_out_first;
assign main_litedramcore_bankmachine4_source_last = main_litedramcore_bankmachine4_fifo_out_last;
assign main_litedramcore_bankmachine4_source_payload_we = main_litedramcore_bankmachine4_fifo_out_payload_we;
assign main_litedramcore_bankmachine4_source_payload_addr = main_litedramcore_bankmachine4_fifo_out_payload_addr;
assign main_litedramcore_bankmachine4_syncfifo4_re = main_litedramcore_bankmachine4_source_ready;
always @(*) begin
    main_litedramcore_bankmachine4_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine4_replace) begin
        main_litedramcore_bankmachine4_wrport_adr <= (main_litedramcore_bankmachine4_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine4_wrport_adr <= main_litedramcore_bankmachine4_produce;
    end
end
assign main_litedramcore_bankmachine4_wrport_dat_w = main_litedramcore_bankmachine4_syncfifo4_din;
assign main_litedramcore_bankmachine4_wrport_we = (main_litedramcore_bankmachine4_syncfifo4_we & (main_litedramcore_bankmachine4_syncfifo4_writable | main_litedramcore_bankmachine4_replace));
assign main_litedramcore_bankmachine4_do_read = (main_litedramcore_bankmachine4_syncfifo4_readable & main_litedramcore_bankmachine4_syncfifo4_re);
assign main_litedramcore_bankmachine4_rdport_adr = main_litedramcore_bankmachine4_consume;
assign main_litedramcore_bankmachine4_syncfifo4_dout = main_litedramcore_bankmachine4_rdport_dat_r;
assign main_litedramcore_bankmachine4_syncfifo4_writable = (main_litedramcore_bankmachine4_level != 5'd16);
assign main_litedramcore_bankmachine4_syncfifo4_readable = (main_litedramcore_bankmachine4_level != 1'd0);
assign main_litedramcore_bankmachine4_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine4_pipe_valid_source_valid) | main_litedramcore_bankmachine4_pipe_valid_source_ready);
assign main_litedramcore_bankmachine4_pipe_valid_sink_valid = main_litedramcore_bankmachine4_sink_sink_valid;
assign main_litedramcore_bankmachine4_sink_sink_ready = main_litedramcore_bankmachine4_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine4_pipe_valid_sink_first = main_litedramcore_bankmachine4_sink_sink_first;
assign main_litedramcore_bankmachine4_pipe_valid_sink_last = main_litedramcore_bankmachine4_sink_sink_last;
assign main_litedramcore_bankmachine4_pipe_valid_sink_payload_we = main_litedramcore_bankmachine4_sink_sink_payload_we;
assign main_litedramcore_bankmachine4_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine4_sink_sink_payload_addr;
assign main_litedramcore_bankmachine4_source_source_valid = main_litedramcore_bankmachine4_pipe_valid_source_valid;
assign main_litedramcore_bankmachine4_pipe_valid_source_ready = main_litedramcore_bankmachine4_source_source_ready;
assign main_litedramcore_bankmachine4_source_source_first = main_litedramcore_bankmachine4_pipe_valid_source_first;
assign main_litedramcore_bankmachine4_source_source_last = main_litedramcore_bankmachine4_pipe_valid_source_last;
assign main_litedramcore_bankmachine4_source_source_payload_we = main_litedramcore_bankmachine4_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine4_source_source_payload_addr = main_litedramcore_bankmachine4_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine4_next_state <= 4'd0;
    builder_bankmachine4_next_state <= builder_bankmachine4_state;
    case (builder_bankmachine4_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine4_twtpcon_ready & main_litedramcore_bankmachine4_trascon_ready)) begin
                if (main_litedramcore_bankmachine4_cmd_ready) begin
                    builder_bankmachine4_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine4_twtpcon_ready & main_litedramcore_bankmachine4_trascon_ready)) begin
                builder_bankmachine4_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine4_trccon_ready) begin
                if (main_litedramcore_bankmachine4_cmd_ready) begin
                    builder_bankmachine4_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine4_refresh_req)) begin
                builder_bankmachine4_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine4_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine4_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine4_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine4_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
                builder_bankmachine4_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            if ((main_litedramcore_bankmachine4_cmd_ready & main_litedramcore_bankmachine4_auto_precharge)) begin
                                builder_bankmachine4_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine4_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine4_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            if (main_litedramcore_bankmachine4_source_source_payload_we) begin
                                main_litedramcore_bankmachine4_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_req_wdata_ready <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            if (main_litedramcore_bankmachine4_source_source_payload_we) begin
                                main_litedramcore_bankmachine4_req_wdata_ready <= main_litedramcore_bankmachine4_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_req_rdata_valid <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            if (main_litedramcore_bankmachine4_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine4_req_rdata_valid <= main_litedramcore_bankmachine4_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_refresh_gnt <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine4_twtpcon_ready) begin
                main_litedramcore_bankmachine4_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_row_open <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine4_trccon_ready) begin
                main_litedramcore_bankmachine4_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_valid <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine4_twtpcon_ready & main_litedramcore_bankmachine4_trascon_ready)) begin
                main_litedramcore_bankmachine4_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine4_trccon_ready) begin
                main_litedramcore_bankmachine4_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            main_litedramcore_bankmachine4_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_row_close <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
            main_litedramcore_bankmachine4_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine4_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine4_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine4_trccon_ready) begin
                main_litedramcore_bankmachine4_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            main_litedramcore_bankmachine4_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine4_twtpcon_ready & main_litedramcore_bankmachine4_trascon_ready)) begin
                main_litedramcore_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine4_trccon_ready) begin
                main_litedramcore_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_we <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine4_twtpcon_ready & main_litedramcore_bankmachine4_trascon_ready)) begin
                main_litedramcore_bankmachine4_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            if (main_litedramcore_bankmachine4_source_source_payload_we) begin
                                main_litedramcore_bankmachine4_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine4_twtpcon_ready & main_litedramcore_bankmachine4_trascon_ready)) begin
                main_litedramcore_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine4_trccon_ready) begin
                main_litedramcore_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine4_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine4_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine4_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine4_source_source_valid) begin
                    if (main_litedramcore_bankmachine4_row_opened) begin
                        if (main_litedramcore_bankmachine4_row_hit) begin
                            if (main_litedramcore_bankmachine4_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine4_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
assign main_litedramcore_bankmachine5_sink_valid = main_litedramcore_bankmachine5_req_valid;
assign main_litedramcore_bankmachine5_req_ready = main_litedramcore_bankmachine5_sink_ready;
assign main_litedramcore_bankmachine5_sink_payload_we = main_litedramcore_bankmachine5_req_we;
assign main_litedramcore_bankmachine5_sink_payload_addr = main_litedramcore_bankmachine5_req_addr;
assign main_litedramcore_bankmachine5_sink_sink_valid = main_litedramcore_bankmachine5_source_valid;
assign main_litedramcore_bankmachine5_source_ready = main_litedramcore_bankmachine5_sink_sink_ready;
assign main_litedramcore_bankmachine5_sink_sink_first = main_litedramcore_bankmachine5_source_first;
assign main_litedramcore_bankmachine5_sink_sink_last = main_litedramcore_bankmachine5_source_last;
assign main_litedramcore_bankmachine5_sink_sink_payload_we = main_litedramcore_bankmachine5_source_payload_we;
assign main_litedramcore_bankmachine5_sink_sink_payload_addr = main_litedramcore_bankmachine5_source_payload_addr;
assign main_litedramcore_bankmachine5_source_source_ready = (main_litedramcore_bankmachine5_req_wdata_ready | main_litedramcore_bankmachine5_req_rdata_valid);
assign main_litedramcore_bankmachine5_req_lock = (main_litedramcore_bankmachine5_source_valid | main_litedramcore_bankmachine5_source_source_valid);
assign main_litedramcore_bankmachine5_row_hit = (main_litedramcore_bankmachine5_row == main_litedramcore_bankmachine5_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine5_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine5_cmd_payload_a <= main_litedramcore_bankmachine5_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine5_cmd_payload_a <= ((main_litedramcore_bankmachine5_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine5_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine5_twtpcon_valid = ((main_litedramcore_bankmachine5_cmd_valid & main_litedramcore_bankmachine5_cmd_ready) & main_litedramcore_bankmachine5_cmd_payload_is_write);
assign main_litedramcore_bankmachine5_trccon_valid = ((main_litedramcore_bankmachine5_cmd_valid & main_litedramcore_bankmachine5_cmd_ready) & main_litedramcore_bankmachine5_row_open);
assign main_litedramcore_bankmachine5_trascon_valid = ((main_litedramcore_bankmachine5_cmd_valid & main_litedramcore_bankmachine5_cmd_ready) & main_litedramcore_bankmachine5_row_open);
always @(*) begin
    main_litedramcore_bankmachine5_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine5_source_valid & main_litedramcore_bankmachine5_source_source_valid)) begin
        if ((main_litedramcore_bankmachine5_source_payload_addr[21:7] != main_litedramcore_bankmachine5_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine5_auto_precharge <= (main_litedramcore_bankmachine5_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine5_syncfifo5_din = {main_litedramcore_bankmachine5_fifo_in_last, main_litedramcore_bankmachine5_fifo_in_first, main_litedramcore_bankmachine5_fifo_in_payload_addr, main_litedramcore_bankmachine5_fifo_in_payload_we};
assign {main_litedramcore_bankmachine5_fifo_out_last, main_litedramcore_bankmachine5_fifo_out_first, main_litedramcore_bankmachine5_fifo_out_payload_addr, main_litedramcore_bankmachine5_fifo_out_payload_we} = main_litedramcore_bankmachine5_syncfifo5_dout;
assign {main_litedramcore_bankmachine5_fifo_out_last, main_litedramcore_bankmachine5_fifo_out_first, main_litedramcore_bankmachine5_fifo_out_payload_addr, main_litedramcore_bankmachine5_fifo_out_payload_we} = main_litedramcore_bankmachine5_syncfifo5_dout;
assign {main_litedramcore_bankmachine5_fifo_out_last, main_litedramcore_bankmachine5_fifo_out_first, main_litedramcore_bankmachine5_fifo_out_payload_addr, main_litedramcore_bankmachine5_fifo_out_payload_we} = main_litedramcore_bankmachine5_syncfifo5_dout;
assign {main_litedramcore_bankmachine5_fifo_out_last, main_litedramcore_bankmachine5_fifo_out_first, main_litedramcore_bankmachine5_fifo_out_payload_addr, main_litedramcore_bankmachine5_fifo_out_payload_we} = main_litedramcore_bankmachine5_syncfifo5_dout;
assign main_litedramcore_bankmachine5_sink_ready = main_litedramcore_bankmachine5_syncfifo5_writable;
assign main_litedramcore_bankmachine5_syncfifo5_we = main_litedramcore_bankmachine5_sink_valid;
assign main_litedramcore_bankmachine5_fifo_in_first = main_litedramcore_bankmachine5_sink_first;
assign main_litedramcore_bankmachine5_fifo_in_last = main_litedramcore_bankmachine5_sink_last;
assign main_litedramcore_bankmachine5_fifo_in_payload_we = main_litedramcore_bankmachine5_sink_payload_we;
assign main_litedramcore_bankmachine5_fifo_in_payload_addr = main_litedramcore_bankmachine5_sink_payload_addr;
assign main_litedramcore_bankmachine5_source_valid = main_litedramcore_bankmachine5_syncfifo5_readable;
assign main_litedramcore_bankmachine5_source_first = main_litedramcore_bankmachine5_fifo_out_first;
assign main_litedramcore_bankmachine5_source_last = main_litedramcore_bankmachine5_fifo_out_last;
assign main_litedramcore_bankmachine5_source_payload_we = main_litedramcore_bankmachine5_fifo_out_payload_we;
assign main_litedramcore_bankmachine5_source_payload_addr = main_litedramcore_bankmachine5_fifo_out_payload_addr;
assign main_litedramcore_bankmachine5_syncfifo5_re = main_litedramcore_bankmachine5_source_ready;
always @(*) begin
    main_litedramcore_bankmachine5_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine5_replace) begin
        main_litedramcore_bankmachine5_wrport_adr <= (main_litedramcore_bankmachine5_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine5_wrport_adr <= main_litedramcore_bankmachine5_produce;
    end
end
assign main_litedramcore_bankmachine5_wrport_dat_w = main_litedramcore_bankmachine5_syncfifo5_din;
assign main_litedramcore_bankmachine5_wrport_we = (main_litedramcore_bankmachine5_syncfifo5_we & (main_litedramcore_bankmachine5_syncfifo5_writable | main_litedramcore_bankmachine5_replace));
assign main_litedramcore_bankmachine5_do_read = (main_litedramcore_bankmachine5_syncfifo5_readable & main_litedramcore_bankmachine5_syncfifo5_re);
assign main_litedramcore_bankmachine5_rdport_adr = main_litedramcore_bankmachine5_consume;
assign main_litedramcore_bankmachine5_syncfifo5_dout = main_litedramcore_bankmachine5_rdport_dat_r;
assign main_litedramcore_bankmachine5_syncfifo5_writable = (main_litedramcore_bankmachine5_level != 5'd16);
assign main_litedramcore_bankmachine5_syncfifo5_readable = (main_litedramcore_bankmachine5_level != 1'd0);
assign main_litedramcore_bankmachine5_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine5_pipe_valid_source_valid) | main_litedramcore_bankmachine5_pipe_valid_source_ready);
assign main_litedramcore_bankmachine5_pipe_valid_sink_valid = main_litedramcore_bankmachine5_sink_sink_valid;
assign main_litedramcore_bankmachine5_sink_sink_ready = main_litedramcore_bankmachine5_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine5_pipe_valid_sink_first = main_litedramcore_bankmachine5_sink_sink_first;
assign main_litedramcore_bankmachine5_pipe_valid_sink_last = main_litedramcore_bankmachine5_sink_sink_last;
assign main_litedramcore_bankmachine5_pipe_valid_sink_payload_we = main_litedramcore_bankmachine5_sink_sink_payload_we;
assign main_litedramcore_bankmachine5_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine5_sink_sink_payload_addr;
assign main_litedramcore_bankmachine5_source_source_valid = main_litedramcore_bankmachine5_pipe_valid_source_valid;
assign main_litedramcore_bankmachine5_pipe_valid_source_ready = main_litedramcore_bankmachine5_source_source_ready;
assign main_litedramcore_bankmachine5_source_source_first = main_litedramcore_bankmachine5_pipe_valid_source_first;
assign main_litedramcore_bankmachine5_source_source_last = main_litedramcore_bankmachine5_pipe_valid_source_last;
assign main_litedramcore_bankmachine5_source_source_payload_we = main_litedramcore_bankmachine5_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine5_source_source_payload_addr = main_litedramcore_bankmachine5_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine5_next_state <= 4'd0;
    builder_bankmachine5_next_state <= builder_bankmachine5_state;
    case (builder_bankmachine5_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine5_twtpcon_ready & main_litedramcore_bankmachine5_trascon_ready)) begin
                if (main_litedramcore_bankmachine5_cmd_ready) begin
                    builder_bankmachine5_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine5_twtpcon_ready & main_litedramcore_bankmachine5_trascon_ready)) begin
                builder_bankmachine5_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine5_trccon_ready) begin
                if (main_litedramcore_bankmachine5_cmd_ready) begin
                    builder_bankmachine5_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine5_refresh_req)) begin
                builder_bankmachine5_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine5_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine5_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine5_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine5_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
                builder_bankmachine5_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            if ((main_litedramcore_bankmachine5_cmd_ready & main_litedramcore_bankmachine5_auto_precharge)) begin
                                builder_bankmachine5_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine5_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine5_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_refresh_gnt <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine5_twtpcon_ready) begin
                main_litedramcore_bankmachine5_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_row_open <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine5_trccon_ready) begin
                main_litedramcore_bankmachine5_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_valid <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine5_twtpcon_ready & main_litedramcore_bankmachine5_trascon_ready)) begin
                main_litedramcore_bankmachine5_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine5_trccon_ready) begin
                main_litedramcore_bankmachine5_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            main_litedramcore_bankmachine5_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_row_close <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
            main_litedramcore_bankmachine5_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine5_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine5_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine5_trccon_ready) begin
                main_litedramcore_bankmachine5_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            main_litedramcore_bankmachine5_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine5_twtpcon_ready & main_litedramcore_bankmachine5_trascon_ready)) begin
                main_litedramcore_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine5_trccon_ready) begin
                main_litedramcore_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_we <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine5_twtpcon_ready & main_litedramcore_bankmachine5_trascon_ready)) begin
                main_litedramcore_bankmachine5_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            if (main_litedramcore_bankmachine5_source_source_payload_we) begin
                                main_litedramcore_bankmachine5_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine5_twtpcon_ready & main_litedramcore_bankmachine5_trascon_ready)) begin
                main_litedramcore_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine5_trccon_ready) begin
                main_litedramcore_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine5_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            if (main_litedramcore_bankmachine5_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine5_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            if (main_litedramcore_bankmachine5_source_source_payload_we) begin
                                main_litedramcore_bankmachine5_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_req_wdata_ready <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            if (main_litedramcore_bankmachine5_source_source_payload_we) begin
                                main_litedramcore_bankmachine5_req_wdata_ready <= main_litedramcore_bankmachine5_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine5_req_rdata_valid <= 1'd0;
    case (builder_bankmachine5_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine5_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine5_source_source_valid) begin
                    if (main_litedramcore_bankmachine5_row_opened) begin
                        if (main_litedramcore_bankmachine5_row_hit) begin
                            if (main_litedramcore_bankmachine5_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine5_req_rdata_valid <= main_litedramcore_bankmachine5_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
assign main_litedramcore_bankmachine6_sink_valid = main_litedramcore_bankmachine6_req_valid;
assign main_litedramcore_bankmachine6_req_ready = main_litedramcore_bankmachine6_sink_ready;
assign main_litedramcore_bankmachine6_sink_payload_we = main_litedramcore_bankmachine6_req_we;
assign main_litedramcore_bankmachine6_sink_payload_addr = main_litedramcore_bankmachine6_req_addr;
assign main_litedramcore_bankmachine6_sink_sink_valid = main_litedramcore_bankmachine6_source_valid;
assign main_litedramcore_bankmachine6_source_ready = main_litedramcore_bankmachine6_sink_sink_ready;
assign main_litedramcore_bankmachine6_sink_sink_first = main_litedramcore_bankmachine6_source_first;
assign main_litedramcore_bankmachine6_sink_sink_last = main_litedramcore_bankmachine6_source_last;
assign main_litedramcore_bankmachine6_sink_sink_payload_we = main_litedramcore_bankmachine6_source_payload_we;
assign main_litedramcore_bankmachine6_sink_sink_payload_addr = main_litedramcore_bankmachine6_source_payload_addr;
assign main_litedramcore_bankmachine6_source_source_ready = (main_litedramcore_bankmachine6_req_wdata_ready | main_litedramcore_bankmachine6_req_rdata_valid);
assign main_litedramcore_bankmachine6_req_lock = (main_litedramcore_bankmachine6_source_valid | main_litedramcore_bankmachine6_source_source_valid);
assign main_litedramcore_bankmachine6_row_hit = (main_litedramcore_bankmachine6_row == main_litedramcore_bankmachine6_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine6_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine6_cmd_payload_a <= main_litedramcore_bankmachine6_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine6_cmd_payload_a <= ((main_litedramcore_bankmachine6_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine6_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine6_twtpcon_valid = ((main_litedramcore_bankmachine6_cmd_valid & main_litedramcore_bankmachine6_cmd_ready) & main_litedramcore_bankmachine6_cmd_payload_is_write);
assign main_litedramcore_bankmachine6_trccon_valid = ((main_litedramcore_bankmachine6_cmd_valid & main_litedramcore_bankmachine6_cmd_ready) & main_litedramcore_bankmachine6_row_open);
assign main_litedramcore_bankmachine6_trascon_valid = ((main_litedramcore_bankmachine6_cmd_valid & main_litedramcore_bankmachine6_cmd_ready) & main_litedramcore_bankmachine6_row_open);
always @(*) begin
    main_litedramcore_bankmachine6_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine6_source_valid & main_litedramcore_bankmachine6_source_source_valid)) begin
        if ((main_litedramcore_bankmachine6_source_payload_addr[21:7] != main_litedramcore_bankmachine6_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine6_auto_precharge <= (main_litedramcore_bankmachine6_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine6_syncfifo6_din = {main_litedramcore_bankmachine6_fifo_in_last, main_litedramcore_bankmachine6_fifo_in_first, main_litedramcore_bankmachine6_fifo_in_payload_addr, main_litedramcore_bankmachine6_fifo_in_payload_we};
assign {main_litedramcore_bankmachine6_fifo_out_last, main_litedramcore_bankmachine6_fifo_out_first, main_litedramcore_bankmachine6_fifo_out_payload_addr, main_litedramcore_bankmachine6_fifo_out_payload_we} = main_litedramcore_bankmachine6_syncfifo6_dout;
assign {main_litedramcore_bankmachine6_fifo_out_last, main_litedramcore_bankmachine6_fifo_out_first, main_litedramcore_bankmachine6_fifo_out_payload_addr, main_litedramcore_bankmachine6_fifo_out_payload_we} = main_litedramcore_bankmachine6_syncfifo6_dout;
assign {main_litedramcore_bankmachine6_fifo_out_last, main_litedramcore_bankmachine6_fifo_out_first, main_litedramcore_bankmachine6_fifo_out_payload_addr, main_litedramcore_bankmachine6_fifo_out_payload_we} = main_litedramcore_bankmachine6_syncfifo6_dout;
assign {main_litedramcore_bankmachine6_fifo_out_last, main_litedramcore_bankmachine6_fifo_out_first, main_litedramcore_bankmachine6_fifo_out_payload_addr, main_litedramcore_bankmachine6_fifo_out_payload_we} = main_litedramcore_bankmachine6_syncfifo6_dout;
assign main_litedramcore_bankmachine6_sink_ready = main_litedramcore_bankmachine6_syncfifo6_writable;
assign main_litedramcore_bankmachine6_syncfifo6_we = main_litedramcore_bankmachine6_sink_valid;
assign main_litedramcore_bankmachine6_fifo_in_first = main_litedramcore_bankmachine6_sink_first;
assign main_litedramcore_bankmachine6_fifo_in_last = main_litedramcore_bankmachine6_sink_last;
assign main_litedramcore_bankmachine6_fifo_in_payload_we = main_litedramcore_bankmachine6_sink_payload_we;
assign main_litedramcore_bankmachine6_fifo_in_payload_addr = main_litedramcore_bankmachine6_sink_payload_addr;
assign main_litedramcore_bankmachine6_source_valid = main_litedramcore_bankmachine6_syncfifo6_readable;
assign main_litedramcore_bankmachine6_source_first = main_litedramcore_bankmachine6_fifo_out_first;
assign main_litedramcore_bankmachine6_source_last = main_litedramcore_bankmachine6_fifo_out_last;
assign main_litedramcore_bankmachine6_source_payload_we = main_litedramcore_bankmachine6_fifo_out_payload_we;
assign main_litedramcore_bankmachine6_source_payload_addr = main_litedramcore_bankmachine6_fifo_out_payload_addr;
assign main_litedramcore_bankmachine6_syncfifo6_re = main_litedramcore_bankmachine6_source_ready;
always @(*) begin
    main_litedramcore_bankmachine6_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine6_replace) begin
        main_litedramcore_bankmachine6_wrport_adr <= (main_litedramcore_bankmachine6_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine6_wrport_adr <= main_litedramcore_bankmachine6_produce;
    end
end
assign main_litedramcore_bankmachine6_wrport_dat_w = main_litedramcore_bankmachine6_syncfifo6_din;
assign main_litedramcore_bankmachine6_wrport_we = (main_litedramcore_bankmachine6_syncfifo6_we & (main_litedramcore_bankmachine6_syncfifo6_writable | main_litedramcore_bankmachine6_replace));
assign main_litedramcore_bankmachine6_do_read = (main_litedramcore_bankmachine6_syncfifo6_readable & main_litedramcore_bankmachine6_syncfifo6_re);
assign main_litedramcore_bankmachine6_rdport_adr = main_litedramcore_bankmachine6_consume;
assign main_litedramcore_bankmachine6_syncfifo6_dout = main_litedramcore_bankmachine6_rdport_dat_r;
assign main_litedramcore_bankmachine6_syncfifo6_writable = (main_litedramcore_bankmachine6_level != 5'd16);
assign main_litedramcore_bankmachine6_syncfifo6_readable = (main_litedramcore_bankmachine6_level != 1'd0);
assign main_litedramcore_bankmachine6_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine6_pipe_valid_source_valid) | main_litedramcore_bankmachine6_pipe_valid_source_ready);
assign main_litedramcore_bankmachine6_pipe_valid_sink_valid = main_litedramcore_bankmachine6_sink_sink_valid;
assign main_litedramcore_bankmachine6_sink_sink_ready = main_litedramcore_bankmachine6_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine6_pipe_valid_sink_first = main_litedramcore_bankmachine6_sink_sink_first;
assign main_litedramcore_bankmachine6_pipe_valid_sink_last = main_litedramcore_bankmachine6_sink_sink_last;
assign main_litedramcore_bankmachine6_pipe_valid_sink_payload_we = main_litedramcore_bankmachine6_sink_sink_payload_we;
assign main_litedramcore_bankmachine6_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine6_sink_sink_payload_addr;
assign main_litedramcore_bankmachine6_source_source_valid = main_litedramcore_bankmachine6_pipe_valid_source_valid;
assign main_litedramcore_bankmachine6_pipe_valid_source_ready = main_litedramcore_bankmachine6_source_source_ready;
assign main_litedramcore_bankmachine6_source_source_first = main_litedramcore_bankmachine6_pipe_valid_source_first;
assign main_litedramcore_bankmachine6_source_source_last = main_litedramcore_bankmachine6_pipe_valid_source_last;
assign main_litedramcore_bankmachine6_source_source_payload_we = main_litedramcore_bankmachine6_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine6_source_source_payload_addr = main_litedramcore_bankmachine6_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine6_next_state <= 4'd0;
    builder_bankmachine6_next_state <= builder_bankmachine6_state;
    case (builder_bankmachine6_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine6_twtpcon_ready & main_litedramcore_bankmachine6_trascon_ready)) begin
                if (main_litedramcore_bankmachine6_cmd_ready) begin
                    builder_bankmachine6_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine6_twtpcon_ready & main_litedramcore_bankmachine6_trascon_ready)) begin
                builder_bankmachine6_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine6_trccon_ready) begin
                if (main_litedramcore_bankmachine6_cmd_ready) begin
                    builder_bankmachine6_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine6_refresh_req)) begin
                builder_bankmachine6_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine6_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine6_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine6_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine6_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
                builder_bankmachine6_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            if ((main_litedramcore_bankmachine6_cmd_ready & main_litedramcore_bankmachine6_auto_precharge)) begin
                                builder_bankmachine6_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine6_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine6_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine6_trccon_ready) begin
                main_litedramcore_bankmachine6_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            main_litedramcore_bankmachine6_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine6_twtpcon_ready & main_litedramcore_bankmachine6_trascon_ready)) begin
                main_litedramcore_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine6_trccon_ready) begin
                main_litedramcore_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_we <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine6_twtpcon_ready & main_litedramcore_bankmachine6_trascon_ready)) begin
                main_litedramcore_bankmachine6_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            if (main_litedramcore_bankmachine6_source_source_payload_we) begin
                                main_litedramcore_bankmachine6_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine6_twtpcon_ready & main_litedramcore_bankmachine6_trascon_ready)) begin
                main_litedramcore_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine6_trccon_ready) begin
                main_litedramcore_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine6_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            if (main_litedramcore_bankmachine6_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine6_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            if (main_litedramcore_bankmachine6_source_source_payload_we) begin
                                main_litedramcore_bankmachine6_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_req_wdata_ready <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            if (main_litedramcore_bankmachine6_source_source_payload_we) begin
                                main_litedramcore_bankmachine6_req_wdata_ready <= main_litedramcore_bankmachine6_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_req_rdata_valid <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            if (main_litedramcore_bankmachine6_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine6_req_rdata_valid <= main_litedramcore_bankmachine6_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_refresh_gnt <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine6_twtpcon_ready) begin
                main_litedramcore_bankmachine6_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_valid <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine6_twtpcon_ready & main_litedramcore_bankmachine6_trascon_ready)) begin
                main_litedramcore_bankmachine6_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine6_trccon_ready) begin
                main_litedramcore_bankmachine6_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine6_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine6_source_source_valid) begin
                    if (main_litedramcore_bankmachine6_row_opened) begin
                        if (main_litedramcore_bankmachine6_row_hit) begin
                            main_litedramcore_bankmachine6_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_row_close <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
            main_litedramcore_bankmachine6_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine6_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine6_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine6_row_open <= 1'd0;
    case (builder_bankmachine6_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine6_trccon_ready) begin
                main_litedramcore_bankmachine6_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
assign main_litedramcore_bankmachine7_sink_valid = main_litedramcore_bankmachine7_req_valid;
assign main_litedramcore_bankmachine7_req_ready = main_litedramcore_bankmachine7_sink_ready;
assign main_litedramcore_bankmachine7_sink_payload_we = main_litedramcore_bankmachine7_req_we;
assign main_litedramcore_bankmachine7_sink_payload_addr = main_litedramcore_bankmachine7_req_addr;
assign main_litedramcore_bankmachine7_sink_sink_valid = main_litedramcore_bankmachine7_source_valid;
assign main_litedramcore_bankmachine7_source_ready = main_litedramcore_bankmachine7_sink_sink_ready;
assign main_litedramcore_bankmachine7_sink_sink_first = main_litedramcore_bankmachine7_source_first;
assign main_litedramcore_bankmachine7_sink_sink_last = main_litedramcore_bankmachine7_source_last;
assign main_litedramcore_bankmachine7_sink_sink_payload_we = main_litedramcore_bankmachine7_source_payload_we;
assign main_litedramcore_bankmachine7_sink_sink_payload_addr = main_litedramcore_bankmachine7_source_payload_addr;
assign main_litedramcore_bankmachine7_source_source_ready = (main_litedramcore_bankmachine7_req_wdata_ready | main_litedramcore_bankmachine7_req_rdata_valid);
assign main_litedramcore_bankmachine7_req_lock = (main_litedramcore_bankmachine7_source_valid | main_litedramcore_bankmachine7_source_source_valid);
assign main_litedramcore_bankmachine7_row_hit = (main_litedramcore_bankmachine7_row == main_litedramcore_bankmachine7_source_source_payload_addr[21:7]);
assign main_litedramcore_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_a <= 15'd0;
    if (main_litedramcore_bankmachine7_row_col_n_addr_sel) begin
        main_litedramcore_bankmachine7_cmd_payload_a <= main_litedramcore_bankmachine7_source_source_payload_addr[21:7];
    end else begin
        main_litedramcore_bankmachine7_cmd_payload_a <= ((main_litedramcore_bankmachine7_auto_precharge <<< 4'd10) | {main_litedramcore_bankmachine7_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign main_litedramcore_bankmachine7_twtpcon_valid = ((main_litedramcore_bankmachine7_cmd_valid & main_litedramcore_bankmachine7_cmd_ready) & main_litedramcore_bankmachine7_cmd_payload_is_write);
assign main_litedramcore_bankmachine7_trccon_valid = ((main_litedramcore_bankmachine7_cmd_valid & main_litedramcore_bankmachine7_cmd_ready) & main_litedramcore_bankmachine7_row_open);
assign main_litedramcore_bankmachine7_trascon_valid = ((main_litedramcore_bankmachine7_cmd_valid & main_litedramcore_bankmachine7_cmd_ready) & main_litedramcore_bankmachine7_row_open);
always @(*) begin
    main_litedramcore_bankmachine7_auto_precharge <= 1'd0;
    if ((main_litedramcore_bankmachine7_source_valid & main_litedramcore_bankmachine7_source_source_valid)) begin
        if ((main_litedramcore_bankmachine7_source_payload_addr[21:7] != main_litedramcore_bankmachine7_source_source_payload_addr[21:7])) begin
            main_litedramcore_bankmachine7_auto_precharge <= (main_litedramcore_bankmachine7_row_close == 1'd0);
        end
    end
end
assign main_litedramcore_bankmachine7_syncfifo7_din = {main_litedramcore_bankmachine7_fifo_in_last, main_litedramcore_bankmachine7_fifo_in_first, main_litedramcore_bankmachine7_fifo_in_payload_addr, main_litedramcore_bankmachine7_fifo_in_payload_we};
assign {main_litedramcore_bankmachine7_fifo_out_last, main_litedramcore_bankmachine7_fifo_out_first, main_litedramcore_bankmachine7_fifo_out_payload_addr, main_litedramcore_bankmachine7_fifo_out_payload_we} = main_litedramcore_bankmachine7_syncfifo7_dout;
assign {main_litedramcore_bankmachine7_fifo_out_last, main_litedramcore_bankmachine7_fifo_out_first, main_litedramcore_bankmachine7_fifo_out_payload_addr, main_litedramcore_bankmachine7_fifo_out_payload_we} = main_litedramcore_bankmachine7_syncfifo7_dout;
assign {main_litedramcore_bankmachine7_fifo_out_last, main_litedramcore_bankmachine7_fifo_out_first, main_litedramcore_bankmachine7_fifo_out_payload_addr, main_litedramcore_bankmachine7_fifo_out_payload_we} = main_litedramcore_bankmachine7_syncfifo7_dout;
assign {main_litedramcore_bankmachine7_fifo_out_last, main_litedramcore_bankmachine7_fifo_out_first, main_litedramcore_bankmachine7_fifo_out_payload_addr, main_litedramcore_bankmachine7_fifo_out_payload_we} = main_litedramcore_bankmachine7_syncfifo7_dout;
assign main_litedramcore_bankmachine7_sink_ready = main_litedramcore_bankmachine7_syncfifo7_writable;
assign main_litedramcore_bankmachine7_syncfifo7_we = main_litedramcore_bankmachine7_sink_valid;
assign main_litedramcore_bankmachine7_fifo_in_first = main_litedramcore_bankmachine7_sink_first;
assign main_litedramcore_bankmachine7_fifo_in_last = main_litedramcore_bankmachine7_sink_last;
assign main_litedramcore_bankmachine7_fifo_in_payload_we = main_litedramcore_bankmachine7_sink_payload_we;
assign main_litedramcore_bankmachine7_fifo_in_payload_addr = main_litedramcore_bankmachine7_sink_payload_addr;
assign main_litedramcore_bankmachine7_source_valid = main_litedramcore_bankmachine7_syncfifo7_readable;
assign main_litedramcore_bankmachine7_source_first = main_litedramcore_bankmachine7_fifo_out_first;
assign main_litedramcore_bankmachine7_source_last = main_litedramcore_bankmachine7_fifo_out_last;
assign main_litedramcore_bankmachine7_source_payload_we = main_litedramcore_bankmachine7_fifo_out_payload_we;
assign main_litedramcore_bankmachine7_source_payload_addr = main_litedramcore_bankmachine7_fifo_out_payload_addr;
assign main_litedramcore_bankmachine7_syncfifo7_re = main_litedramcore_bankmachine7_source_ready;
always @(*) begin
    main_litedramcore_bankmachine7_wrport_adr <= 4'd0;
    if (main_litedramcore_bankmachine7_replace) begin
        main_litedramcore_bankmachine7_wrport_adr <= (main_litedramcore_bankmachine7_produce - 1'd1);
    end else begin
        main_litedramcore_bankmachine7_wrport_adr <= main_litedramcore_bankmachine7_produce;
    end
end
assign main_litedramcore_bankmachine7_wrport_dat_w = main_litedramcore_bankmachine7_syncfifo7_din;
assign main_litedramcore_bankmachine7_wrport_we = (main_litedramcore_bankmachine7_syncfifo7_we & (main_litedramcore_bankmachine7_syncfifo7_writable | main_litedramcore_bankmachine7_replace));
assign main_litedramcore_bankmachine7_do_read = (main_litedramcore_bankmachine7_syncfifo7_readable & main_litedramcore_bankmachine7_syncfifo7_re);
assign main_litedramcore_bankmachine7_rdport_adr = main_litedramcore_bankmachine7_consume;
assign main_litedramcore_bankmachine7_syncfifo7_dout = main_litedramcore_bankmachine7_rdport_dat_r;
assign main_litedramcore_bankmachine7_syncfifo7_writable = (main_litedramcore_bankmachine7_level != 5'd16);
assign main_litedramcore_bankmachine7_syncfifo7_readable = (main_litedramcore_bankmachine7_level != 1'd0);
assign main_litedramcore_bankmachine7_pipe_valid_sink_ready = ((~main_litedramcore_bankmachine7_pipe_valid_source_valid) | main_litedramcore_bankmachine7_pipe_valid_source_ready);
assign main_litedramcore_bankmachine7_pipe_valid_sink_valid = main_litedramcore_bankmachine7_sink_sink_valid;
assign main_litedramcore_bankmachine7_sink_sink_ready = main_litedramcore_bankmachine7_pipe_valid_sink_ready;
assign main_litedramcore_bankmachine7_pipe_valid_sink_first = main_litedramcore_bankmachine7_sink_sink_first;
assign main_litedramcore_bankmachine7_pipe_valid_sink_last = main_litedramcore_bankmachine7_sink_sink_last;
assign main_litedramcore_bankmachine7_pipe_valid_sink_payload_we = main_litedramcore_bankmachine7_sink_sink_payload_we;
assign main_litedramcore_bankmachine7_pipe_valid_sink_payload_addr = main_litedramcore_bankmachine7_sink_sink_payload_addr;
assign main_litedramcore_bankmachine7_source_source_valid = main_litedramcore_bankmachine7_pipe_valid_source_valid;
assign main_litedramcore_bankmachine7_pipe_valid_source_ready = main_litedramcore_bankmachine7_source_source_ready;
assign main_litedramcore_bankmachine7_source_source_first = main_litedramcore_bankmachine7_pipe_valid_source_first;
assign main_litedramcore_bankmachine7_source_source_last = main_litedramcore_bankmachine7_pipe_valid_source_last;
assign main_litedramcore_bankmachine7_source_source_payload_we = main_litedramcore_bankmachine7_pipe_valid_source_payload_we;
assign main_litedramcore_bankmachine7_source_source_payload_addr = main_litedramcore_bankmachine7_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine7_next_state <= 4'd0;
    builder_bankmachine7_next_state <= builder_bankmachine7_state;
    case (builder_bankmachine7_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine7_twtpcon_ready & main_litedramcore_bankmachine7_trascon_ready)) begin
                if (main_litedramcore_bankmachine7_cmd_ready) begin
                    builder_bankmachine7_next_state <= 3'd5;
                end
            end
        end
        2'd2: begin
            if ((main_litedramcore_bankmachine7_twtpcon_ready & main_litedramcore_bankmachine7_trascon_ready)) begin
                builder_bankmachine7_next_state <= 3'd5;
            end
        end
        2'd3: begin
            if (main_litedramcore_bankmachine7_trccon_ready) begin
                if (main_litedramcore_bankmachine7_cmd_ready) begin
                    builder_bankmachine7_next_state <= 3'd7;
                end
            end
        end
        3'd4: begin
            if ((~main_litedramcore_bankmachine7_refresh_req)) begin
                builder_bankmachine7_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_bankmachine7_next_state <= 3'd6;
        end
        3'd6: begin
            builder_bankmachine7_next_state <= 2'd3;
        end
        3'd7: begin
            builder_bankmachine7_next_state <= 4'd8;
        end
        4'd8: begin
            builder_bankmachine7_next_state <= 1'd0;
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
                builder_bankmachine7_next_state <= 3'd4;
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            if ((main_litedramcore_bankmachine7_cmd_ready & main_litedramcore_bankmachine7_auto_precharge)) begin
                                builder_bankmachine7_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine7_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine7_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_ras <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine7_twtpcon_ready & main_litedramcore_bankmachine7_trascon_ready)) begin
                main_litedramcore_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine7_trccon_ready) begin
                main_litedramcore_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_we <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine7_twtpcon_ready & main_litedramcore_bankmachine7_trascon_ready)) begin
                main_litedramcore_bankmachine7_cmd_payload_we <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            if (main_litedramcore_bankmachine7_source_source_payload_we) begin
                                main_litedramcore_bankmachine7_cmd_payload_we <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_is_cmd <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine7_twtpcon_ready & main_litedramcore_bankmachine7_trascon_ready)) begin
                main_litedramcore_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine7_trccon_ready) begin
                main_litedramcore_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
        end
        3'd4: begin
            main_litedramcore_bankmachine7_cmd_payload_is_cmd <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_is_read <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            if (main_litedramcore_bankmachine7_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine7_cmd_payload_is_read <= 1'd1;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_is_write <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            if (main_litedramcore_bankmachine7_source_source_payload_we) begin
                                main_litedramcore_bankmachine7_cmd_payload_is_write <= 1'd1;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_req_wdata_ready <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            if (main_litedramcore_bankmachine7_source_source_payload_we) begin
                                main_litedramcore_bankmachine7_req_wdata_ready <= main_litedramcore_bankmachine7_cmd_ready;
                            end else begin
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_req_rdata_valid <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            if (main_litedramcore_bankmachine7_source_source_payload_we) begin
                            end else begin
                                main_litedramcore_bankmachine7_req_rdata_valid <= main_litedramcore_bankmachine7_cmd_ready;
                            end
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_refresh_gnt <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
            if (main_litedramcore_bankmachine7_twtpcon_ready) begin
                main_litedramcore_bankmachine7_refresh_gnt <= 1'd1;
            end
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_row_open <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine7_trccon_ready) begin
                main_litedramcore_bankmachine7_row_open <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_valid <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
            if ((main_litedramcore_bankmachine7_twtpcon_ready & main_litedramcore_bankmachine7_trascon_ready)) begin
                main_litedramcore_bankmachine7_cmd_valid <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine7_trccon_ready) begin
                main_litedramcore_bankmachine7_cmd_valid <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            main_litedramcore_bankmachine7_cmd_valid <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_row_close <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
            main_litedramcore_bankmachine7_row_close <= 1'd1;
        end
        2'd2: begin
            main_litedramcore_bankmachine7_row_close <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
            main_litedramcore_bankmachine7_row_close <= 1'd1;
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_row_col_n_addr_sel <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
            if (main_litedramcore_bankmachine7_trccon_ready) begin
                main_litedramcore_bankmachine7_row_col_n_addr_sel <= 1'd1;
            end
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_payload_cas <= 1'd0;
    case (builder_bankmachine7_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        default: begin
            if (main_litedramcore_bankmachine7_refresh_req) begin
            end else begin
                if (main_litedramcore_bankmachine7_source_source_valid) begin
                    if (main_litedramcore_bankmachine7_row_opened) begin
                        if (main_litedramcore_bankmachine7_row_hit) begin
                            main_litedramcore_bankmachine7_cmd_payload_cas <= 1'd1;
                        end else begin
                        end
                    end else begin
                    end
                end
            end
        end
    endcase
end
assign main_litedramcore_nphases = (main_k7ddrphy_rdphase_storage - 1'd1);
assign main_litedramcore_rdphase = (main_k7ddrphy_wrphase_storage - 1'd1);
assign main_litedramcore_trrdcon_valid = ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & ((main_litedramcore_choose_cmd_cmd_payload_ras & (~main_litedramcore_choose_cmd_cmd_payload_cas)) & (~main_litedramcore_choose_cmd_cmd_payload_we)));
assign main_litedramcore_tfawcon_valid = ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & ((main_litedramcore_choose_cmd_cmd_payload_ras & (~main_litedramcore_choose_cmd_cmd_payload_cas)) & (~main_litedramcore_choose_cmd_cmd_payload_we)));
assign main_litedramcore_ras_allowed = (main_litedramcore_trrdcon_ready & main_litedramcore_tfawcon_ready);
assign main_litedramcore_tccdcon_valid = ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_cmd_payload_is_write | main_litedramcore_choose_req_cmd_payload_is_read));
assign main_litedramcore_cas_allowed = main_litedramcore_tccdcon_ready;
assign main_litedramcore_twtrcon_valid = ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_write);
assign main_litedramcore_read_available = ((((((((main_litedramcore_bankmachine0_cmd_valid & main_litedramcore_bankmachine0_cmd_payload_is_read) | (main_litedramcore_bankmachine1_cmd_valid & main_litedramcore_bankmachine1_cmd_payload_is_read)) | (main_litedramcore_bankmachine2_cmd_valid & main_litedramcore_bankmachine2_cmd_payload_is_read)) | (main_litedramcore_bankmachine3_cmd_valid & main_litedramcore_bankmachine3_cmd_payload_is_read)) | (main_litedramcore_bankmachine4_cmd_valid & main_litedramcore_bankmachine4_cmd_payload_is_read)) | (main_litedramcore_bankmachine5_cmd_valid & main_litedramcore_bankmachine5_cmd_payload_is_read)) | (main_litedramcore_bankmachine6_cmd_valid & main_litedramcore_bankmachine6_cmd_payload_is_read)) | (main_litedramcore_bankmachine7_cmd_valid & main_litedramcore_bankmachine7_cmd_payload_is_read));
assign main_litedramcore_write_available = ((((((((main_litedramcore_bankmachine0_cmd_valid & main_litedramcore_bankmachine0_cmd_payload_is_write) | (main_litedramcore_bankmachine1_cmd_valid & main_litedramcore_bankmachine1_cmd_payload_is_write)) | (main_litedramcore_bankmachine2_cmd_valid & main_litedramcore_bankmachine2_cmd_payload_is_write)) | (main_litedramcore_bankmachine3_cmd_valid & main_litedramcore_bankmachine3_cmd_payload_is_write)) | (main_litedramcore_bankmachine4_cmd_valid & main_litedramcore_bankmachine4_cmd_payload_is_write)) | (main_litedramcore_bankmachine5_cmd_valid & main_litedramcore_bankmachine5_cmd_payload_is_write)) | (main_litedramcore_bankmachine6_cmd_valid & main_litedramcore_bankmachine6_cmd_payload_is_write)) | (main_litedramcore_bankmachine7_cmd_valid & main_litedramcore_bankmachine7_cmd_payload_is_write));
assign main_litedramcore_max_time0 = (main_litedramcore_time0 == 1'd0);
assign main_litedramcore_max_time1 = (main_litedramcore_time1 == 1'd0);
assign main_litedramcore_bankmachine0_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine1_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine2_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine3_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine4_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine5_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine6_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_bankmachine7_refresh_req = main_litedramcore_cmd_valid;
assign main_litedramcore_go_to_refresh = (((((((main_litedramcore_bankmachine0_refresh_gnt & main_litedramcore_bankmachine1_refresh_gnt) & main_litedramcore_bankmachine2_refresh_gnt) & main_litedramcore_bankmachine3_refresh_gnt) & main_litedramcore_bankmachine4_refresh_gnt) & main_litedramcore_bankmachine5_refresh_gnt) & main_litedramcore_bankmachine6_refresh_gnt) & main_litedramcore_bankmachine7_refresh_gnt);
assign main_litedramcore_interface_rdata = {main_litedramcore_dfi_p3_rddata, main_litedramcore_dfi_p2_rddata, main_litedramcore_dfi_p1_rddata, main_litedramcore_dfi_p0_rddata};
assign {main_litedramcore_dfi_p3_wrdata, main_litedramcore_dfi_p2_wrdata, main_litedramcore_dfi_p1_wrdata, main_litedramcore_dfi_p0_wrdata} = main_litedramcore_interface_wdata;
assign {main_litedramcore_dfi_p3_wrdata, main_litedramcore_dfi_p2_wrdata, main_litedramcore_dfi_p1_wrdata, main_litedramcore_dfi_p0_wrdata} = main_litedramcore_interface_wdata;
assign {main_litedramcore_dfi_p3_wrdata, main_litedramcore_dfi_p2_wrdata, main_litedramcore_dfi_p1_wrdata, main_litedramcore_dfi_p0_wrdata} = main_litedramcore_interface_wdata;
assign {main_litedramcore_dfi_p3_wrdata, main_litedramcore_dfi_p2_wrdata, main_litedramcore_dfi_p1_wrdata, main_litedramcore_dfi_p0_wrdata} = main_litedramcore_interface_wdata;
assign {main_litedramcore_dfi_p3_wrdata_mask, main_litedramcore_dfi_p2_wrdata_mask, main_litedramcore_dfi_p1_wrdata_mask, main_litedramcore_dfi_p0_wrdata_mask} = (~main_litedramcore_interface_wdata_we);
assign {main_litedramcore_dfi_p3_wrdata_mask, main_litedramcore_dfi_p2_wrdata_mask, main_litedramcore_dfi_p1_wrdata_mask, main_litedramcore_dfi_p0_wrdata_mask} = (~main_litedramcore_interface_wdata_we);
assign {main_litedramcore_dfi_p3_wrdata_mask, main_litedramcore_dfi_p2_wrdata_mask, main_litedramcore_dfi_p1_wrdata_mask, main_litedramcore_dfi_p0_wrdata_mask} = (~main_litedramcore_interface_wdata_we);
assign {main_litedramcore_dfi_p3_wrdata_mask, main_litedramcore_dfi_p2_wrdata_mask, main_litedramcore_dfi_p1_wrdata_mask, main_litedramcore_dfi_p0_wrdata_mask} = (~main_litedramcore_interface_wdata_we);
always @(*) begin
    main_litedramcore_choose_cmd_valids <= 8'd0;
    main_litedramcore_choose_cmd_valids[0] <= (main_litedramcore_bankmachine0_cmd_valid & (((main_litedramcore_bankmachine0_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine0_cmd_payload_ras & (~main_litedramcore_bankmachine0_cmd_payload_cas)) & (~main_litedramcore_bankmachine0_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine0_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine0_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[1] <= (main_litedramcore_bankmachine1_cmd_valid & (((main_litedramcore_bankmachine1_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine1_cmd_payload_ras & (~main_litedramcore_bankmachine1_cmd_payload_cas)) & (~main_litedramcore_bankmachine1_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine1_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine1_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[2] <= (main_litedramcore_bankmachine2_cmd_valid & (((main_litedramcore_bankmachine2_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine2_cmd_payload_ras & (~main_litedramcore_bankmachine2_cmd_payload_cas)) & (~main_litedramcore_bankmachine2_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine2_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine2_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[3] <= (main_litedramcore_bankmachine3_cmd_valid & (((main_litedramcore_bankmachine3_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine3_cmd_payload_ras & (~main_litedramcore_bankmachine3_cmd_payload_cas)) & (~main_litedramcore_bankmachine3_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine3_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine3_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[4] <= (main_litedramcore_bankmachine4_cmd_valid & (((main_litedramcore_bankmachine4_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine4_cmd_payload_ras & (~main_litedramcore_bankmachine4_cmd_payload_cas)) & (~main_litedramcore_bankmachine4_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine4_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine4_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[5] <= (main_litedramcore_bankmachine5_cmd_valid & (((main_litedramcore_bankmachine5_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine5_cmd_payload_ras & (~main_litedramcore_bankmachine5_cmd_payload_cas)) & (~main_litedramcore_bankmachine5_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine5_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine5_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[6] <= (main_litedramcore_bankmachine6_cmd_valid & (((main_litedramcore_bankmachine6_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine6_cmd_payload_ras & (~main_litedramcore_bankmachine6_cmd_payload_cas)) & (~main_litedramcore_bankmachine6_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine6_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine6_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
    main_litedramcore_choose_cmd_valids[7] <= (main_litedramcore_bankmachine7_cmd_valid & (((main_litedramcore_bankmachine7_cmd_payload_is_cmd & main_litedramcore_choose_cmd_want_cmds) & ((~((main_litedramcore_bankmachine7_cmd_payload_ras & (~main_litedramcore_bankmachine7_cmd_payload_cas)) & (~main_litedramcore_bankmachine7_cmd_payload_we))) | main_litedramcore_choose_cmd_want_activates)) | ((main_litedramcore_bankmachine7_cmd_payload_is_read == main_litedramcore_choose_cmd_want_reads) & (main_litedramcore_bankmachine7_cmd_payload_is_write == main_litedramcore_choose_cmd_want_writes))));
end
assign main_litedramcore_choose_cmd_request = main_litedramcore_choose_cmd_valids;
assign main_litedramcore_choose_cmd_cmd_valid = builder_rhs_self0;
assign main_litedramcore_choose_cmd_cmd_payload_a = builder_rhs_self1;
assign main_litedramcore_choose_cmd_cmd_payload_ba = builder_rhs_self2;
assign main_litedramcore_choose_cmd_cmd_payload_is_read = builder_rhs_self3;
assign main_litedramcore_choose_cmd_cmd_payload_is_write = builder_rhs_self4;
assign main_litedramcore_choose_cmd_cmd_payload_is_cmd = builder_rhs_self5;
always @(*) begin
    main_litedramcore_choose_cmd_cmd_payload_cas <= 1'd0;
    if (main_litedramcore_choose_cmd_cmd_valid) begin
        main_litedramcore_choose_cmd_cmd_payload_cas <= builder_t_self0;
    end
end
always @(*) begin
    main_litedramcore_choose_cmd_cmd_payload_ras <= 1'd0;
    if (main_litedramcore_choose_cmd_cmd_valid) begin
        main_litedramcore_choose_cmd_cmd_payload_ras <= builder_t_self1;
    end
end
always @(*) begin
    main_litedramcore_choose_cmd_cmd_payload_we <= 1'd0;
    if (main_litedramcore_choose_cmd_cmd_valid) begin
        main_litedramcore_choose_cmd_cmd_payload_we <= builder_t_self2;
    end
end
always @(*) begin
    main_litedramcore_bankmachine0_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 1'd0))) begin
        main_litedramcore_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 1'd0))) begin
        main_litedramcore_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine1_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 1'd1))) begin
        main_litedramcore_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 1'd1))) begin
        main_litedramcore_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine2_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 2'd2))) begin
        main_litedramcore_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 2'd2))) begin
        main_litedramcore_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine3_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 2'd3))) begin
        main_litedramcore_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 2'd3))) begin
        main_litedramcore_bankmachine3_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine4_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 3'd4))) begin
        main_litedramcore_bankmachine4_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 3'd4))) begin
        main_litedramcore_bankmachine4_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine5_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 3'd5))) begin
        main_litedramcore_bankmachine5_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 3'd5))) begin
        main_litedramcore_bankmachine5_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine6_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 3'd6))) begin
        main_litedramcore_bankmachine6_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 3'd6))) begin
        main_litedramcore_bankmachine6_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    main_litedramcore_bankmachine7_cmd_ready <= 1'd0;
    if (((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & (main_litedramcore_choose_cmd_grant == 3'd7))) begin
        main_litedramcore_bankmachine7_cmd_ready <= 1'd1;
    end
    if (((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & (main_litedramcore_choose_req_grant == 3'd7))) begin
        main_litedramcore_bankmachine7_cmd_ready <= 1'd1;
    end
end
assign main_litedramcore_choose_cmd_ce = (main_litedramcore_choose_cmd_cmd_ready | (~main_litedramcore_choose_cmd_cmd_valid));
always @(*) begin
    main_litedramcore_choose_req_valids <= 8'd0;
    main_litedramcore_choose_req_valids[0] <= (main_litedramcore_bankmachine0_cmd_valid & (((main_litedramcore_bankmachine0_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine0_cmd_payload_ras & (~main_litedramcore_bankmachine0_cmd_payload_cas)) & (~main_litedramcore_bankmachine0_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine0_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine0_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[1] <= (main_litedramcore_bankmachine1_cmd_valid & (((main_litedramcore_bankmachine1_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine1_cmd_payload_ras & (~main_litedramcore_bankmachine1_cmd_payload_cas)) & (~main_litedramcore_bankmachine1_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine1_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine1_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[2] <= (main_litedramcore_bankmachine2_cmd_valid & (((main_litedramcore_bankmachine2_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine2_cmd_payload_ras & (~main_litedramcore_bankmachine2_cmd_payload_cas)) & (~main_litedramcore_bankmachine2_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine2_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine2_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[3] <= (main_litedramcore_bankmachine3_cmd_valid & (((main_litedramcore_bankmachine3_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine3_cmd_payload_ras & (~main_litedramcore_bankmachine3_cmd_payload_cas)) & (~main_litedramcore_bankmachine3_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine3_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine3_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[4] <= (main_litedramcore_bankmachine4_cmd_valid & (((main_litedramcore_bankmachine4_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine4_cmd_payload_ras & (~main_litedramcore_bankmachine4_cmd_payload_cas)) & (~main_litedramcore_bankmachine4_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine4_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine4_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[5] <= (main_litedramcore_bankmachine5_cmd_valid & (((main_litedramcore_bankmachine5_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine5_cmd_payload_ras & (~main_litedramcore_bankmachine5_cmd_payload_cas)) & (~main_litedramcore_bankmachine5_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine5_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine5_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[6] <= (main_litedramcore_bankmachine6_cmd_valid & (((main_litedramcore_bankmachine6_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine6_cmd_payload_ras & (~main_litedramcore_bankmachine6_cmd_payload_cas)) & (~main_litedramcore_bankmachine6_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine6_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine6_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
    main_litedramcore_choose_req_valids[7] <= (main_litedramcore_bankmachine7_cmd_valid & (((main_litedramcore_bankmachine7_cmd_payload_is_cmd & main_litedramcore_choose_req_want_cmds) & ((~((main_litedramcore_bankmachine7_cmd_payload_ras & (~main_litedramcore_bankmachine7_cmd_payload_cas)) & (~main_litedramcore_bankmachine7_cmd_payload_we))) | main_litedramcore_choose_req_want_activates)) | ((main_litedramcore_bankmachine7_cmd_payload_is_read == main_litedramcore_choose_req_want_reads) & (main_litedramcore_bankmachine7_cmd_payload_is_write == main_litedramcore_choose_req_want_writes))));
end
assign main_litedramcore_choose_req_request = main_litedramcore_choose_req_valids;
assign main_litedramcore_choose_req_cmd_valid = builder_rhs_self6;
assign main_litedramcore_choose_req_cmd_payload_a = builder_rhs_self7;
assign main_litedramcore_choose_req_cmd_payload_ba = builder_rhs_self8;
assign main_litedramcore_choose_req_cmd_payload_is_read = builder_rhs_self9;
assign main_litedramcore_choose_req_cmd_payload_is_write = builder_rhs_self10;
assign main_litedramcore_choose_req_cmd_payload_is_cmd = builder_rhs_self11;
always @(*) begin
    main_litedramcore_choose_req_cmd_payload_cas <= 1'd0;
    if (main_litedramcore_choose_req_cmd_valid) begin
        main_litedramcore_choose_req_cmd_payload_cas <= builder_t_self3;
    end
end
always @(*) begin
    main_litedramcore_choose_req_cmd_payload_ras <= 1'd0;
    if (main_litedramcore_choose_req_cmd_valid) begin
        main_litedramcore_choose_req_cmd_payload_ras <= builder_t_self4;
    end
end
always @(*) begin
    main_litedramcore_choose_req_cmd_payload_we <= 1'd0;
    if (main_litedramcore_choose_req_cmd_valid) begin
        main_litedramcore_choose_req_cmd_payload_we <= builder_t_self5;
    end
end
assign main_litedramcore_choose_req_ce = (main_litedramcore_choose_req_cmd_ready | (~main_litedramcore_choose_req_cmd_valid));
assign main_litedramcore_dfi_p0_reset_n = 1'd1;
assign main_litedramcore_dfi_p0_cke = {1{main_litedramcore_steerer4}};
assign main_litedramcore_dfi_p0_odt = {1{main_litedramcore_steerer5}};
assign main_litedramcore_dfi_p1_reset_n = 1'd1;
assign main_litedramcore_dfi_p1_cke = {1{main_litedramcore_steerer6}};
assign main_litedramcore_dfi_p1_odt = {1{main_litedramcore_steerer7}};
assign main_litedramcore_dfi_p2_reset_n = 1'd1;
assign main_litedramcore_dfi_p2_cke = {1{main_litedramcore_steerer8}};
assign main_litedramcore_dfi_p2_odt = {1{main_litedramcore_steerer9}};
assign main_litedramcore_dfi_p3_reset_n = 1'd1;
assign main_litedramcore_dfi_p3_cke = {1{main_litedramcore_steerer10}};
assign main_litedramcore_dfi_p3_odt = {1{main_litedramcore_steerer11}};
assign main_litedramcore_tfawcon_count = ((((main_litedramcore_tfawcon_window[0] + main_litedramcore_tfawcon_window[1]) + main_litedramcore_tfawcon_window[2]) + main_litedramcore_tfawcon_window[3]) + main_litedramcore_tfawcon_window[4]);
always @(*) begin
    builder_multiplexer_next_state <= 4'd0;
    builder_multiplexer_next_state <= builder_multiplexer_state;
    case (builder_multiplexer_state)
        1'd1: begin
            if (main_litedramcore_read_available) begin
                if (((~main_litedramcore_write_available) | main_litedramcore_max_time1)) begin
                    builder_multiplexer_next_state <= 2'd3;
                end
            end
            if (main_litedramcore_go_to_refresh) begin
                builder_multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            if (main_litedramcore_cmd_last) begin
                builder_multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (main_litedramcore_twtrcon_ready) begin
                builder_multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            builder_multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            builder_multiplexer_next_state <= 3'd6;
        end
        3'd6: begin
            builder_multiplexer_next_state <= 3'd7;
        end
        3'd7: begin
            builder_multiplexer_next_state <= 4'd8;
        end
        4'd8: begin
            builder_multiplexer_next_state <= 4'd9;
        end
        4'd9: begin
            builder_multiplexer_next_state <= 4'd10;
        end
        4'd10: begin
            builder_multiplexer_next_state <= 1'd1;
        end
        default: begin
            if (main_litedramcore_write_available) begin
                if (((~main_litedramcore_read_available) | main_litedramcore_max_time0)) begin
                    builder_multiplexer_next_state <= 3'd4;
                end
            end
            if (main_litedramcore_go_to_refresh) begin
                builder_multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_steerer0 <= 2'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            main_litedramcore_steerer0 <= 1'd0;
            if ((main_k7ddrphy_wrphase_storage == 1'd0)) begin
                main_litedramcore_steerer0 <= 2'd2;
            end
            if ((main_litedramcore_rdphase == 1'd0)) begin
                main_litedramcore_steerer0 <= 1'd1;
            end
        end
        2'd2: begin
            main_litedramcore_steerer0 <= 2'd3;
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            main_litedramcore_steerer0 <= 1'd0;
            if ((main_k7ddrphy_rdphase_storage == 1'd0)) begin
                main_litedramcore_steerer0 <= 2'd2;
            end
            if ((main_litedramcore_nphases == 1'd0)) begin
                main_litedramcore_steerer0 <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_cmd_ready <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
        end
        2'd2: begin
            main_litedramcore_cmd_ready <= 1'd1;
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_steerer1 <= 2'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            main_litedramcore_steerer1 <= 1'd0;
            if ((main_k7ddrphy_wrphase_storage == 1'd1)) begin
                main_litedramcore_steerer1 <= 2'd2;
            end
            if ((main_litedramcore_rdphase == 1'd1)) begin
                main_litedramcore_steerer1 <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            main_litedramcore_steerer1 <= 1'd0;
            if ((main_k7ddrphy_rdphase_storage == 1'd1)) begin
                main_litedramcore_steerer1 <= 2'd2;
            end
            if ((main_litedramcore_nphases == 1'd1)) begin
                main_litedramcore_steerer1 <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_steerer2 <= 2'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            main_litedramcore_steerer2 <= 1'd0;
            if ((main_k7ddrphy_wrphase_storage == 2'd2)) begin
                main_litedramcore_steerer2 <= 2'd2;
            end
            if ((main_litedramcore_rdphase == 2'd2)) begin
                main_litedramcore_steerer2 <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            main_litedramcore_steerer2 <= 1'd0;
            if ((main_k7ddrphy_rdphase_storage == 2'd2)) begin
                main_litedramcore_steerer2 <= 2'd2;
            end
            if ((main_litedramcore_nphases == 2'd2)) begin
                main_litedramcore_steerer2 <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_choose_cmd_want_activates <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            if (1'd0) begin
            end else begin
                main_litedramcore_choose_cmd_want_activates <= main_litedramcore_ras_allowed;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            if (1'd0) begin
            end else begin
                main_litedramcore_choose_cmd_want_activates <= main_litedramcore_ras_allowed;
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_steerer3 <= 2'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            main_litedramcore_steerer3 <= 1'd0;
            if ((main_k7ddrphy_wrphase_storage == 2'd3)) begin
                main_litedramcore_steerer3 <= 2'd2;
            end
            if ((main_litedramcore_rdphase == 2'd3)) begin
                main_litedramcore_steerer3 <= 1'd1;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            main_litedramcore_steerer3 <= 1'd0;
            if ((main_k7ddrphy_rdphase_storage == 2'd3)) begin
                main_litedramcore_steerer3 <= 2'd2;
            end
            if ((main_litedramcore_nphases == 2'd3)) begin
                main_litedramcore_steerer3 <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_en0 <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            main_litedramcore_en0 <= 1'd1;
        end
    endcase
end
always @(*) begin
    main_litedramcore_choose_cmd_cmd_ready <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            if (1'd0) begin
            end else begin
                main_litedramcore_choose_cmd_cmd_ready <= ((~((main_litedramcore_choose_cmd_cmd_payload_ras & (~main_litedramcore_choose_cmd_cmd_payload_cas)) & (~main_litedramcore_choose_cmd_cmd_payload_we))) | main_litedramcore_ras_allowed);
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            if (1'd0) begin
            end else begin
                main_litedramcore_choose_cmd_cmd_ready <= ((~((main_litedramcore_choose_cmd_cmd_payload_ras & (~main_litedramcore_choose_cmd_cmd_payload_cas)) & (~main_litedramcore_choose_cmd_cmd_payload_we))) | main_litedramcore_ras_allowed);
            end
        end
    endcase
end
always @(*) begin
    main_litedramcore_choose_req_want_reads <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            main_litedramcore_choose_req_want_reads <= 1'd1;
        end
    endcase
end
always @(*) begin
    main_litedramcore_en1 <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            main_litedramcore_en1 <= 1'd1;
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_choose_req_want_writes <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            main_litedramcore_choose_req_want_writes <= 1'd1;
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
        end
    endcase
end
always @(*) begin
    main_litedramcore_choose_req_cmd_ready <= 1'd0;
    case (builder_multiplexer_state)
        1'd1: begin
            if (1'd0) begin
                main_litedramcore_choose_req_cmd_ready <= (main_litedramcore_cas_allowed & ((~((main_litedramcore_choose_req_cmd_payload_ras & (~main_litedramcore_choose_req_cmd_payload_cas)) & (~main_litedramcore_choose_req_cmd_payload_we))) | main_litedramcore_ras_allowed));
            end else begin
                main_litedramcore_choose_req_cmd_ready <= main_litedramcore_cas_allowed;
            end
        end
        2'd2: begin
        end
        2'd3: begin
        end
        3'd4: begin
        end
        3'd5: begin
        end
        3'd6: begin
        end
        3'd7: begin
        end
        4'd8: begin
        end
        4'd9: begin
        end
        4'd10: begin
        end
        default: begin
            if (1'd0) begin
                main_litedramcore_choose_req_cmd_ready <= (main_litedramcore_cas_allowed & ((~((main_litedramcore_choose_req_cmd_payload_ras & (~main_litedramcore_choose_req_cmd_payload_cas)) & (~main_litedramcore_choose_req_cmd_payload_we))) | main_litedramcore_ras_allowed));
            end else begin
                main_litedramcore_choose_req_cmd_ready <= main_litedramcore_cas_allowed;
            end
        end
    endcase
end
assign builder_roundrobin0_request = {(((main_user_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((builder_locked0 | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin0_ce = ((~main_litedramcore_interface_bank0_valid) & (~main_litedramcore_interface_bank0_lock));
assign main_litedramcore_interface_bank0_addr = builder_rhs_self12;
assign main_litedramcore_interface_bank0_we = builder_rhs_self13;
assign main_litedramcore_interface_bank0_valid = builder_rhs_self14;
assign builder_roundrobin1_request = {(((main_user_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((builder_locked1 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin1_ce = ((~main_litedramcore_interface_bank1_valid) & (~main_litedramcore_interface_bank1_lock));
assign main_litedramcore_interface_bank1_addr = builder_rhs_self15;
assign main_litedramcore_interface_bank1_we = builder_rhs_self16;
assign main_litedramcore_interface_bank1_valid = builder_rhs_self17;
assign builder_roundrobin2_request = {(((main_user_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((builder_locked2 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin2_ce = ((~main_litedramcore_interface_bank2_valid) & (~main_litedramcore_interface_bank2_lock));
assign main_litedramcore_interface_bank2_addr = builder_rhs_self18;
assign main_litedramcore_interface_bank2_we = builder_rhs_self19;
assign main_litedramcore_interface_bank2_valid = builder_rhs_self20;
assign builder_roundrobin3_request = {(((main_user_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((builder_locked3 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin3_ce = ((~main_litedramcore_interface_bank3_valid) & (~main_litedramcore_interface_bank3_lock));
assign main_litedramcore_interface_bank3_addr = builder_rhs_self21;
assign main_litedramcore_interface_bank3_we = builder_rhs_self22;
assign main_litedramcore_interface_bank3_valid = builder_rhs_self23;
assign builder_roundrobin4_request = {(((main_user_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((builder_locked4 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin4_ce = ((~main_litedramcore_interface_bank4_valid) & (~main_litedramcore_interface_bank4_lock));
assign main_litedramcore_interface_bank4_addr = builder_rhs_self24;
assign main_litedramcore_interface_bank4_we = builder_rhs_self25;
assign main_litedramcore_interface_bank4_valid = builder_rhs_self26;
assign builder_roundrobin5_request = {(((main_user_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((builder_locked5 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin5_ce = ((~main_litedramcore_interface_bank5_valid) & (~main_litedramcore_interface_bank5_lock));
assign main_litedramcore_interface_bank5_addr = builder_rhs_self27;
assign main_litedramcore_interface_bank5_we = builder_rhs_self28;
assign main_litedramcore_interface_bank5_valid = builder_rhs_self29;
assign builder_roundrobin6_request = {(((main_user_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((builder_locked6 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin6_ce = ((~main_litedramcore_interface_bank6_valid) & (~main_litedramcore_interface_bank6_lock));
assign main_litedramcore_interface_bank6_addr = builder_rhs_self30;
assign main_litedramcore_interface_bank6_we = builder_rhs_self31;
assign main_litedramcore_interface_bank6_valid = builder_rhs_self32;
assign builder_roundrobin7_request = {(((main_user_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((builder_locked7 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))))) & main_user_port_cmd_valid)};
assign builder_roundrobin7_ce = ((~main_litedramcore_interface_bank7_valid) & (~main_litedramcore_interface_bank7_lock));
assign main_litedramcore_interface_bank7_addr = builder_rhs_self33;
assign main_litedramcore_interface_bank7_we = builder_rhs_self34;
assign main_litedramcore_interface_bank7_valid = builder_rhs_self35;
assign main_user_port_cmd_ready = ((((((((1'd0 | (((builder_roundrobin0_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((builder_locked0 | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank0_ready)) | (((builder_roundrobin1_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((builder_locked1 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank1_ready)) | (((builder_roundrobin2_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((builder_locked2 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank2_ready)) | (((builder_roundrobin3_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((builder_locked3 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank3_ready)) | (((builder_roundrobin4_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((builder_locked4 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank4_ready)) | (((builder_roundrobin5_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((builder_locked5 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank5_ready)) | (((builder_roundrobin6_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((builder_locked6 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0)))))) & main_litedramcore_interface_bank6_ready)) | (((builder_roundrobin7_grant == 1'd0) & ((main_user_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((builder_locked7 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0)))))) & main_litedramcore_interface_bank7_ready));
assign main_user_port_wdata_ready = builder_new_master_wdata_ready1;
assign main_user_port_rdata_valid = builder_new_master_rdata_valid8;
always @(*) begin
    main_litedramcore_interface_wdata <= 256'd0;
    case ({builder_new_master_wdata_ready1})
        1'd1: begin
            main_litedramcore_interface_wdata <= main_user_port_wdata_payload_data;
        end
        default: begin
            main_litedramcore_interface_wdata <= 1'd0;
        end
    endcase
end
always @(*) begin
    main_litedramcore_interface_wdata_we <= 32'd0;
    case ({builder_new_master_wdata_ready1})
        1'd1: begin
            main_litedramcore_interface_wdata_we <= main_user_port_wdata_payload_we;
        end
        default: begin
            main_litedramcore_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign main_user_port_rdata_payload_data = main_litedramcore_interface_rdata;
assign builder_roundrobin0_grant = 1'd0;
assign builder_roundrobin1_grant = 1'd0;
assign builder_roundrobin2_grant = 1'd0;
assign builder_roundrobin3_grant = 1'd0;
assign builder_roundrobin4_grant = 1'd0;
assign builder_roundrobin5_grant = 1'd0;
assign builder_roundrobin6_grant = 1'd0;
assign builder_roundrobin7_grant = 1'd0;
always @(*) begin
    builder_next_state <= 2'd0;
    builder_next_state <= builder_state;
    case (builder_state)
        1'd1: begin
            builder_next_state <= 2'd2;
        end
        2'd2: begin
            builder_next_state <= 1'd0;
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    builder_interface0_ack <= 1'd0;
    case (builder_state)
        1'd1: begin
        end
        2'd2: begin
            builder_interface0_ack <= 1'd1;
        end
        default: begin
        end
    endcase
end
always @(*) begin
    builder_interface1_dat_w_next_value0 <= 32'd0;
    case (builder_state)
        1'd1: begin
        end
        2'd2: begin
        end
        default: begin
            builder_interface1_dat_w_next_value0 <= builder_interface0_dat_w;
        end
    endcase
end
always @(*) begin
    builder_interface1_dat_w_next_value_ce0 <= 1'd0;
    case (builder_state)
        1'd1: begin
        end
        2'd2: begin
        end
        default: begin
            builder_interface1_dat_w_next_value_ce0 <= 1'd1;
        end
    endcase
end
always @(*) begin
    builder_interface1_adr_next_value1 <= 14'd0;
    case (builder_state)
        1'd1: begin
            builder_interface1_adr_next_value1 <= 1'd0;
        end
        2'd2: begin
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_adr_next_value1 <= builder_interface0_adr;
            end
        end
    endcase
end
always @(*) begin
    builder_interface1_adr_next_value_ce1 <= 1'd0;
    case (builder_state)
        1'd1: begin
            builder_interface1_adr_next_value_ce1 <= 1'd1;
        end
        2'd2: begin
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_adr_next_value_ce1 <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    builder_interface1_re_next_value2 <= 1'd0;
    case (builder_state)
        1'd1: begin
            builder_interface1_re_next_value2 <= 1'd0;
        end
        2'd2: begin
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_re_next_value2 <= ((~builder_interface0_we) & (builder_interface0_sel != 1'd0));
            end
        end
    endcase
end
always @(*) begin
    builder_interface1_re_next_value_ce2 <= 1'd0;
    case (builder_state)
        1'd1: begin
            builder_interface1_re_next_value_ce2 <= 1'd1;
        end
        2'd2: begin
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_re_next_value_ce2 <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    builder_interface1_we_next_value3 <= 1'd0;
    case (builder_state)
        1'd1: begin
            builder_interface1_we_next_value3 <= 1'd0;
        end
        2'd2: begin
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_we_next_value3 <= (builder_interface0_we & (builder_interface0_sel != 1'd0));
            end
        end
    endcase
end
always @(*) begin
    builder_interface0_dat_r <= 32'd0;
    case (builder_state)
        1'd1: begin
        end
        2'd2: begin
            builder_interface0_dat_r <= builder_interface1_dat_r;
        end
        default: begin
        end
    endcase
end
always @(*) begin
    builder_interface1_we_next_value_ce3 <= 1'd0;
    case (builder_state)
        1'd1: begin
            builder_interface1_we_next_value_ce3 <= 1'd1;
        end
        2'd2: begin
        end
        default: begin
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_we_next_value_ce3 <= 1'd1;
            end
        end
    endcase
end
assign builder_csrbank0_sel = (builder_interface0_bank_bus_adr[13:9] == 1'd0);
assign builder_csrbank0_init_done0_r = builder_interface0_bank_bus_dat_w[0];
always @(*) begin
    builder_csrbank0_init_done0_re <= 1'd0;
    if ((builder_csrbank0_sel & (builder_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csrbank0_init_done0_re <= builder_interface0_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank0_init_done0_we <= 1'd0;
    if ((builder_csrbank0_sel & (builder_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csrbank0_init_done0_we <= builder_interface0_bank_bus_re;
    end
end
assign builder_csrbank0_init_error0_r = builder_interface0_bank_bus_dat_w[0];
always @(*) begin
    builder_csrbank0_init_error0_we <= 1'd0;
    if ((builder_csrbank0_sel & (builder_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csrbank0_init_error0_we <= builder_interface0_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank0_init_error0_re <= 1'd0;
    if ((builder_csrbank0_sel & (builder_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csrbank0_init_error0_re <= builder_interface0_bank_bus_we;
    end
end
assign builder_csrbank0_init_done0_w = main_init_done_storage;
assign builder_csrbank0_init_error0_w = main_init_error_storage;
assign builder_csrbank1_sel = (builder_interface1_bank_bus_adr[13:9] == 1'd1);
assign builder_csrbank1_rst0_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csrbank1_rst0_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csrbank1_rst0_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank1_rst0_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csrbank1_rst0_re <= builder_interface1_bank_bus_we;
    end
end
assign builder_csrbank1_dly_sel0_r = builder_interface1_bank_bus_dat_w[3:0];
always @(*) begin
    builder_csrbank1_dly_sel0_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csrbank1_dly_sel0_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank1_dly_sel0_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csrbank1_dly_sel0_we <= builder_interface1_bank_bus_re;
    end
end
assign builder_csrbank1_half_sys8x_taps0_r = builder_interface1_bank_bus_dat_w[4:0];
always @(*) begin
    builder_csrbank1_half_sys8x_taps0_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csrbank1_half_sys8x_taps0_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank1_half_sys8x_taps0_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csrbank1_half_sys8x_taps0_re <= builder_interface1_bank_bus_we;
    end
end
assign builder_csrbank1_wlevel_en0_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csrbank1_wlevel_en0_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csrbank1_wlevel_en0_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank1_wlevel_en0_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csrbank1_wlevel_en0_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_wlevel_strobe_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wlevel_strobe_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd4))) begin
        main_k7ddrphy_wlevel_strobe_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    main_k7ddrphy_wlevel_strobe_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd4))) begin
        main_k7ddrphy_wlevel_strobe_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_cdly_rst_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_cdly_rst_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd5))) begin
        main_k7ddrphy_cdly_rst_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    main_k7ddrphy_cdly_rst_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd5))) begin
        main_k7ddrphy_cdly_rst_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_cdly_inc_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_cdly_inc_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd6))) begin
        main_k7ddrphy_cdly_inc_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_cdly_inc_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd6))) begin
        main_k7ddrphy_cdly_inc_we <= builder_interface1_bank_bus_re;
    end
end
assign main_k7ddrphy_rdly_dq_rst_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_rdly_dq_rst_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd7))) begin
        main_k7ddrphy_rdly_dq_rst_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_rdly_dq_rst_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 3'd7))) begin
        main_k7ddrphy_rdly_dq_rst_we <= builder_interface1_bank_bus_re;
    end
end
assign main_k7ddrphy_rdly_dq_inc_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_rdly_dq_inc_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd8))) begin
        main_k7ddrphy_rdly_dq_inc_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_rdly_dq_inc_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd8))) begin
        main_k7ddrphy_rdly_dq_inc_we <= builder_interface1_bank_bus_re;
    end
end
assign main_k7ddrphy_rdly_dq_bitslip_rst_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd9))) begin
        main_k7ddrphy_rdly_dq_bitslip_rst_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd9))) begin
        main_k7ddrphy_rdly_dq_bitslip_rst_we <= builder_interface1_bank_bus_re;
    end
end
assign main_k7ddrphy_rdly_dq_bitslip_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_rdly_dq_bitslip_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd10))) begin
        main_k7ddrphy_rdly_dq_bitslip_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    main_k7ddrphy_rdly_dq_bitslip_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd10))) begin
        main_k7ddrphy_rdly_dq_bitslip_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_wdly_dq_rst_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wdly_dq_rst_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd11))) begin
        main_k7ddrphy_wdly_dq_rst_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    main_k7ddrphy_wdly_dq_rst_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd11))) begin
        main_k7ddrphy_wdly_dq_rst_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_wdly_dq_inc_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wdly_dq_inc_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd12))) begin
        main_k7ddrphy_wdly_dq_inc_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    main_k7ddrphy_wdly_dq_inc_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd12))) begin
        main_k7ddrphy_wdly_dq_inc_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_wdly_dqs_rst_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wdly_dqs_rst_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd13))) begin
        main_k7ddrphy_wdly_dqs_rst_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    main_k7ddrphy_wdly_dqs_rst_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd13))) begin
        main_k7ddrphy_wdly_dqs_rst_re <= builder_interface1_bank_bus_we;
    end
end
assign main_k7ddrphy_wdly_dqs_inc_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wdly_dqs_inc_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd14))) begin
        main_k7ddrphy_wdly_dqs_inc_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_wdly_dqs_inc_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd14))) begin
        main_k7ddrphy_wdly_dqs_inc_we <= builder_interface1_bank_bus_re;
    end
end
assign main_k7ddrphy_wdly_dq_bitslip_rst_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wdly_dq_bitslip_rst_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd15))) begin
        main_k7ddrphy_wdly_dq_bitslip_rst_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_wdly_dq_bitslip_rst_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 4'd15))) begin
        main_k7ddrphy_wdly_dq_bitslip_rst_we <= builder_interface1_bank_bus_re;
    end
end
assign main_k7ddrphy_wdly_dq_bitslip_r = builder_interface1_bank_bus_dat_w[0];
always @(*) begin
    main_k7ddrphy_wdly_dq_bitslip_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 5'd16))) begin
        main_k7ddrphy_wdly_dq_bitslip_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    main_k7ddrphy_wdly_dq_bitslip_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 5'd16))) begin
        main_k7ddrphy_wdly_dq_bitslip_we <= builder_interface1_bank_bus_re;
    end
end
assign builder_csrbank1_rdphase0_r = builder_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csrbank1_rdphase0_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 5'd17))) begin
        builder_csrbank1_rdphase0_re <= builder_interface1_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank1_rdphase0_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 5'd17))) begin
        builder_csrbank1_rdphase0_we <= builder_interface1_bank_bus_re;
    end
end
assign builder_csrbank1_wrphase0_r = builder_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csrbank1_wrphase0_we <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 5'd18))) begin
        builder_csrbank1_wrphase0_we <= builder_interface1_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank1_wrphase0_re <= 1'd0;
    if ((builder_csrbank1_sel & (builder_interface1_bank_bus_adr[8:0] == 5'd18))) begin
        builder_csrbank1_wrphase0_re <= builder_interface1_bank_bus_we;
    end
end
assign builder_csrbank1_rst0_w = main_k7ddrphy_rst_storage;
assign builder_csrbank1_dly_sel0_w = main_k7ddrphy_dly_sel_storage;
assign builder_csrbank1_half_sys8x_taps0_w = main_k7ddrphy_half_sys8x_taps_storage;
assign builder_csrbank1_wlevel_en0_w = main_k7ddrphy_wlevel_en_storage;
assign builder_csrbank1_rdphase0_w = main_k7ddrphy_rdphase_storage;
assign builder_csrbank1_wrphase0_w = main_k7ddrphy_wrphase_storage;
assign builder_csrbank2_sel = (builder_interface2_bank_bus_adr[13:9] == 2'd2);
assign builder_csrbank2_dfii_control0_r = builder_interface2_bank_bus_dat_w[3:0];
always @(*) begin
    builder_csrbank2_dfii_control0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csrbank2_dfii_control0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_control0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csrbank2_dfii_control0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi0_command0_r = builder_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csrbank2_dfii_pi0_command0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csrbank2_dfii_pi0_command0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_command0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csrbank2_dfii_pi0_command0_re <= builder_interface2_bank_bus_we;
    end
end
assign main_litedramcore_phaseinjector0_command_issue_r = builder_interface2_bank_bus_dat_w[0];
always @(*) begin
    main_litedramcore_phaseinjector0_command_issue_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        main_litedramcore_phaseinjector0_command_issue_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    main_litedramcore_phaseinjector0_command_issue_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        main_litedramcore_phaseinjector0_command_issue_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi0_address0_r = builder_interface2_bank_bus_dat_w[14:0];
always @(*) begin
    builder_csrbank2_dfii_pi0_address0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csrbank2_dfii_pi0_address0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_address0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csrbank2_dfii_pi0_address0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi0_baddress0_r = builder_interface2_bank_bus_dat_w[2:0];
always @(*) begin
    builder_csrbank2_dfii_pi0_baddress0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csrbank2_dfii_pi0_baddress0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_baddress0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csrbank2_dfii_pi0_baddress0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi0_wrdata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi0_wrdata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csrbank2_dfii_pi0_wrdata1_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_wrdata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csrbank2_dfii_pi0_wrdata1_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi0_wrdata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi0_wrdata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csrbank2_dfii_pi0_wrdata0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_wrdata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csrbank2_dfii_pi0_wrdata0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi0_rddata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi0_rddata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csrbank2_dfii_pi0_rddata1_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_rddata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csrbank2_dfii_pi0_rddata1_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi0_rddata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi0_rddata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd8))) begin
        builder_csrbank2_dfii_pi0_rddata0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi0_rddata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd8))) begin
        builder_csrbank2_dfii_pi0_rddata0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi1_command0_r = builder_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csrbank2_dfii_pi1_command0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd9))) begin
        builder_csrbank2_dfii_pi1_command0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_command0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd9))) begin
        builder_csrbank2_dfii_pi1_command0_we <= builder_interface2_bank_bus_re;
    end
end
assign main_litedramcore_phaseinjector1_command_issue_r = builder_interface2_bank_bus_dat_w[0];
always @(*) begin
    main_litedramcore_phaseinjector1_command_issue_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd10))) begin
        main_litedramcore_phaseinjector1_command_issue_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    main_litedramcore_phaseinjector1_command_issue_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd10))) begin
        main_litedramcore_phaseinjector1_command_issue_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi1_address0_r = builder_interface2_bank_bus_dat_w[14:0];
always @(*) begin
    builder_csrbank2_dfii_pi1_address0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd11))) begin
        builder_csrbank2_dfii_pi1_address0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_address0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd11))) begin
        builder_csrbank2_dfii_pi1_address0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi1_baddress0_r = builder_interface2_bank_bus_dat_w[2:0];
always @(*) begin
    builder_csrbank2_dfii_pi1_baddress0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd12))) begin
        builder_csrbank2_dfii_pi1_baddress0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_baddress0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd12))) begin
        builder_csrbank2_dfii_pi1_baddress0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi1_wrdata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi1_wrdata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd13))) begin
        builder_csrbank2_dfii_pi1_wrdata1_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_wrdata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd13))) begin
        builder_csrbank2_dfii_pi1_wrdata1_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi1_wrdata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi1_wrdata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd14))) begin
        builder_csrbank2_dfii_pi1_wrdata0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_wrdata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd14))) begin
        builder_csrbank2_dfii_pi1_wrdata0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi1_rddata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi1_rddata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd15))) begin
        builder_csrbank2_dfii_pi1_rddata1_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_rddata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 4'd15))) begin
        builder_csrbank2_dfii_pi1_rddata1_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi1_rddata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi1_rddata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd16))) begin
        builder_csrbank2_dfii_pi1_rddata0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi1_rddata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd16))) begin
        builder_csrbank2_dfii_pi1_rddata0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi2_command0_r = builder_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csrbank2_dfii_pi2_command0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd17))) begin
        builder_csrbank2_dfii_pi2_command0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_command0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd17))) begin
        builder_csrbank2_dfii_pi2_command0_re <= builder_interface2_bank_bus_we;
    end
end
assign main_litedramcore_phaseinjector2_command_issue_r = builder_interface2_bank_bus_dat_w[0];
always @(*) begin
    main_litedramcore_phaseinjector2_command_issue_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd18))) begin
        main_litedramcore_phaseinjector2_command_issue_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    main_litedramcore_phaseinjector2_command_issue_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd18))) begin
        main_litedramcore_phaseinjector2_command_issue_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi2_address0_r = builder_interface2_bank_bus_dat_w[14:0];
always @(*) begin
    builder_csrbank2_dfii_pi2_address0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd19))) begin
        builder_csrbank2_dfii_pi2_address0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_address0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd19))) begin
        builder_csrbank2_dfii_pi2_address0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi2_baddress0_r = builder_interface2_bank_bus_dat_w[2:0];
always @(*) begin
    builder_csrbank2_dfii_pi2_baddress0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd20))) begin
        builder_csrbank2_dfii_pi2_baddress0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_baddress0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd20))) begin
        builder_csrbank2_dfii_pi2_baddress0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi2_wrdata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi2_wrdata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd21))) begin
        builder_csrbank2_dfii_pi2_wrdata1_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_wrdata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd21))) begin
        builder_csrbank2_dfii_pi2_wrdata1_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi2_wrdata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi2_wrdata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd22))) begin
        builder_csrbank2_dfii_pi2_wrdata0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_wrdata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd22))) begin
        builder_csrbank2_dfii_pi2_wrdata0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi2_rddata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi2_rddata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd23))) begin
        builder_csrbank2_dfii_pi2_rddata1_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_rddata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd23))) begin
        builder_csrbank2_dfii_pi2_rddata1_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi2_rddata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi2_rddata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd24))) begin
        builder_csrbank2_dfii_pi2_rddata0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi2_rddata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd24))) begin
        builder_csrbank2_dfii_pi2_rddata0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi3_command0_r = builder_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csrbank2_dfii_pi3_command0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd25))) begin
        builder_csrbank2_dfii_pi3_command0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_command0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd25))) begin
        builder_csrbank2_dfii_pi3_command0_re <= builder_interface2_bank_bus_we;
    end
end
assign main_litedramcore_phaseinjector3_command_issue_r = builder_interface2_bank_bus_dat_w[0];
always @(*) begin
    main_litedramcore_phaseinjector3_command_issue_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd26))) begin
        main_litedramcore_phaseinjector3_command_issue_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    main_litedramcore_phaseinjector3_command_issue_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd26))) begin
        main_litedramcore_phaseinjector3_command_issue_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi3_address0_r = builder_interface2_bank_bus_dat_w[14:0];
always @(*) begin
    builder_csrbank2_dfii_pi3_address0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd27))) begin
        builder_csrbank2_dfii_pi3_address0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_address0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd27))) begin
        builder_csrbank2_dfii_pi3_address0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi3_baddress0_r = builder_interface2_bank_bus_dat_w[2:0];
always @(*) begin
    builder_csrbank2_dfii_pi3_baddress0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd28))) begin
        builder_csrbank2_dfii_pi3_baddress0_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_baddress0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd28))) begin
        builder_csrbank2_dfii_pi3_baddress0_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi3_wrdata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi3_wrdata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd29))) begin
        builder_csrbank2_dfii_pi3_wrdata1_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_wrdata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd29))) begin
        builder_csrbank2_dfii_pi3_wrdata1_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi3_wrdata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi3_wrdata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd30))) begin
        builder_csrbank2_dfii_pi3_wrdata0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_wrdata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd30))) begin
        builder_csrbank2_dfii_pi3_wrdata0_we <= builder_interface2_bank_bus_re;
    end
end
assign builder_csrbank2_dfii_pi3_rddata1_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi3_rddata1_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd31))) begin
        builder_csrbank2_dfii_pi3_rddata1_we <= builder_interface2_bank_bus_re;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_rddata1_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 5'd31))) begin
        builder_csrbank2_dfii_pi3_rddata1_re <= builder_interface2_bank_bus_we;
    end
end
assign builder_csrbank2_dfii_pi3_rddata0_r = builder_interface2_bank_bus_dat_w;
always @(*) begin
    builder_csrbank2_dfii_pi3_rddata0_re <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 6'd32))) begin
        builder_csrbank2_dfii_pi3_rddata0_re <= builder_interface2_bank_bus_we;
    end
end
always @(*) begin
    builder_csrbank2_dfii_pi3_rddata0_we <= 1'd0;
    if ((builder_csrbank2_sel & (builder_interface2_bank_bus_adr[8:0] == 6'd32))) begin
        builder_csrbank2_dfii_pi3_rddata0_we <= builder_interface2_bank_bus_re;
    end
end
assign main_litedramcore_sel = main_litedramcore_storage[0];
assign main_litedramcore_cke = main_litedramcore_storage[1];
assign main_litedramcore_odt = main_litedramcore_storage[2];
assign main_litedramcore_reset_n = main_litedramcore_storage[3];
assign builder_csrbank2_dfii_control0_w = main_litedramcore_storage;
assign main_litedramcore_phaseinjector0_csrfield_cs = main_litedramcore_phaseinjector0_command_storage[0];
assign main_litedramcore_phaseinjector0_csrfield_we = main_litedramcore_phaseinjector0_command_storage[1];
assign main_litedramcore_phaseinjector0_csrfield_cas = main_litedramcore_phaseinjector0_command_storage[2];
assign main_litedramcore_phaseinjector0_csrfield_ras = main_litedramcore_phaseinjector0_command_storage[3];
assign main_litedramcore_phaseinjector0_csrfield_wren = main_litedramcore_phaseinjector0_command_storage[4];
assign main_litedramcore_phaseinjector0_csrfield_rden = main_litedramcore_phaseinjector0_command_storage[5];
assign main_litedramcore_phaseinjector0_csrfield_cs_top = main_litedramcore_phaseinjector0_command_storage[6];
assign main_litedramcore_phaseinjector0_csrfield_cs_bottom = main_litedramcore_phaseinjector0_command_storage[7];
assign builder_csrbank2_dfii_pi0_command0_w = main_litedramcore_phaseinjector0_command_storage;
assign builder_csrbank2_dfii_pi0_address0_w = main_litedramcore_phaseinjector0_address_storage;
assign builder_csrbank2_dfii_pi0_baddress0_w = main_litedramcore_phaseinjector0_baddress_storage;
assign builder_csrbank2_dfii_pi0_wrdata1_w = main_litedramcore_phaseinjector0_wrdata_storage[63:32];
assign builder_csrbank2_dfii_pi0_wrdata0_w = main_litedramcore_phaseinjector0_wrdata_storage[31:0];
assign builder_csrbank2_dfii_pi0_rddata1_w = main_litedramcore_phaseinjector0_rddata_status[63:32];
assign builder_csrbank2_dfii_pi0_rddata0_w = main_litedramcore_phaseinjector0_rddata_status[31:0];
assign main_litedramcore_phaseinjector0_rddata_we = builder_csrbank2_dfii_pi0_rddata0_we;
assign main_litedramcore_phaseinjector1_csrfield_cs = main_litedramcore_phaseinjector1_command_storage[0];
assign main_litedramcore_phaseinjector1_csrfield_we = main_litedramcore_phaseinjector1_command_storage[1];
assign main_litedramcore_phaseinjector1_csrfield_cas = main_litedramcore_phaseinjector1_command_storage[2];
assign main_litedramcore_phaseinjector1_csrfield_ras = main_litedramcore_phaseinjector1_command_storage[3];
assign main_litedramcore_phaseinjector1_csrfield_wren = main_litedramcore_phaseinjector1_command_storage[4];
assign main_litedramcore_phaseinjector1_csrfield_rden = main_litedramcore_phaseinjector1_command_storage[5];
assign main_litedramcore_phaseinjector1_csrfield_cs_top = main_litedramcore_phaseinjector1_command_storage[6];
assign main_litedramcore_phaseinjector1_csrfield_cs_bottom = main_litedramcore_phaseinjector1_command_storage[7];
assign builder_csrbank2_dfii_pi1_command0_w = main_litedramcore_phaseinjector1_command_storage;
assign builder_csrbank2_dfii_pi1_address0_w = main_litedramcore_phaseinjector1_address_storage;
assign builder_csrbank2_dfii_pi1_baddress0_w = main_litedramcore_phaseinjector1_baddress_storage;
assign builder_csrbank2_dfii_pi1_wrdata1_w = main_litedramcore_phaseinjector1_wrdata_storage[63:32];
assign builder_csrbank2_dfii_pi1_wrdata0_w = main_litedramcore_phaseinjector1_wrdata_storage[31:0];
assign builder_csrbank2_dfii_pi1_rddata1_w = main_litedramcore_phaseinjector1_rddata_status[63:32];
assign builder_csrbank2_dfii_pi1_rddata0_w = main_litedramcore_phaseinjector1_rddata_status[31:0];
assign main_litedramcore_phaseinjector1_rddata_we = builder_csrbank2_dfii_pi1_rddata0_we;
assign main_litedramcore_phaseinjector2_csrfield_cs = main_litedramcore_phaseinjector2_command_storage[0];
assign main_litedramcore_phaseinjector2_csrfield_we = main_litedramcore_phaseinjector2_command_storage[1];
assign main_litedramcore_phaseinjector2_csrfield_cas = main_litedramcore_phaseinjector2_command_storage[2];
assign main_litedramcore_phaseinjector2_csrfield_ras = main_litedramcore_phaseinjector2_command_storage[3];
assign main_litedramcore_phaseinjector2_csrfield_wren = main_litedramcore_phaseinjector2_command_storage[4];
assign main_litedramcore_phaseinjector2_csrfield_rden = main_litedramcore_phaseinjector2_command_storage[5];
assign main_litedramcore_phaseinjector2_csrfield_cs_top = main_litedramcore_phaseinjector2_command_storage[6];
assign main_litedramcore_phaseinjector2_csrfield_cs_bottom = main_litedramcore_phaseinjector2_command_storage[7];
assign builder_csrbank2_dfii_pi2_command0_w = main_litedramcore_phaseinjector2_command_storage;
assign builder_csrbank2_dfii_pi2_address0_w = main_litedramcore_phaseinjector2_address_storage;
assign builder_csrbank2_dfii_pi2_baddress0_w = main_litedramcore_phaseinjector2_baddress_storage;
assign builder_csrbank2_dfii_pi2_wrdata1_w = main_litedramcore_phaseinjector2_wrdata_storage[63:32];
assign builder_csrbank2_dfii_pi2_wrdata0_w = main_litedramcore_phaseinjector2_wrdata_storage[31:0];
assign builder_csrbank2_dfii_pi2_rddata1_w = main_litedramcore_phaseinjector2_rddata_status[63:32];
assign builder_csrbank2_dfii_pi2_rddata0_w = main_litedramcore_phaseinjector2_rddata_status[31:0];
assign main_litedramcore_phaseinjector2_rddata_we = builder_csrbank2_dfii_pi2_rddata0_we;
assign main_litedramcore_phaseinjector3_csrfield_cs = main_litedramcore_phaseinjector3_command_storage[0];
assign main_litedramcore_phaseinjector3_csrfield_we = main_litedramcore_phaseinjector3_command_storage[1];
assign main_litedramcore_phaseinjector3_csrfield_cas = main_litedramcore_phaseinjector3_command_storage[2];
assign main_litedramcore_phaseinjector3_csrfield_ras = main_litedramcore_phaseinjector3_command_storage[3];
assign main_litedramcore_phaseinjector3_csrfield_wren = main_litedramcore_phaseinjector3_command_storage[4];
assign main_litedramcore_phaseinjector3_csrfield_rden = main_litedramcore_phaseinjector3_command_storage[5];
assign main_litedramcore_phaseinjector3_csrfield_cs_top = main_litedramcore_phaseinjector3_command_storage[6];
assign main_litedramcore_phaseinjector3_csrfield_cs_bottom = main_litedramcore_phaseinjector3_command_storage[7];
assign builder_csrbank2_dfii_pi3_command0_w = main_litedramcore_phaseinjector3_command_storage;
assign builder_csrbank2_dfii_pi3_address0_w = main_litedramcore_phaseinjector3_address_storage;
assign builder_csrbank2_dfii_pi3_baddress0_w = main_litedramcore_phaseinjector3_baddress_storage;
assign builder_csrbank2_dfii_pi3_wrdata1_w = main_litedramcore_phaseinjector3_wrdata_storage[63:32];
assign builder_csrbank2_dfii_pi3_wrdata0_w = main_litedramcore_phaseinjector3_wrdata_storage[31:0];
assign builder_csrbank2_dfii_pi3_rddata1_w = main_litedramcore_phaseinjector3_rddata_status[63:32];
assign builder_csrbank2_dfii_pi3_rddata0_w = main_litedramcore_phaseinjector3_rddata_status[31:0];
assign main_litedramcore_phaseinjector3_rddata_we = builder_csrbank2_dfii_pi3_rddata0_we;
assign builder_adr = builder_interface1_adr;
assign builder_re = builder_interface1_re;
assign builder_we = builder_interface1_we;
assign builder_dat_w = builder_interface1_dat_w;
assign builder_interface1_dat_r = builder_dat_r;
assign builder_interface0_bank_bus_adr = builder_adr;
assign builder_interface1_bank_bus_adr = builder_adr;
assign builder_interface2_bank_bus_adr = builder_adr;
assign builder_interface0_bank_bus_re = builder_re;
assign builder_interface1_bank_bus_re = builder_re;
assign builder_interface2_bank_bus_re = builder_re;
assign builder_interface0_bank_bus_we = builder_we;
assign builder_interface1_bank_bus_we = builder_we;
assign builder_interface2_bank_bus_we = builder_we;
assign builder_interface0_bank_bus_dat_w = builder_dat_w;
assign builder_interface1_bank_bus_dat_w = builder_dat_w;
assign builder_interface2_bank_bus_dat_w = builder_dat_w;
assign builder_dat_r = ((builder_interface0_bank_bus_dat_r | builder_interface1_bank_bus_dat_r) | builder_interface2_bank_bus_dat_r);
always @(*) begin
    builder_rhs_self0 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[0];
        end
        1'd1: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[1];
        end
        2'd2: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[2];
        end
        2'd3: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[3];
        end
        3'd4: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[4];
        end
        3'd5: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[5];
        end
        3'd6: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[6];
        end
        default: begin
            builder_rhs_self0 <= main_litedramcore_choose_cmd_valids[7];
        end
    endcase
end
always @(*) begin
    builder_rhs_self1 <= 15'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine6_cmd_payload_a;
        end
        default: begin
            builder_rhs_self1 <= main_litedramcore_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_rhs_self2 <= 3'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine6_cmd_payload_ba;
        end
        default: begin
            builder_rhs_self2 <= main_litedramcore_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_rhs_self3 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            builder_rhs_self3 <= main_litedramcore_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    builder_rhs_self4 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            builder_rhs_self4 <= main_litedramcore_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    builder_rhs_self5 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            builder_rhs_self5 <= main_litedramcore_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    builder_t_self0 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_t_self0 <= main_litedramcore_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            builder_t_self0 <= main_litedramcore_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            builder_t_self0 <= main_litedramcore_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            builder_t_self0 <= main_litedramcore_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            builder_t_self0 <= main_litedramcore_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            builder_t_self0 <= main_litedramcore_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            builder_t_self0 <= main_litedramcore_bankmachine6_cmd_payload_cas;
        end
        default: begin
            builder_t_self0 <= main_litedramcore_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    builder_t_self1 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_t_self1 <= main_litedramcore_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            builder_t_self1 <= main_litedramcore_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            builder_t_self1 <= main_litedramcore_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            builder_t_self1 <= main_litedramcore_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            builder_t_self1 <= main_litedramcore_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            builder_t_self1 <= main_litedramcore_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            builder_t_self1 <= main_litedramcore_bankmachine6_cmd_payload_ras;
        end
        default: begin
            builder_t_self1 <= main_litedramcore_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    builder_t_self2 <= 1'd0;
    case (main_litedramcore_choose_cmd_grant)
        1'd0: begin
            builder_t_self2 <= main_litedramcore_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            builder_t_self2 <= main_litedramcore_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            builder_t_self2 <= main_litedramcore_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            builder_t_self2 <= main_litedramcore_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            builder_t_self2 <= main_litedramcore_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            builder_t_self2 <= main_litedramcore_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            builder_t_self2 <= main_litedramcore_bankmachine6_cmd_payload_we;
        end
        default: begin
            builder_t_self2 <= main_litedramcore_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self6 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[0];
        end
        1'd1: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[1];
        end
        2'd2: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[2];
        end
        2'd3: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[3];
        end
        3'd4: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[4];
        end
        3'd5: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[5];
        end
        3'd6: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[6];
        end
        default: begin
            builder_rhs_self6 <= main_litedramcore_choose_req_valids[7];
        end
    endcase
end
always @(*) begin
    builder_rhs_self7 <= 15'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine6_cmd_payload_a;
        end
        default: begin
            builder_rhs_self7 <= main_litedramcore_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_rhs_self8 <= 3'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine6_cmd_payload_ba;
        end
        default: begin
            builder_rhs_self8 <= main_litedramcore_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_rhs_self9 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            builder_rhs_self9 <= main_litedramcore_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    builder_rhs_self10 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            builder_rhs_self10 <= main_litedramcore_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    builder_rhs_self11 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            builder_rhs_self11 <= main_litedramcore_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    builder_t_self3 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_t_self3 <= main_litedramcore_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            builder_t_self3 <= main_litedramcore_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            builder_t_self3 <= main_litedramcore_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            builder_t_self3 <= main_litedramcore_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            builder_t_self3 <= main_litedramcore_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            builder_t_self3 <= main_litedramcore_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            builder_t_self3 <= main_litedramcore_bankmachine6_cmd_payload_cas;
        end
        default: begin
            builder_t_self3 <= main_litedramcore_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    builder_t_self4 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_t_self4 <= main_litedramcore_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            builder_t_self4 <= main_litedramcore_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            builder_t_self4 <= main_litedramcore_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            builder_t_self4 <= main_litedramcore_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            builder_t_self4 <= main_litedramcore_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            builder_t_self4 <= main_litedramcore_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            builder_t_self4 <= main_litedramcore_bankmachine6_cmd_payload_ras;
        end
        default: begin
            builder_t_self4 <= main_litedramcore_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    builder_t_self5 <= 1'd0;
    case (main_litedramcore_choose_req_grant)
        1'd0: begin
            builder_t_self5 <= main_litedramcore_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            builder_t_self5 <= main_litedramcore_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            builder_t_self5 <= main_litedramcore_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            builder_t_self5 <= main_litedramcore_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            builder_t_self5 <= main_litedramcore_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            builder_t_self5 <= main_litedramcore_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            builder_t_self5 <= main_litedramcore_bankmachine6_cmd_payload_we;
        end
        default: begin
            builder_t_self5 <= main_litedramcore_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self12 <= 22'd0;
    case (builder_roundrobin0_grant)
        default: begin
            builder_rhs_self12 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self13 <= 1'd0;
    case (builder_roundrobin0_grant)
        default: begin
            builder_rhs_self13 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self14 <= 1'd0;
    case (builder_roundrobin0_grant)
        default: begin
            builder_rhs_self14 <= (((main_user_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((builder_locked0 | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self15 <= 22'd0;
    case (builder_roundrobin1_grant)
        default: begin
            builder_rhs_self15 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self16 <= 1'd0;
    case (builder_roundrobin1_grant)
        default: begin
            builder_rhs_self16 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self17 <= 1'd0;
    case (builder_roundrobin1_grant)
        default: begin
            builder_rhs_self17 <= (((main_user_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((builder_locked1 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self18 <= 22'd0;
    case (builder_roundrobin2_grant)
        default: begin
            builder_rhs_self18 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self19 <= 1'd0;
    case (builder_roundrobin2_grant)
        default: begin
            builder_rhs_self19 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self20 <= 1'd0;
    case (builder_roundrobin2_grant)
        default: begin
            builder_rhs_self20 <= (((main_user_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((builder_locked2 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self21 <= 22'd0;
    case (builder_roundrobin3_grant)
        default: begin
            builder_rhs_self21 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self22 <= 1'd0;
    case (builder_roundrobin3_grant)
        default: begin
            builder_rhs_self22 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self23 <= 1'd0;
    case (builder_roundrobin3_grant)
        default: begin
            builder_rhs_self23 <= (((main_user_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((builder_locked3 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self24 <= 22'd0;
    case (builder_roundrobin4_grant)
        default: begin
            builder_rhs_self24 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self25 <= 1'd0;
    case (builder_roundrobin4_grant)
        default: begin
            builder_rhs_self25 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self26 <= 1'd0;
    case (builder_roundrobin4_grant)
        default: begin
            builder_rhs_self26 <= (((main_user_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((builder_locked4 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self27 <= 22'd0;
    case (builder_roundrobin5_grant)
        default: begin
            builder_rhs_self27 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self28 <= 1'd0;
    case (builder_roundrobin5_grant)
        default: begin
            builder_rhs_self28 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self29 <= 1'd0;
    case (builder_roundrobin5_grant)
        default: begin
            builder_rhs_self29 <= (((main_user_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((builder_locked5 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self30 <= 22'd0;
    case (builder_roundrobin6_grant)
        default: begin
            builder_rhs_self30 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self31 <= 1'd0;
    case (builder_roundrobin6_grant)
        default: begin
            builder_rhs_self31 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self32 <= 1'd0;
    case (builder_roundrobin6_grant)
        default: begin
            builder_rhs_self32 <= (((main_user_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((builder_locked6 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank7_lock & (builder_roundrobin7_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_rhs_self33 <= 22'd0;
    case (builder_roundrobin7_grant)
        default: begin
            builder_rhs_self33 <= {main_user_port_cmd_payload_addr[24:10], main_user_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    builder_rhs_self34 <= 1'd0;
    case (builder_roundrobin7_grant)
        default: begin
            builder_rhs_self34 <= main_user_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_rhs_self35 <= 1'd0;
    case (builder_roundrobin7_grant)
        default: begin
            builder_rhs_self35 <= (((main_user_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((builder_locked7 | (main_litedramcore_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (main_litedramcore_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (main_litedramcore_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (main_litedramcore_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))) | (main_litedramcore_interface_bank4_lock & (builder_roundrobin4_grant == 1'd0))) | (main_litedramcore_interface_bank5_lock & (builder_roundrobin5_grant == 1'd0))) | (main_litedramcore_interface_bank6_lock & (builder_roundrobin6_grant == 1'd0))))) & main_user_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_self0 <= 3'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self0 <= main_litedramcore_nop_ba;
        end
        1'd1: begin
            builder_self0 <= main_litedramcore_choose_cmd_cmd_payload_ba;
        end
        2'd2: begin
            builder_self0 <= main_litedramcore_choose_req_cmd_payload_ba;
        end
        default: begin
            builder_self0 <= main_litedramcore_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_self1 <= 15'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self1 <= main_litedramcore_nop_a;
        end
        1'd1: begin
            builder_self1 <= main_litedramcore_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            builder_self1 <= main_litedramcore_choose_req_cmd_payload_a;
        end
        default: begin
            builder_self1 <= main_litedramcore_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_self2 <= 1'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self2 <= 1'd0;
        end
        1'd1: begin
            builder_self2 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            builder_self2 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_cas);
        end
        default: begin
            builder_self2 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    builder_self3 <= 1'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self3 <= 1'd0;
        end
        1'd1: begin
            builder_self3 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            builder_self3 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_ras);
        end
        default: begin
            builder_self3 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    builder_self4 <= 1'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self4 <= 1'd0;
        end
        1'd1: begin
            builder_self4 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            builder_self4 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_we);
        end
        default: begin
            builder_self4 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    builder_self5 <= 1'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self5 <= 1'd0;
        end
        1'd1: begin
            builder_self5 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            builder_self5 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_read);
        end
        default: begin
            builder_self5 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    builder_self6 <= 1'd0;
    case (main_litedramcore_steerer0)
        1'd0: begin
            builder_self6 <= 1'd0;
        end
        1'd1: begin
            builder_self6 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            builder_self6 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_write);
        end
        default: begin
            builder_self6 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    builder_self7 <= 3'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self7 <= main_litedramcore_nop_ba;
        end
        1'd1: begin
            builder_self7 <= main_litedramcore_choose_cmd_cmd_payload_ba;
        end
        2'd2: begin
            builder_self7 <= main_litedramcore_choose_req_cmd_payload_ba;
        end
        default: begin
            builder_self7 <= main_litedramcore_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_self8 <= 15'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self8 <= main_litedramcore_nop_a;
        end
        1'd1: begin
            builder_self8 <= main_litedramcore_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            builder_self8 <= main_litedramcore_choose_req_cmd_payload_a;
        end
        default: begin
            builder_self8 <= main_litedramcore_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_self9 <= 1'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self9 <= 1'd0;
        end
        1'd1: begin
            builder_self9 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            builder_self9 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_cas);
        end
        default: begin
            builder_self9 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    builder_self10 <= 1'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self10 <= 1'd0;
        end
        1'd1: begin
            builder_self10 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            builder_self10 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_ras);
        end
        default: begin
            builder_self10 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    builder_self11 <= 1'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self11 <= 1'd0;
        end
        1'd1: begin
            builder_self11 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            builder_self11 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_we);
        end
        default: begin
            builder_self11 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    builder_self12 <= 1'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self12 <= 1'd0;
        end
        1'd1: begin
            builder_self12 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            builder_self12 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_read);
        end
        default: begin
            builder_self12 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    builder_self13 <= 1'd0;
    case (main_litedramcore_steerer1)
        1'd0: begin
            builder_self13 <= 1'd0;
        end
        1'd1: begin
            builder_self13 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            builder_self13 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_write);
        end
        default: begin
            builder_self13 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    builder_self14 <= 3'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self14 <= main_litedramcore_nop_ba;
        end
        1'd1: begin
            builder_self14 <= main_litedramcore_choose_cmd_cmd_payload_ba;
        end
        2'd2: begin
            builder_self14 <= main_litedramcore_choose_req_cmd_payload_ba;
        end
        default: begin
            builder_self14 <= main_litedramcore_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_self15 <= 15'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self15 <= main_litedramcore_nop_a;
        end
        1'd1: begin
            builder_self15 <= main_litedramcore_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            builder_self15 <= main_litedramcore_choose_req_cmd_payload_a;
        end
        default: begin
            builder_self15 <= main_litedramcore_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_self16 <= 1'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self16 <= 1'd0;
        end
        1'd1: begin
            builder_self16 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            builder_self16 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_cas);
        end
        default: begin
            builder_self16 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    builder_self17 <= 1'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self17 <= 1'd0;
        end
        1'd1: begin
            builder_self17 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            builder_self17 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_ras);
        end
        default: begin
            builder_self17 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    builder_self18 <= 1'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self18 <= 1'd0;
        end
        1'd1: begin
            builder_self18 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            builder_self18 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_we);
        end
        default: begin
            builder_self18 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    builder_self19 <= 1'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self19 <= 1'd0;
        end
        1'd1: begin
            builder_self19 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            builder_self19 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_read);
        end
        default: begin
            builder_self19 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    builder_self20 <= 1'd0;
    case (main_litedramcore_steerer2)
        1'd0: begin
            builder_self20 <= 1'd0;
        end
        1'd1: begin
            builder_self20 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            builder_self20 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_write);
        end
        default: begin
            builder_self20 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    builder_self21 <= 3'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self21 <= main_litedramcore_nop_ba;
        end
        1'd1: begin
            builder_self21 <= main_litedramcore_choose_cmd_cmd_payload_ba;
        end
        2'd2: begin
            builder_self21 <= main_litedramcore_choose_req_cmd_payload_ba;
        end
        default: begin
            builder_self21 <= main_litedramcore_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_self22 <= 15'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self22 <= main_litedramcore_nop_a;
        end
        1'd1: begin
            builder_self22 <= main_litedramcore_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            builder_self22 <= main_litedramcore_choose_req_cmd_payload_a;
        end
        default: begin
            builder_self22 <= main_litedramcore_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_self23 <= 1'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self23 <= 1'd0;
        end
        1'd1: begin
            builder_self23 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            builder_self23 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_cas);
        end
        default: begin
            builder_self23 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    builder_self24 <= 1'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self24 <= 1'd0;
        end
        1'd1: begin
            builder_self24 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            builder_self24 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_ras);
        end
        default: begin
            builder_self24 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    builder_self25 <= 1'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self25 <= 1'd0;
        end
        1'd1: begin
            builder_self25 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            builder_self25 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_we);
        end
        default: begin
            builder_self25 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    builder_self26 <= 1'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self26 <= 1'd0;
        end
        1'd1: begin
            builder_self26 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            builder_self26 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_read);
        end
        default: begin
            builder_self26 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    builder_self27 <= 1'd0;
    case (main_litedramcore_steerer3)
        1'd0: begin
            builder_self27 <= 1'd0;
        end
        1'd1: begin
            builder_self27 <= ((main_litedramcore_choose_cmd_cmd_valid & main_litedramcore_choose_cmd_cmd_ready) & main_litedramcore_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            builder_self27 <= ((main_litedramcore_choose_req_cmd_valid & main_litedramcore_choose_req_cmd_ready) & main_litedramcore_choose_req_cmd_payload_is_write);
        end
        default: begin
            builder_self27 <= ((main_litedramcore_cmd_valid & main_litedramcore_cmd_ready) & main_litedramcore_cmd_payload_is_write);
        end
    endcase
end
assign builder_xilinxasyncresetsynchronizerimpl0 = (~main_locked);
assign builder_xilinxasyncresetsynchronizerimpl1 = (~main_locked);
assign builder_xilinxasyncresetsynchronizerimpl2 = (~main_locked);
assign builder_xilinxasyncresetsynchronizerimpl3 = (~main_locked);


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge iodelay_clk) begin
    if ((main_reset_counter != 1'd0)) begin
        main_reset_counter <= (main_reset_counter - 1'd1);
    end else begin
        main_ic_reset <= 1'd0;
    end
    if (iodelay_rst) begin
        main_reset_counter <= 4'd15;
        main_ic_reset <= 1'd1;
    end
end

always @(posedge sys_clk) begin
    main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= main_k7ddrphy_dqs_oe_delay_tappeddelayline;
    main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0;
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip0_value0 <= (main_k7ddrphy_bitslip0_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip0_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip0_r0 <= {main_k7ddrphy_dqspattern_o, main_k7ddrphy_bitslip0_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip1_value0 <= (main_k7ddrphy_bitslip1_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip1_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip1_r0 <= {main_k7ddrphy_dqspattern_o, main_k7ddrphy_bitslip1_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip2_value0 <= (main_k7ddrphy_bitslip2_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip2_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip2_r0 <= {main_k7ddrphy_dqspattern_o, main_k7ddrphy_bitslip2_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip3_value0 <= (main_k7ddrphy_bitslip3_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip3_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip3_r0 <= {main_k7ddrphy_dqspattern_o, main_k7ddrphy_bitslip3_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip0_value1 <= (main_k7ddrphy_bitslip0_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip0_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip0_r1 <= {{main_k7ddrphy_dfi_p3_wrdata_mask[4], main_k7ddrphy_dfi_p3_wrdata_mask[0], main_k7ddrphy_dfi_p2_wrdata_mask[4], main_k7ddrphy_dfi_p2_wrdata_mask[0], main_k7ddrphy_dfi_p1_wrdata_mask[4], main_k7ddrphy_dfi_p1_wrdata_mask[0], main_k7ddrphy_dfi_p0_wrdata_mask[4], main_k7ddrphy_dfi_p0_wrdata_mask[0]}, main_k7ddrphy_bitslip0_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip1_value1 <= (main_k7ddrphy_bitslip1_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip1_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip1_r1 <= {{main_k7ddrphy_dfi_p3_wrdata_mask[5], main_k7ddrphy_dfi_p3_wrdata_mask[1], main_k7ddrphy_dfi_p2_wrdata_mask[5], main_k7ddrphy_dfi_p2_wrdata_mask[1], main_k7ddrphy_dfi_p1_wrdata_mask[5], main_k7ddrphy_dfi_p1_wrdata_mask[1], main_k7ddrphy_dfi_p0_wrdata_mask[5], main_k7ddrphy_dfi_p0_wrdata_mask[1]}, main_k7ddrphy_bitslip1_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip2_value1 <= (main_k7ddrphy_bitslip2_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip2_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip2_r1 <= {{main_k7ddrphy_dfi_p3_wrdata_mask[6], main_k7ddrphy_dfi_p3_wrdata_mask[2], main_k7ddrphy_dfi_p2_wrdata_mask[6], main_k7ddrphy_dfi_p2_wrdata_mask[2], main_k7ddrphy_dfi_p1_wrdata_mask[6], main_k7ddrphy_dfi_p1_wrdata_mask[2], main_k7ddrphy_dfi_p0_wrdata_mask[6], main_k7ddrphy_dfi_p0_wrdata_mask[2]}, main_k7ddrphy_bitslip2_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip3_value1 <= (main_k7ddrphy_bitslip3_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip3_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip3_r1 <= {{main_k7ddrphy_dfi_p3_wrdata_mask[7], main_k7ddrphy_dfi_p3_wrdata_mask[3], main_k7ddrphy_dfi_p2_wrdata_mask[7], main_k7ddrphy_dfi_p2_wrdata_mask[3], main_k7ddrphy_dfi_p1_wrdata_mask[7], main_k7ddrphy_dfi_p1_wrdata_mask[3], main_k7ddrphy_dfi_p0_wrdata_mask[7], main_k7ddrphy_dfi_p0_wrdata_mask[3]}, main_k7ddrphy_bitslip3_r1[15:8]};
    main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= main_k7ddrphy_dq_oe_delay_tappeddelayline;
    main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0;
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip0_value2 <= (main_k7ddrphy_bitslip0_value2 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip0_value2 <= 3'd7;
    end
    main_k7ddrphy_bitslip0_r2 <= {{main_k7ddrphy_dfi_p3_wrdata[32], main_k7ddrphy_dfi_p3_wrdata[0], main_k7ddrphy_dfi_p2_wrdata[32], main_k7ddrphy_dfi_p2_wrdata[0], main_k7ddrphy_dfi_p1_wrdata[32], main_k7ddrphy_dfi_p1_wrdata[0], main_k7ddrphy_dfi_p0_wrdata[32], main_k7ddrphy_dfi_p0_wrdata[0]}, main_k7ddrphy_bitslip0_r2[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip0_value3 <= (main_k7ddrphy_bitslip0_value3 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip0_value3 <= 3'd7;
    end
    main_k7ddrphy_bitslip0_r3 <= {main_k7ddrphy_bitslip03, main_k7ddrphy_bitslip0_r3[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip1_value2 <= (main_k7ddrphy_bitslip1_value2 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip1_value2 <= 3'd7;
    end
    main_k7ddrphy_bitslip1_r2 <= {{main_k7ddrphy_dfi_p3_wrdata[33], main_k7ddrphy_dfi_p3_wrdata[1], main_k7ddrphy_dfi_p2_wrdata[33], main_k7ddrphy_dfi_p2_wrdata[1], main_k7ddrphy_dfi_p1_wrdata[33], main_k7ddrphy_dfi_p1_wrdata[1], main_k7ddrphy_dfi_p0_wrdata[33], main_k7ddrphy_dfi_p0_wrdata[1]}, main_k7ddrphy_bitslip1_r2[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip1_value3 <= (main_k7ddrphy_bitslip1_value3 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip1_value3 <= 3'd7;
    end
    main_k7ddrphy_bitslip1_r3 <= {main_k7ddrphy_bitslip13, main_k7ddrphy_bitslip1_r3[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip2_value2 <= (main_k7ddrphy_bitslip2_value2 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip2_value2 <= 3'd7;
    end
    main_k7ddrphy_bitslip2_r2 <= {{main_k7ddrphy_dfi_p3_wrdata[34], main_k7ddrphy_dfi_p3_wrdata[2], main_k7ddrphy_dfi_p2_wrdata[34], main_k7ddrphy_dfi_p2_wrdata[2], main_k7ddrphy_dfi_p1_wrdata[34], main_k7ddrphy_dfi_p1_wrdata[2], main_k7ddrphy_dfi_p0_wrdata[34], main_k7ddrphy_dfi_p0_wrdata[2]}, main_k7ddrphy_bitslip2_r2[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip2_value3 <= (main_k7ddrphy_bitslip2_value3 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip2_value3 <= 3'd7;
    end
    main_k7ddrphy_bitslip2_r3 <= {main_k7ddrphy_bitslip23, main_k7ddrphy_bitslip2_r3[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip3_value2 <= (main_k7ddrphy_bitslip3_value2 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip3_value2 <= 3'd7;
    end
    main_k7ddrphy_bitslip3_r2 <= {{main_k7ddrphy_dfi_p3_wrdata[35], main_k7ddrphy_dfi_p3_wrdata[3], main_k7ddrphy_dfi_p2_wrdata[35], main_k7ddrphy_dfi_p2_wrdata[3], main_k7ddrphy_dfi_p1_wrdata[35], main_k7ddrphy_dfi_p1_wrdata[3], main_k7ddrphy_dfi_p0_wrdata[35], main_k7ddrphy_dfi_p0_wrdata[3]}, main_k7ddrphy_bitslip3_r2[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip3_value3 <= (main_k7ddrphy_bitslip3_value3 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip3_value3 <= 3'd7;
    end
    main_k7ddrphy_bitslip3_r3 <= {main_k7ddrphy_bitslip33, main_k7ddrphy_bitslip3_r3[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip4_value0 <= (main_k7ddrphy_bitslip4_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip4_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip4_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[36], main_k7ddrphy_dfi_p3_wrdata[4], main_k7ddrphy_dfi_p2_wrdata[36], main_k7ddrphy_dfi_p2_wrdata[4], main_k7ddrphy_dfi_p1_wrdata[36], main_k7ddrphy_dfi_p1_wrdata[4], main_k7ddrphy_dfi_p0_wrdata[36], main_k7ddrphy_dfi_p0_wrdata[4]}, main_k7ddrphy_bitslip4_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip4_value1 <= (main_k7ddrphy_bitslip4_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip4_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip4_r1 <= {main_k7ddrphy_bitslip41, main_k7ddrphy_bitslip4_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip5_value0 <= (main_k7ddrphy_bitslip5_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip5_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip5_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[37], main_k7ddrphy_dfi_p3_wrdata[5], main_k7ddrphy_dfi_p2_wrdata[37], main_k7ddrphy_dfi_p2_wrdata[5], main_k7ddrphy_dfi_p1_wrdata[37], main_k7ddrphy_dfi_p1_wrdata[5], main_k7ddrphy_dfi_p0_wrdata[37], main_k7ddrphy_dfi_p0_wrdata[5]}, main_k7ddrphy_bitslip5_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip5_value1 <= (main_k7ddrphy_bitslip5_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip5_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip5_r1 <= {main_k7ddrphy_bitslip51, main_k7ddrphy_bitslip5_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip6_value0 <= (main_k7ddrphy_bitslip6_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip6_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip6_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[38], main_k7ddrphy_dfi_p3_wrdata[6], main_k7ddrphy_dfi_p2_wrdata[38], main_k7ddrphy_dfi_p2_wrdata[6], main_k7ddrphy_dfi_p1_wrdata[38], main_k7ddrphy_dfi_p1_wrdata[6], main_k7ddrphy_dfi_p0_wrdata[38], main_k7ddrphy_dfi_p0_wrdata[6]}, main_k7ddrphy_bitslip6_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip6_value1 <= (main_k7ddrphy_bitslip6_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip6_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip6_r1 <= {main_k7ddrphy_bitslip61, main_k7ddrphy_bitslip6_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip7_value0 <= (main_k7ddrphy_bitslip7_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip7_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip7_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[39], main_k7ddrphy_dfi_p3_wrdata[7], main_k7ddrphy_dfi_p2_wrdata[39], main_k7ddrphy_dfi_p2_wrdata[7], main_k7ddrphy_dfi_p1_wrdata[39], main_k7ddrphy_dfi_p1_wrdata[7], main_k7ddrphy_dfi_p0_wrdata[39], main_k7ddrphy_dfi_p0_wrdata[7]}, main_k7ddrphy_bitslip7_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip7_value1 <= (main_k7ddrphy_bitslip7_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip7_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip7_r1 <= {main_k7ddrphy_bitslip71, main_k7ddrphy_bitslip7_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip8_value0 <= (main_k7ddrphy_bitslip8_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip8_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip8_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[40], main_k7ddrphy_dfi_p3_wrdata[8], main_k7ddrphy_dfi_p2_wrdata[40], main_k7ddrphy_dfi_p2_wrdata[8], main_k7ddrphy_dfi_p1_wrdata[40], main_k7ddrphy_dfi_p1_wrdata[8], main_k7ddrphy_dfi_p0_wrdata[40], main_k7ddrphy_dfi_p0_wrdata[8]}, main_k7ddrphy_bitslip8_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip8_value1 <= (main_k7ddrphy_bitslip8_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip8_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip8_r1 <= {main_k7ddrphy_bitslip81, main_k7ddrphy_bitslip8_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip9_value0 <= (main_k7ddrphy_bitslip9_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip9_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip9_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[41], main_k7ddrphy_dfi_p3_wrdata[9], main_k7ddrphy_dfi_p2_wrdata[41], main_k7ddrphy_dfi_p2_wrdata[9], main_k7ddrphy_dfi_p1_wrdata[41], main_k7ddrphy_dfi_p1_wrdata[9], main_k7ddrphy_dfi_p0_wrdata[41], main_k7ddrphy_dfi_p0_wrdata[9]}, main_k7ddrphy_bitslip9_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip9_value1 <= (main_k7ddrphy_bitslip9_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip9_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip9_r1 <= {main_k7ddrphy_bitslip91, main_k7ddrphy_bitslip9_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip10_value0 <= (main_k7ddrphy_bitslip10_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip10_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip10_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[42], main_k7ddrphy_dfi_p3_wrdata[10], main_k7ddrphy_dfi_p2_wrdata[42], main_k7ddrphy_dfi_p2_wrdata[10], main_k7ddrphy_dfi_p1_wrdata[42], main_k7ddrphy_dfi_p1_wrdata[10], main_k7ddrphy_dfi_p0_wrdata[42], main_k7ddrphy_dfi_p0_wrdata[10]}, main_k7ddrphy_bitslip10_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip10_value1 <= (main_k7ddrphy_bitslip10_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip10_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip10_r1 <= {main_k7ddrphy_bitslip101, main_k7ddrphy_bitslip10_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip11_value0 <= (main_k7ddrphy_bitslip11_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip11_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip11_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[43], main_k7ddrphy_dfi_p3_wrdata[11], main_k7ddrphy_dfi_p2_wrdata[43], main_k7ddrphy_dfi_p2_wrdata[11], main_k7ddrphy_dfi_p1_wrdata[43], main_k7ddrphy_dfi_p1_wrdata[11], main_k7ddrphy_dfi_p0_wrdata[43], main_k7ddrphy_dfi_p0_wrdata[11]}, main_k7ddrphy_bitslip11_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip11_value1 <= (main_k7ddrphy_bitslip11_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip11_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip11_r1 <= {main_k7ddrphy_bitslip111, main_k7ddrphy_bitslip11_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip12_value0 <= (main_k7ddrphy_bitslip12_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip12_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip12_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[44], main_k7ddrphy_dfi_p3_wrdata[12], main_k7ddrphy_dfi_p2_wrdata[44], main_k7ddrphy_dfi_p2_wrdata[12], main_k7ddrphy_dfi_p1_wrdata[44], main_k7ddrphy_dfi_p1_wrdata[12], main_k7ddrphy_dfi_p0_wrdata[44], main_k7ddrphy_dfi_p0_wrdata[12]}, main_k7ddrphy_bitslip12_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip12_value1 <= (main_k7ddrphy_bitslip12_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip12_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip12_r1 <= {main_k7ddrphy_bitslip121, main_k7ddrphy_bitslip12_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip13_value0 <= (main_k7ddrphy_bitslip13_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip13_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip13_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[45], main_k7ddrphy_dfi_p3_wrdata[13], main_k7ddrphy_dfi_p2_wrdata[45], main_k7ddrphy_dfi_p2_wrdata[13], main_k7ddrphy_dfi_p1_wrdata[45], main_k7ddrphy_dfi_p1_wrdata[13], main_k7ddrphy_dfi_p0_wrdata[45], main_k7ddrphy_dfi_p0_wrdata[13]}, main_k7ddrphy_bitslip13_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip13_value1 <= (main_k7ddrphy_bitslip13_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip13_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip13_r1 <= {main_k7ddrphy_bitslip131, main_k7ddrphy_bitslip13_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip14_value0 <= (main_k7ddrphy_bitslip14_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip14_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip14_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[46], main_k7ddrphy_dfi_p3_wrdata[14], main_k7ddrphy_dfi_p2_wrdata[46], main_k7ddrphy_dfi_p2_wrdata[14], main_k7ddrphy_dfi_p1_wrdata[46], main_k7ddrphy_dfi_p1_wrdata[14], main_k7ddrphy_dfi_p0_wrdata[46], main_k7ddrphy_dfi_p0_wrdata[14]}, main_k7ddrphy_bitslip14_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip14_value1 <= (main_k7ddrphy_bitslip14_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip14_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip14_r1 <= {main_k7ddrphy_bitslip141, main_k7ddrphy_bitslip14_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip15_value0 <= (main_k7ddrphy_bitslip15_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip15_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip15_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[47], main_k7ddrphy_dfi_p3_wrdata[15], main_k7ddrphy_dfi_p2_wrdata[47], main_k7ddrphy_dfi_p2_wrdata[15], main_k7ddrphy_dfi_p1_wrdata[47], main_k7ddrphy_dfi_p1_wrdata[15], main_k7ddrphy_dfi_p0_wrdata[47], main_k7ddrphy_dfi_p0_wrdata[15]}, main_k7ddrphy_bitslip15_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip15_value1 <= (main_k7ddrphy_bitslip15_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip15_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip15_r1 <= {main_k7ddrphy_bitslip151, main_k7ddrphy_bitslip15_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip16_value0 <= (main_k7ddrphy_bitslip16_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip16_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip16_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[48], main_k7ddrphy_dfi_p3_wrdata[16], main_k7ddrphy_dfi_p2_wrdata[48], main_k7ddrphy_dfi_p2_wrdata[16], main_k7ddrphy_dfi_p1_wrdata[48], main_k7ddrphy_dfi_p1_wrdata[16], main_k7ddrphy_dfi_p0_wrdata[48], main_k7ddrphy_dfi_p0_wrdata[16]}, main_k7ddrphy_bitslip16_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip16_value1 <= (main_k7ddrphy_bitslip16_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip16_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip16_r1 <= {main_k7ddrphy_bitslip161, main_k7ddrphy_bitslip16_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip17_value0 <= (main_k7ddrphy_bitslip17_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip17_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip17_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[49], main_k7ddrphy_dfi_p3_wrdata[17], main_k7ddrphy_dfi_p2_wrdata[49], main_k7ddrphy_dfi_p2_wrdata[17], main_k7ddrphy_dfi_p1_wrdata[49], main_k7ddrphy_dfi_p1_wrdata[17], main_k7ddrphy_dfi_p0_wrdata[49], main_k7ddrphy_dfi_p0_wrdata[17]}, main_k7ddrphy_bitslip17_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip17_value1 <= (main_k7ddrphy_bitslip17_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip17_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip17_r1 <= {main_k7ddrphy_bitslip171, main_k7ddrphy_bitslip17_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip18_value0 <= (main_k7ddrphy_bitslip18_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip18_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip18_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[50], main_k7ddrphy_dfi_p3_wrdata[18], main_k7ddrphy_dfi_p2_wrdata[50], main_k7ddrphy_dfi_p2_wrdata[18], main_k7ddrphy_dfi_p1_wrdata[50], main_k7ddrphy_dfi_p1_wrdata[18], main_k7ddrphy_dfi_p0_wrdata[50], main_k7ddrphy_dfi_p0_wrdata[18]}, main_k7ddrphy_bitslip18_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip18_value1 <= (main_k7ddrphy_bitslip18_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip18_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip18_r1 <= {main_k7ddrphy_bitslip181, main_k7ddrphy_bitslip18_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip19_value0 <= (main_k7ddrphy_bitslip19_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip19_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip19_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[51], main_k7ddrphy_dfi_p3_wrdata[19], main_k7ddrphy_dfi_p2_wrdata[51], main_k7ddrphy_dfi_p2_wrdata[19], main_k7ddrphy_dfi_p1_wrdata[51], main_k7ddrphy_dfi_p1_wrdata[19], main_k7ddrphy_dfi_p0_wrdata[51], main_k7ddrphy_dfi_p0_wrdata[19]}, main_k7ddrphy_bitslip19_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip19_value1 <= (main_k7ddrphy_bitslip19_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip19_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip19_r1 <= {main_k7ddrphy_bitslip191, main_k7ddrphy_bitslip19_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip20_value0 <= (main_k7ddrphy_bitslip20_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip20_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip20_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[52], main_k7ddrphy_dfi_p3_wrdata[20], main_k7ddrphy_dfi_p2_wrdata[52], main_k7ddrphy_dfi_p2_wrdata[20], main_k7ddrphy_dfi_p1_wrdata[52], main_k7ddrphy_dfi_p1_wrdata[20], main_k7ddrphy_dfi_p0_wrdata[52], main_k7ddrphy_dfi_p0_wrdata[20]}, main_k7ddrphy_bitslip20_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip20_value1 <= (main_k7ddrphy_bitslip20_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip20_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip20_r1 <= {main_k7ddrphy_bitslip201, main_k7ddrphy_bitslip20_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip21_value0 <= (main_k7ddrphy_bitslip21_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip21_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip21_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[53], main_k7ddrphy_dfi_p3_wrdata[21], main_k7ddrphy_dfi_p2_wrdata[53], main_k7ddrphy_dfi_p2_wrdata[21], main_k7ddrphy_dfi_p1_wrdata[53], main_k7ddrphy_dfi_p1_wrdata[21], main_k7ddrphy_dfi_p0_wrdata[53], main_k7ddrphy_dfi_p0_wrdata[21]}, main_k7ddrphy_bitslip21_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip21_value1 <= (main_k7ddrphy_bitslip21_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip21_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip21_r1 <= {main_k7ddrphy_bitslip211, main_k7ddrphy_bitslip21_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip22_value0 <= (main_k7ddrphy_bitslip22_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip22_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip22_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[54], main_k7ddrphy_dfi_p3_wrdata[22], main_k7ddrphy_dfi_p2_wrdata[54], main_k7ddrphy_dfi_p2_wrdata[22], main_k7ddrphy_dfi_p1_wrdata[54], main_k7ddrphy_dfi_p1_wrdata[22], main_k7ddrphy_dfi_p0_wrdata[54], main_k7ddrphy_dfi_p0_wrdata[22]}, main_k7ddrphy_bitslip22_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip22_value1 <= (main_k7ddrphy_bitslip22_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip22_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip22_r1 <= {main_k7ddrphy_bitslip221, main_k7ddrphy_bitslip22_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip23_value0 <= (main_k7ddrphy_bitslip23_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip23_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip23_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[55], main_k7ddrphy_dfi_p3_wrdata[23], main_k7ddrphy_dfi_p2_wrdata[55], main_k7ddrphy_dfi_p2_wrdata[23], main_k7ddrphy_dfi_p1_wrdata[55], main_k7ddrphy_dfi_p1_wrdata[23], main_k7ddrphy_dfi_p0_wrdata[55], main_k7ddrphy_dfi_p0_wrdata[23]}, main_k7ddrphy_bitslip23_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip23_value1 <= (main_k7ddrphy_bitslip23_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip23_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip23_r1 <= {main_k7ddrphy_bitslip231, main_k7ddrphy_bitslip23_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip24_value0 <= (main_k7ddrphy_bitslip24_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip24_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip24_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[56], main_k7ddrphy_dfi_p3_wrdata[24], main_k7ddrphy_dfi_p2_wrdata[56], main_k7ddrphy_dfi_p2_wrdata[24], main_k7ddrphy_dfi_p1_wrdata[56], main_k7ddrphy_dfi_p1_wrdata[24], main_k7ddrphy_dfi_p0_wrdata[56], main_k7ddrphy_dfi_p0_wrdata[24]}, main_k7ddrphy_bitslip24_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip24_value1 <= (main_k7ddrphy_bitslip24_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip24_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip24_r1 <= {main_k7ddrphy_bitslip241, main_k7ddrphy_bitslip24_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip25_value0 <= (main_k7ddrphy_bitslip25_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip25_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip25_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[57], main_k7ddrphy_dfi_p3_wrdata[25], main_k7ddrphy_dfi_p2_wrdata[57], main_k7ddrphy_dfi_p2_wrdata[25], main_k7ddrphy_dfi_p1_wrdata[57], main_k7ddrphy_dfi_p1_wrdata[25], main_k7ddrphy_dfi_p0_wrdata[57], main_k7ddrphy_dfi_p0_wrdata[25]}, main_k7ddrphy_bitslip25_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip25_value1 <= (main_k7ddrphy_bitslip25_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip25_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip25_r1 <= {main_k7ddrphy_bitslip251, main_k7ddrphy_bitslip25_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip26_value0 <= (main_k7ddrphy_bitslip26_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip26_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip26_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[58], main_k7ddrphy_dfi_p3_wrdata[26], main_k7ddrphy_dfi_p2_wrdata[58], main_k7ddrphy_dfi_p2_wrdata[26], main_k7ddrphy_dfi_p1_wrdata[58], main_k7ddrphy_dfi_p1_wrdata[26], main_k7ddrphy_dfi_p0_wrdata[58], main_k7ddrphy_dfi_p0_wrdata[26]}, main_k7ddrphy_bitslip26_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip26_value1 <= (main_k7ddrphy_bitslip26_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip26_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip26_r1 <= {main_k7ddrphy_bitslip261, main_k7ddrphy_bitslip26_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip27_value0 <= (main_k7ddrphy_bitslip27_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip27_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip27_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[59], main_k7ddrphy_dfi_p3_wrdata[27], main_k7ddrphy_dfi_p2_wrdata[59], main_k7ddrphy_dfi_p2_wrdata[27], main_k7ddrphy_dfi_p1_wrdata[59], main_k7ddrphy_dfi_p1_wrdata[27], main_k7ddrphy_dfi_p0_wrdata[59], main_k7ddrphy_dfi_p0_wrdata[27]}, main_k7ddrphy_bitslip27_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip27_value1 <= (main_k7ddrphy_bitslip27_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip27_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip27_r1 <= {main_k7ddrphy_bitslip271, main_k7ddrphy_bitslip27_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip28_value0 <= (main_k7ddrphy_bitslip28_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip28_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip28_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[60], main_k7ddrphy_dfi_p3_wrdata[28], main_k7ddrphy_dfi_p2_wrdata[60], main_k7ddrphy_dfi_p2_wrdata[28], main_k7ddrphy_dfi_p1_wrdata[60], main_k7ddrphy_dfi_p1_wrdata[28], main_k7ddrphy_dfi_p0_wrdata[60], main_k7ddrphy_dfi_p0_wrdata[28]}, main_k7ddrphy_bitslip28_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip28_value1 <= (main_k7ddrphy_bitslip28_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip28_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip28_r1 <= {main_k7ddrphy_bitslip281, main_k7ddrphy_bitslip28_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip29_value0 <= (main_k7ddrphy_bitslip29_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip29_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip29_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[61], main_k7ddrphy_dfi_p3_wrdata[29], main_k7ddrphy_dfi_p2_wrdata[61], main_k7ddrphy_dfi_p2_wrdata[29], main_k7ddrphy_dfi_p1_wrdata[61], main_k7ddrphy_dfi_p1_wrdata[29], main_k7ddrphy_dfi_p0_wrdata[61], main_k7ddrphy_dfi_p0_wrdata[29]}, main_k7ddrphy_bitslip29_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip29_value1 <= (main_k7ddrphy_bitslip29_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip29_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip29_r1 <= {main_k7ddrphy_bitslip291, main_k7ddrphy_bitslip29_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip30_value0 <= (main_k7ddrphy_bitslip30_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip30_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip30_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[62], main_k7ddrphy_dfi_p3_wrdata[30], main_k7ddrphy_dfi_p2_wrdata[62], main_k7ddrphy_dfi_p2_wrdata[30], main_k7ddrphy_dfi_p1_wrdata[62], main_k7ddrphy_dfi_p1_wrdata[30], main_k7ddrphy_dfi_p0_wrdata[62], main_k7ddrphy_dfi_p0_wrdata[30]}, main_k7ddrphy_bitslip30_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip30_value1 <= (main_k7ddrphy_bitslip30_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip30_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip30_r1 <= {main_k7ddrphy_bitslip301, main_k7ddrphy_bitslip30_r1[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip31_value0 <= (main_k7ddrphy_bitslip31_value0 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip31_value0 <= 3'd7;
    end
    main_k7ddrphy_bitslip31_r0 <= {{main_k7ddrphy_dfi_p3_wrdata[63], main_k7ddrphy_dfi_p3_wrdata[31], main_k7ddrphy_dfi_p2_wrdata[63], main_k7ddrphy_dfi_p2_wrdata[31], main_k7ddrphy_dfi_p1_wrdata[63], main_k7ddrphy_dfi_p1_wrdata[31], main_k7ddrphy_dfi_p0_wrdata[63], main_k7ddrphy_dfi_p0_wrdata[31]}, main_k7ddrphy_bitslip31_r0[15:8]};
    if ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_re)) begin
        main_k7ddrphy_bitslip31_value1 <= (main_k7ddrphy_bitslip31_value1 + 1'd1);
    end
    if (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_bitslip_rst_re) | main_k7ddrphy_rst_storage)) begin
        main_k7ddrphy_bitslip31_value1 <= 3'd7;
    end
    main_k7ddrphy_bitslip31_r1 <= {main_k7ddrphy_bitslip311, main_k7ddrphy_bitslip31_r1[15:8]};
    main_k7ddrphy_rddata_en_tappeddelayline0 <= (((main_k7ddrphy_dfi_p0_rddata_en | main_k7ddrphy_dfi_p1_rddata_en) | main_k7ddrphy_dfi_p2_rddata_en) | main_k7ddrphy_dfi_p3_rddata_en);
    main_k7ddrphy_rddata_en_tappeddelayline1 <= main_k7ddrphy_rddata_en_tappeddelayline0;
    main_k7ddrphy_rddata_en_tappeddelayline2 <= main_k7ddrphy_rddata_en_tappeddelayline1;
    main_k7ddrphy_rddata_en_tappeddelayline3 <= main_k7ddrphy_rddata_en_tappeddelayline2;
    main_k7ddrphy_rddata_en_tappeddelayline4 <= main_k7ddrphy_rddata_en_tappeddelayline3;
    main_k7ddrphy_rddata_en_tappeddelayline5 <= main_k7ddrphy_rddata_en_tappeddelayline4;
    main_k7ddrphy_rddata_en_tappeddelayline6 <= main_k7ddrphy_rddata_en_tappeddelayline5;
    main_k7ddrphy_rddata_en_tappeddelayline7 <= main_k7ddrphy_rddata_en_tappeddelayline6;
    main_k7ddrphy_wrdata_en_tappeddelayline0 <= (((main_k7ddrphy_dfi_p0_wrdata_en | main_k7ddrphy_dfi_p1_wrdata_en) | main_k7ddrphy_dfi_p2_wrdata_en) | main_k7ddrphy_dfi_p3_wrdata_en);
    main_k7ddrphy_wrdata_en_tappeddelayline1 <= main_k7ddrphy_wrdata_en_tappeddelayline0;
    main_k7ddrphy_wrdata_en_tappeddelayline2 <= main_k7ddrphy_wrdata_en_tappeddelayline1;
    if (main_litedramcore_csr_dfi_p0_rddata_valid) begin
        main_litedramcore_phaseinjector0_rddata_status <= main_litedramcore_csr_dfi_p0_rddata;
    end
    if (main_litedramcore_csr_dfi_p1_rddata_valid) begin
        main_litedramcore_phaseinjector1_rddata_status <= main_litedramcore_csr_dfi_p1_rddata;
    end
    if (main_litedramcore_csr_dfi_p2_rddata_valid) begin
        main_litedramcore_phaseinjector2_rddata_status <= main_litedramcore_csr_dfi_p2_rddata;
    end
    if (main_litedramcore_csr_dfi_p3_rddata_valid) begin
        main_litedramcore_phaseinjector3_rddata_status <= main_litedramcore_csr_dfi_p3_rddata;
    end
    if ((main_litedramcore_timer_wait & (~main_litedramcore_timer_done0))) begin
        main_litedramcore_timer_count1 <= (main_litedramcore_timer_count1 - 1'd1);
    end else begin
        main_litedramcore_timer_count1 <= 10'd781;
    end
    main_litedramcore_postponer_req_o <= 1'd0;
    if (main_litedramcore_postponer_req_i) begin
        main_litedramcore_postponer_count <= (main_litedramcore_postponer_count - 1'd1);
        if ((main_litedramcore_postponer_count == 1'd0)) begin
            main_litedramcore_postponer_count <= 1'd0;
            main_litedramcore_postponer_req_o <= 1'd1;
        end
    end
    if (main_litedramcore_sequencer_start0) begin
        main_litedramcore_sequencer_count <= 1'd0;
    end else begin
        if (main_litedramcore_sequencer_done1) begin
            if ((main_litedramcore_sequencer_count != 1'd0)) begin
                main_litedramcore_sequencer_count <= (main_litedramcore_sequencer_count - 1'd1);
            end
        end
    end
    main_litedramcore_cmd_payload_a <= 1'd0;
    main_litedramcore_cmd_payload_ba <= 1'd0;
    main_litedramcore_cmd_payload_cas <= 1'd0;
    main_litedramcore_cmd_payload_ras <= 1'd0;
    main_litedramcore_cmd_payload_we <= 1'd0;
    main_litedramcore_sequencer_done1 <= 1'd0;
    if ((main_litedramcore_sequencer_start1 & (main_litedramcore_sequencer_trigger == 1'd0))) begin
        main_litedramcore_cmd_payload_a <= 11'd1024;
        main_litedramcore_cmd_payload_ba <= 1'd0;
        main_litedramcore_cmd_payload_cas <= 1'd0;
        main_litedramcore_cmd_payload_ras <= 1'd1;
        main_litedramcore_cmd_payload_we <= 1'd1;
    end
    if ((main_litedramcore_sequencer_trigger == 2'd3)) begin
        main_litedramcore_cmd_payload_a <= 11'd1024;
        main_litedramcore_cmd_payload_ba <= 1'd0;
        main_litedramcore_cmd_payload_cas <= 1'd1;
        main_litedramcore_cmd_payload_ras <= 1'd1;
        main_litedramcore_cmd_payload_we <= 1'd0;
    end
    if ((main_litedramcore_sequencer_trigger == 6'd55)) begin
        main_litedramcore_cmd_payload_a <= 1'd0;
        main_litedramcore_cmd_payload_ba <= 1'd0;
        main_litedramcore_cmd_payload_cas <= 1'd0;
        main_litedramcore_cmd_payload_ras <= 1'd0;
        main_litedramcore_cmd_payload_we <= 1'd0;
        main_litedramcore_sequencer_done1 <= 1'd1;
    end
    if ((main_litedramcore_sequencer_trigger == 6'd55)) begin
        main_litedramcore_sequencer_trigger <= 1'd0;
    end else begin
        if ((main_litedramcore_sequencer_trigger != 1'd0)) begin
            main_litedramcore_sequencer_trigger <= (main_litedramcore_sequencer_trigger + 1'd1);
        end else begin
            if (main_litedramcore_sequencer_start1) begin
                main_litedramcore_sequencer_trigger <= 1'd1;
            end
        end
    end
    if ((main_litedramcore_zqcs_timer_wait & (~main_litedramcore_zqcs_timer_done0))) begin
        main_litedramcore_zqcs_timer_count1 <= (main_litedramcore_zqcs_timer_count1 - 1'd1);
    end else begin
        main_litedramcore_zqcs_timer_count1 <= 27'd99999999;
    end
    main_litedramcore_zqcs_executer_done <= 1'd0;
    if ((main_litedramcore_zqcs_executer_start & (main_litedramcore_zqcs_executer_trigger == 1'd0))) begin
        main_litedramcore_cmd_payload_a <= 11'd1024;
        main_litedramcore_cmd_payload_ba <= 1'd0;
        main_litedramcore_cmd_payload_cas <= 1'd0;
        main_litedramcore_cmd_payload_ras <= 1'd1;
        main_litedramcore_cmd_payload_we <= 1'd1;
    end
    if ((main_litedramcore_zqcs_executer_trigger == 2'd3)) begin
        main_litedramcore_cmd_payload_a <= 1'd0;
        main_litedramcore_cmd_payload_ba <= 1'd0;
        main_litedramcore_cmd_payload_cas <= 1'd0;
        main_litedramcore_cmd_payload_ras <= 1'd0;
        main_litedramcore_cmd_payload_we <= 1'd1;
    end
    if ((main_litedramcore_zqcs_executer_trigger == 5'd19)) begin
        main_litedramcore_cmd_payload_a <= 1'd0;
        main_litedramcore_cmd_payload_ba <= 1'd0;
        main_litedramcore_cmd_payload_cas <= 1'd0;
        main_litedramcore_cmd_payload_ras <= 1'd0;
        main_litedramcore_cmd_payload_we <= 1'd0;
        main_litedramcore_zqcs_executer_done <= 1'd1;
    end
    if ((main_litedramcore_zqcs_executer_trigger == 5'd19)) begin
        main_litedramcore_zqcs_executer_trigger <= 1'd0;
    end else begin
        if ((main_litedramcore_zqcs_executer_trigger != 1'd0)) begin
            main_litedramcore_zqcs_executer_trigger <= (main_litedramcore_zqcs_executer_trigger + 1'd1);
        end else begin
            if (main_litedramcore_zqcs_executer_start) begin
                main_litedramcore_zqcs_executer_trigger <= 1'd1;
            end
        end
    end
    builder_refresher_state <= builder_refresher_next_state;
    if (main_litedramcore_bankmachine0_row_close) begin
        main_litedramcore_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine0_row_open) begin
            main_litedramcore_bankmachine0_row_opened <= 1'd1;
            main_litedramcore_bankmachine0_row <= main_litedramcore_bankmachine0_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine0_syncfifo0_we & main_litedramcore_bankmachine0_syncfifo0_writable) & (~main_litedramcore_bankmachine0_replace))) begin
        main_litedramcore_bankmachine0_produce <= (main_litedramcore_bankmachine0_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine0_do_read) begin
        main_litedramcore_bankmachine0_consume <= (main_litedramcore_bankmachine0_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine0_syncfifo0_we & main_litedramcore_bankmachine0_syncfifo0_writable) & (~main_litedramcore_bankmachine0_replace))) begin
        if ((~main_litedramcore_bankmachine0_do_read)) begin
            main_litedramcore_bankmachine0_level <= (main_litedramcore_bankmachine0_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine0_do_read) begin
            main_litedramcore_bankmachine0_level <= (main_litedramcore_bankmachine0_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine0_pipe_valid_source_valid) | main_litedramcore_bankmachine0_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine0_pipe_valid_source_valid <= main_litedramcore_bankmachine0_pipe_valid_sink_valid;
        main_litedramcore_bankmachine0_pipe_valid_source_first <= main_litedramcore_bankmachine0_pipe_valid_sink_first;
        main_litedramcore_bankmachine0_pipe_valid_source_last <= main_litedramcore_bankmachine0_pipe_valid_sink_last;
        main_litedramcore_bankmachine0_pipe_valid_source_payload_we <= main_litedramcore_bankmachine0_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine0_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine0_twtpcon_valid) begin
        main_litedramcore_bankmachine0_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine0_twtpcon_ready)) begin
            main_litedramcore_bankmachine0_twtpcon_count <= (main_litedramcore_bankmachine0_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine0_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine0_trccon_valid) begin
        main_litedramcore_bankmachine0_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine0_trccon_ready)) begin
            main_litedramcore_bankmachine0_trccon_count <= (main_litedramcore_bankmachine0_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine0_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine0_trascon_valid) begin
        main_litedramcore_bankmachine0_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine0_trascon_ready)) begin
            main_litedramcore_bankmachine0_trascon_count <= (main_litedramcore_bankmachine0_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine0_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine0_state <= builder_bankmachine0_next_state;
    if (main_litedramcore_bankmachine1_row_close) begin
        main_litedramcore_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine1_row_open) begin
            main_litedramcore_bankmachine1_row_opened <= 1'd1;
            main_litedramcore_bankmachine1_row <= main_litedramcore_bankmachine1_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine1_syncfifo1_we & main_litedramcore_bankmachine1_syncfifo1_writable) & (~main_litedramcore_bankmachine1_replace))) begin
        main_litedramcore_bankmachine1_produce <= (main_litedramcore_bankmachine1_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine1_do_read) begin
        main_litedramcore_bankmachine1_consume <= (main_litedramcore_bankmachine1_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine1_syncfifo1_we & main_litedramcore_bankmachine1_syncfifo1_writable) & (~main_litedramcore_bankmachine1_replace))) begin
        if ((~main_litedramcore_bankmachine1_do_read)) begin
            main_litedramcore_bankmachine1_level <= (main_litedramcore_bankmachine1_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine1_do_read) begin
            main_litedramcore_bankmachine1_level <= (main_litedramcore_bankmachine1_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine1_pipe_valid_source_valid) | main_litedramcore_bankmachine1_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine1_pipe_valid_source_valid <= main_litedramcore_bankmachine1_pipe_valid_sink_valid;
        main_litedramcore_bankmachine1_pipe_valid_source_first <= main_litedramcore_bankmachine1_pipe_valid_sink_first;
        main_litedramcore_bankmachine1_pipe_valid_source_last <= main_litedramcore_bankmachine1_pipe_valid_sink_last;
        main_litedramcore_bankmachine1_pipe_valid_source_payload_we <= main_litedramcore_bankmachine1_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine1_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine1_twtpcon_valid) begin
        main_litedramcore_bankmachine1_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine1_twtpcon_ready)) begin
            main_litedramcore_bankmachine1_twtpcon_count <= (main_litedramcore_bankmachine1_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine1_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine1_trccon_valid) begin
        main_litedramcore_bankmachine1_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine1_trccon_ready)) begin
            main_litedramcore_bankmachine1_trccon_count <= (main_litedramcore_bankmachine1_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine1_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine1_trascon_valid) begin
        main_litedramcore_bankmachine1_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine1_trascon_ready)) begin
            main_litedramcore_bankmachine1_trascon_count <= (main_litedramcore_bankmachine1_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine1_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine1_state <= builder_bankmachine1_next_state;
    if (main_litedramcore_bankmachine2_row_close) begin
        main_litedramcore_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine2_row_open) begin
            main_litedramcore_bankmachine2_row_opened <= 1'd1;
            main_litedramcore_bankmachine2_row <= main_litedramcore_bankmachine2_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine2_syncfifo2_we & main_litedramcore_bankmachine2_syncfifo2_writable) & (~main_litedramcore_bankmachine2_replace))) begin
        main_litedramcore_bankmachine2_produce <= (main_litedramcore_bankmachine2_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine2_do_read) begin
        main_litedramcore_bankmachine2_consume <= (main_litedramcore_bankmachine2_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine2_syncfifo2_we & main_litedramcore_bankmachine2_syncfifo2_writable) & (~main_litedramcore_bankmachine2_replace))) begin
        if ((~main_litedramcore_bankmachine2_do_read)) begin
            main_litedramcore_bankmachine2_level <= (main_litedramcore_bankmachine2_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine2_do_read) begin
            main_litedramcore_bankmachine2_level <= (main_litedramcore_bankmachine2_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine2_pipe_valid_source_valid) | main_litedramcore_bankmachine2_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine2_pipe_valid_source_valid <= main_litedramcore_bankmachine2_pipe_valid_sink_valid;
        main_litedramcore_bankmachine2_pipe_valid_source_first <= main_litedramcore_bankmachine2_pipe_valid_sink_first;
        main_litedramcore_bankmachine2_pipe_valid_source_last <= main_litedramcore_bankmachine2_pipe_valid_sink_last;
        main_litedramcore_bankmachine2_pipe_valid_source_payload_we <= main_litedramcore_bankmachine2_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine2_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine2_twtpcon_valid) begin
        main_litedramcore_bankmachine2_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine2_twtpcon_ready)) begin
            main_litedramcore_bankmachine2_twtpcon_count <= (main_litedramcore_bankmachine2_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine2_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine2_trccon_valid) begin
        main_litedramcore_bankmachine2_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine2_trccon_ready)) begin
            main_litedramcore_bankmachine2_trccon_count <= (main_litedramcore_bankmachine2_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine2_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine2_trascon_valid) begin
        main_litedramcore_bankmachine2_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine2_trascon_ready)) begin
            main_litedramcore_bankmachine2_trascon_count <= (main_litedramcore_bankmachine2_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine2_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine2_state <= builder_bankmachine2_next_state;
    if (main_litedramcore_bankmachine3_row_close) begin
        main_litedramcore_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine3_row_open) begin
            main_litedramcore_bankmachine3_row_opened <= 1'd1;
            main_litedramcore_bankmachine3_row <= main_litedramcore_bankmachine3_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine3_syncfifo3_we & main_litedramcore_bankmachine3_syncfifo3_writable) & (~main_litedramcore_bankmachine3_replace))) begin
        main_litedramcore_bankmachine3_produce <= (main_litedramcore_bankmachine3_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine3_do_read) begin
        main_litedramcore_bankmachine3_consume <= (main_litedramcore_bankmachine3_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine3_syncfifo3_we & main_litedramcore_bankmachine3_syncfifo3_writable) & (~main_litedramcore_bankmachine3_replace))) begin
        if ((~main_litedramcore_bankmachine3_do_read)) begin
            main_litedramcore_bankmachine3_level <= (main_litedramcore_bankmachine3_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine3_do_read) begin
            main_litedramcore_bankmachine3_level <= (main_litedramcore_bankmachine3_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine3_pipe_valid_source_valid) | main_litedramcore_bankmachine3_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine3_pipe_valid_source_valid <= main_litedramcore_bankmachine3_pipe_valid_sink_valid;
        main_litedramcore_bankmachine3_pipe_valid_source_first <= main_litedramcore_bankmachine3_pipe_valid_sink_first;
        main_litedramcore_bankmachine3_pipe_valid_source_last <= main_litedramcore_bankmachine3_pipe_valid_sink_last;
        main_litedramcore_bankmachine3_pipe_valid_source_payload_we <= main_litedramcore_bankmachine3_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine3_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine3_twtpcon_valid) begin
        main_litedramcore_bankmachine3_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine3_twtpcon_ready)) begin
            main_litedramcore_bankmachine3_twtpcon_count <= (main_litedramcore_bankmachine3_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine3_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine3_trccon_valid) begin
        main_litedramcore_bankmachine3_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine3_trccon_ready)) begin
            main_litedramcore_bankmachine3_trccon_count <= (main_litedramcore_bankmachine3_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine3_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine3_trascon_valid) begin
        main_litedramcore_bankmachine3_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine3_trascon_ready)) begin
            main_litedramcore_bankmachine3_trascon_count <= (main_litedramcore_bankmachine3_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine3_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine3_state <= builder_bankmachine3_next_state;
    if (main_litedramcore_bankmachine4_row_close) begin
        main_litedramcore_bankmachine4_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine4_row_open) begin
            main_litedramcore_bankmachine4_row_opened <= 1'd1;
            main_litedramcore_bankmachine4_row <= main_litedramcore_bankmachine4_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine4_syncfifo4_we & main_litedramcore_bankmachine4_syncfifo4_writable) & (~main_litedramcore_bankmachine4_replace))) begin
        main_litedramcore_bankmachine4_produce <= (main_litedramcore_bankmachine4_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine4_do_read) begin
        main_litedramcore_bankmachine4_consume <= (main_litedramcore_bankmachine4_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine4_syncfifo4_we & main_litedramcore_bankmachine4_syncfifo4_writable) & (~main_litedramcore_bankmachine4_replace))) begin
        if ((~main_litedramcore_bankmachine4_do_read)) begin
            main_litedramcore_bankmachine4_level <= (main_litedramcore_bankmachine4_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine4_do_read) begin
            main_litedramcore_bankmachine4_level <= (main_litedramcore_bankmachine4_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine4_pipe_valid_source_valid) | main_litedramcore_bankmachine4_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine4_pipe_valid_source_valid <= main_litedramcore_bankmachine4_pipe_valid_sink_valid;
        main_litedramcore_bankmachine4_pipe_valid_source_first <= main_litedramcore_bankmachine4_pipe_valid_sink_first;
        main_litedramcore_bankmachine4_pipe_valid_source_last <= main_litedramcore_bankmachine4_pipe_valid_sink_last;
        main_litedramcore_bankmachine4_pipe_valid_source_payload_we <= main_litedramcore_bankmachine4_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine4_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine4_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine4_twtpcon_valid) begin
        main_litedramcore_bankmachine4_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine4_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine4_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine4_twtpcon_ready)) begin
            main_litedramcore_bankmachine4_twtpcon_count <= (main_litedramcore_bankmachine4_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine4_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine4_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine4_trccon_valid) begin
        main_litedramcore_bankmachine4_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine4_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine4_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine4_trccon_ready)) begin
            main_litedramcore_bankmachine4_trccon_count <= (main_litedramcore_bankmachine4_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine4_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine4_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine4_trascon_valid) begin
        main_litedramcore_bankmachine4_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine4_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine4_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine4_trascon_ready)) begin
            main_litedramcore_bankmachine4_trascon_count <= (main_litedramcore_bankmachine4_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine4_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine4_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine4_state <= builder_bankmachine4_next_state;
    if (main_litedramcore_bankmachine5_row_close) begin
        main_litedramcore_bankmachine5_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine5_row_open) begin
            main_litedramcore_bankmachine5_row_opened <= 1'd1;
            main_litedramcore_bankmachine5_row <= main_litedramcore_bankmachine5_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine5_syncfifo5_we & main_litedramcore_bankmachine5_syncfifo5_writable) & (~main_litedramcore_bankmachine5_replace))) begin
        main_litedramcore_bankmachine5_produce <= (main_litedramcore_bankmachine5_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine5_do_read) begin
        main_litedramcore_bankmachine5_consume <= (main_litedramcore_bankmachine5_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine5_syncfifo5_we & main_litedramcore_bankmachine5_syncfifo5_writable) & (~main_litedramcore_bankmachine5_replace))) begin
        if ((~main_litedramcore_bankmachine5_do_read)) begin
            main_litedramcore_bankmachine5_level <= (main_litedramcore_bankmachine5_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine5_do_read) begin
            main_litedramcore_bankmachine5_level <= (main_litedramcore_bankmachine5_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine5_pipe_valid_source_valid) | main_litedramcore_bankmachine5_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine5_pipe_valid_source_valid <= main_litedramcore_bankmachine5_pipe_valid_sink_valid;
        main_litedramcore_bankmachine5_pipe_valid_source_first <= main_litedramcore_bankmachine5_pipe_valid_sink_first;
        main_litedramcore_bankmachine5_pipe_valid_source_last <= main_litedramcore_bankmachine5_pipe_valid_sink_last;
        main_litedramcore_bankmachine5_pipe_valid_source_payload_we <= main_litedramcore_bankmachine5_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine5_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine5_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine5_twtpcon_valid) begin
        main_litedramcore_bankmachine5_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine5_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine5_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine5_twtpcon_ready)) begin
            main_litedramcore_bankmachine5_twtpcon_count <= (main_litedramcore_bankmachine5_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine5_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine5_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine5_trccon_valid) begin
        main_litedramcore_bankmachine5_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine5_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine5_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine5_trccon_ready)) begin
            main_litedramcore_bankmachine5_trccon_count <= (main_litedramcore_bankmachine5_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine5_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine5_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine5_trascon_valid) begin
        main_litedramcore_bankmachine5_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine5_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine5_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine5_trascon_ready)) begin
            main_litedramcore_bankmachine5_trascon_count <= (main_litedramcore_bankmachine5_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine5_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine5_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine5_state <= builder_bankmachine5_next_state;
    if (main_litedramcore_bankmachine6_row_close) begin
        main_litedramcore_bankmachine6_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine6_row_open) begin
            main_litedramcore_bankmachine6_row_opened <= 1'd1;
            main_litedramcore_bankmachine6_row <= main_litedramcore_bankmachine6_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine6_syncfifo6_we & main_litedramcore_bankmachine6_syncfifo6_writable) & (~main_litedramcore_bankmachine6_replace))) begin
        main_litedramcore_bankmachine6_produce <= (main_litedramcore_bankmachine6_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine6_do_read) begin
        main_litedramcore_bankmachine6_consume <= (main_litedramcore_bankmachine6_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine6_syncfifo6_we & main_litedramcore_bankmachine6_syncfifo6_writable) & (~main_litedramcore_bankmachine6_replace))) begin
        if ((~main_litedramcore_bankmachine6_do_read)) begin
            main_litedramcore_bankmachine6_level <= (main_litedramcore_bankmachine6_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine6_do_read) begin
            main_litedramcore_bankmachine6_level <= (main_litedramcore_bankmachine6_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine6_pipe_valid_source_valid) | main_litedramcore_bankmachine6_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine6_pipe_valid_source_valid <= main_litedramcore_bankmachine6_pipe_valid_sink_valid;
        main_litedramcore_bankmachine6_pipe_valid_source_first <= main_litedramcore_bankmachine6_pipe_valid_sink_first;
        main_litedramcore_bankmachine6_pipe_valid_source_last <= main_litedramcore_bankmachine6_pipe_valid_sink_last;
        main_litedramcore_bankmachine6_pipe_valid_source_payload_we <= main_litedramcore_bankmachine6_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine6_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine6_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine6_twtpcon_valid) begin
        main_litedramcore_bankmachine6_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine6_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine6_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine6_twtpcon_ready)) begin
            main_litedramcore_bankmachine6_twtpcon_count <= (main_litedramcore_bankmachine6_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine6_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine6_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine6_trccon_valid) begin
        main_litedramcore_bankmachine6_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine6_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine6_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine6_trccon_ready)) begin
            main_litedramcore_bankmachine6_trccon_count <= (main_litedramcore_bankmachine6_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine6_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine6_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine6_trascon_valid) begin
        main_litedramcore_bankmachine6_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine6_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine6_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine6_trascon_ready)) begin
            main_litedramcore_bankmachine6_trascon_count <= (main_litedramcore_bankmachine6_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine6_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine6_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine6_state <= builder_bankmachine6_next_state;
    if (main_litedramcore_bankmachine7_row_close) begin
        main_litedramcore_bankmachine7_row_opened <= 1'd0;
    end else begin
        if (main_litedramcore_bankmachine7_row_open) begin
            main_litedramcore_bankmachine7_row_opened <= 1'd1;
            main_litedramcore_bankmachine7_row <= main_litedramcore_bankmachine7_source_source_payload_addr[21:7];
        end
    end
    if (((main_litedramcore_bankmachine7_syncfifo7_we & main_litedramcore_bankmachine7_syncfifo7_writable) & (~main_litedramcore_bankmachine7_replace))) begin
        main_litedramcore_bankmachine7_produce <= (main_litedramcore_bankmachine7_produce + 1'd1);
    end
    if (main_litedramcore_bankmachine7_do_read) begin
        main_litedramcore_bankmachine7_consume <= (main_litedramcore_bankmachine7_consume + 1'd1);
    end
    if (((main_litedramcore_bankmachine7_syncfifo7_we & main_litedramcore_bankmachine7_syncfifo7_writable) & (~main_litedramcore_bankmachine7_replace))) begin
        if ((~main_litedramcore_bankmachine7_do_read)) begin
            main_litedramcore_bankmachine7_level <= (main_litedramcore_bankmachine7_level + 1'd1);
        end
    end else begin
        if (main_litedramcore_bankmachine7_do_read) begin
            main_litedramcore_bankmachine7_level <= (main_litedramcore_bankmachine7_level - 1'd1);
        end
    end
    if (((~main_litedramcore_bankmachine7_pipe_valid_source_valid) | main_litedramcore_bankmachine7_pipe_valid_source_ready)) begin
        main_litedramcore_bankmachine7_pipe_valid_source_valid <= main_litedramcore_bankmachine7_pipe_valid_sink_valid;
        main_litedramcore_bankmachine7_pipe_valid_source_first <= main_litedramcore_bankmachine7_pipe_valid_sink_first;
        main_litedramcore_bankmachine7_pipe_valid_source_last <= main_litedramcore_bankmachine7_pipe_valid_sink_last;
        main_litedramcore_bankmachine7_pipe_valid_source_payload_we <= main_litedramcore_bankmachine7_pipe_valid_sink_payload_we;
        main_litedramcore_bankmachine7_pipe_valid_source_payload_addr <= main_litedramcore_bankmachine7_pipe_valid_sink_payload_addr;
    end
    if (main_litedramcore_bankmachine7_twtpcon_valid) begin
        main_litedramcore_bankmachine7_twtpcon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine7_twtpcon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine7_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine7_twtpcon_ready)) begin
            main_litedramcore_bankmachine7_twtpcon_count <= (main_litedramcore_bankmachine7_twtpcon_count - 1'd1);
            if ((main_litedramcore_bankmachine7_twtpcon_count == 1'd1)) begin
                main_litedramcore_bankmachine7_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine7_trccon_valid) begin
        main_litedramcore_bankmachine7_trccon_count <= 3'd5;
        if (1'd0) begin
            main_litedramcore_bankmachine7_trccon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine7_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine7_trccon_ready)) begin
            main_litedramcore_bankmachine7_trccon_count <= (main_litedramcore_bankmachine7_trccon_count - 1'd1);
            if ((main_litedramcore_bankmachine7_trccon_count == 1'd1)) begin
                main_litedramcore_bankmachine7_trccon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_bankmachine7_trascon_valid) begin
        main_litedramcore_bankmachine7_trascon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_bankmachine7_trascon_ready <= 1'd1;
        end else begin
            main_litedramcore_bankmachine7_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_bankmachine7_trascon_ready)) begin
            main_litedramcore_bankmachine7_trascon_count <= (main_litedramcore_bankmachine7_trascon_count - 1'd1);
            if ((main_litedramcore_bankmachine7_trascon_count == 1'd1)) begin
                main_litedramcore_bankmachine7_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine7_state <= builder_bankmachine7_next_state;
    if ((~main_litedramcore_en0)) begin
        main_litedramcore_time0 <= 5'd31;
    end else begin
        if ((~main_litedramcore_max_time0)) begin
            main_litedramcore_time0 <= (main_litedramcore_time0 - 1'd1);
        end
    end
    if ((~main_litedramcore_en1)) begin
        main_litedramcore_time1 <= 4'd15;
    end else begin
        if ((~main_litedramcore_max_time1)) begin
            main_litedramcore_time1 <= (main_litedramcore_time1 - 1'd1);
        end
    end
    if (main_litedramcore_choose_cmd_ce) begin
        case (main_litedramcore_choose_cmd_grant)
            1'd0: begin
                if (main_litedramcore_choose_cmd_request[1]) begin
                    main_litedramcore_choose_cmd_grant <= 1'd1;
                end else begin
                    if (main_litedramcore_choose_cmd_request[2]) begin
                        main_litedramcore_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[3]) begin
                            main_litedramcore_choose_cmd_grant <= 2'd3;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[4]) begin
                                main_litedramcore_choose_cmd_grant <= 3'd4;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[5]) begin
                                    main_litedramcore_choose_cmd_grant <= 3'd5;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[6]) begin
                                        main_litedramcore_choose_cmd_grant <= 3'd6;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[7]) begin
                                            main_litedramcore_choose_cmd_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (main_litedramcore_choose_cmd_request[2]) begin
                    main_litedramcore_choose_cmd_grant <= 2'd2;
                end else begin
                    if (main_litedramcore_choose_cmd_request[3]) begin
                        main_litedramcore_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[4]) begin
                            main_litedramcore_choose_cmd_grant <= 3'd4;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[5]) begin
                                main_litedramcore_choose_cmd_grant <= 3'd5;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[6]) begin
                                    main_litedramcore_choose_cmd_grant <= 3'd6;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[7]) begin
                                        main_litedramcore_choose_cmd_grant <= 3'd7;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[0]) begin
                                            main_litedramcore_choose_cmd_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (main_litedramcore_choose_cmd_request[3]) begin
                    main_litedramcore_choose_cmd_grant <= 2'd3;
                end else begin
                    if (main_litedramcore_choose_cmd_request[4]) begin
                        main_litedramcore_choose_cmd_grant <= 3'd4;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[5]) begin
                            main_litedramcore_choose_cmd_grant <= 3'd5;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[6]) begin
                                main_litedramcore_choose_cmd_grant <= 3'd6;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[7]) begin
                                    main_litedramcore_choose_cmd_grant <= 3'd7;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[0]) begin
                                        main_litedramcore_choose_cmd_grant <= 1'd0;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[1]) begin
                                            main_litedramcore_choose_cmd_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (main_litedramcore_choose_cmd_request[4]) begin
                    main_litedramcore_choose_cmd_grant <= 3'd4;
                end else begin
                    if (main_litedramcore_choose_cmd_request[5]) begin
                        main_litedramcore_choose_cmd_grant <= 3'd5;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[6]) begin
                            main_litedramcore_choose_cmd_grant <= 3'd6;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[7]) begin
                                main_litedramcore_choose_cmd_grant <= 3'd7;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[0]) begin
                                    main_litedramcore_choose_cmd_grant <= 1'd0;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[1]) begin
                                        main_litedramcore_choose_cmd_grant <= 1'd1;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[2]) begin
                                            main_litedramcore_choose_cmd_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (main_litedramcore_choose_cmd_request[5]) begin
                    main_litedramcore_choose_cmd_grant <= 3'd5;
                end else begin
                    if (main_litedramcore_choose_cmd_request[6]) begin
                        main_litedramcore_choose_cmd_grant <= 3'd6;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[7]) begin
                            main_litedramcore_choose_cmd_grant <= 3'd7;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[0]) begin
                                main_litedramcore_choose_cmd_grant <= 1'd0;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[1]) begin
                                    main_litedramcore_choose_cmd_grant <= 1'd1;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[2]) begin
                                        main_litedramcore_choose_cmd_grant <= 2'd2;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[3]) begin
                                            main_litedramcore_choose_cmd_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (main_litedramcore_choose_cmd_request[6]) begin
                    main_litedramcore_choose_cmd_grant <= 3'd6;
                end else begin
                    if (main_litedramcore_choose_cmd_request[7]) begin
                        main_litedramcore_choose_cmd_grant <= 3'd7;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[0]) begin
                            main_litedramcore_choose_cmd_grant <= 1'd0;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[1]) begin
                                main_litedramcore_choose_cmd_grant <= 1'd1;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[2]) begin
                                    main_litedramcore_choose_cmd_grant <= 2'd2;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[3]) begin
                                        main_litedramcore_choose_cmd_grant <= 2'd3;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[4]) begin
                                            main_litedramcore_choose_cmd_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (main_litedramcore_choose_cmd_request[7]) begin
                    main_litedramcore_choose_cmd_grant <= 3'd7;
                end else begin
                    if (main_litedramcore_choose_cmd_request[0]) begin
                        main_litedramcore_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[1]) begin
                            main_litedramcore_choose_cmd_grant <= 1'd1;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[2]) begin
                                main_litedramcore_choose_cmd_grant <= 2'd2;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[3]) begin
                                    main_litedramcore_choose_cmd_grant <= 2'd3;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[4]) begin
                                        main_litedramcore_choose_cmd_grant <= 3'd4;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[5]) begin
                                            main_litedramcore_choose_cmd_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (main_litedramcore_choose_cmd_request[0]) begin
                    main_litedramcore_choose_cmd_grant <= 1'd0;
                end else begin
                    if (main_litedramcore_choose_cmd_request[1]) begin
                        main_litedramcore_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (main_litedramcore_choose_cmd_request[2]) begin
                            main_litedramcore_choose_cmd_grant <= 2'd2;
                        end else begin
                            if (main_litedramcore_choose_cmd_request[3]) begin
                                main_litedramcore_choose_cmd_grant <= 2'd3;
                            end else begin
                                if (main_litedramcore_choose_cmd_request[4]) begin
                                    main_litedramcore_choose_cmd_grant <= 3'd4;
                                end else begin
                                    if (main_litedramcore_choose_cmd_request[5]) begin
                                        main_litedramcore_choose_cmd_grant <= 3'd5;
                                    end else begin
                                        if (main_litedramcore_choose_cmd_request[6]) begin
                                            main_litedramcore_choose_cmd_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    if (main_litedramcore_choose_req_ce) begin
        case (main_litedramcore_choose_req_grant)
            1'd0: begin
                if (main_litedramcore_choose_req_request[1]) begin
                    main_litedramcore_choose_req_grant <= 1'd1;
                end else begin
                    if (main_litedramcore_choose_req_request[2]) begin
                        main_litedramcore_choose_req_grant <= 2'd2;
                    end else begin
                        if (main_litedramcore_choose_req_request[3]) begin
                            main_litedramcore_choose_req_grant <= 2'd3;
                        end else begin
                            if (main_litedramcore_choose_req_request[4]) begin
                                main_litedramcore_choose_req_grant <= 3'd4;
                            end else begin
                                if (main_litedramcore_choose_req_request[5]) begin
                                    main_litedramcore_choose_req_grant <= 3'd5;
                                end else begin
                                    if (main_litedramcore_choose_req_request[6]) begin
                                        main_litedramcore_choose_req_grant <= 3'd6;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[7]) begin
                                            main_litedramcore_choose_req_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (main_litedramcore_choose_req_request[2]) begin
                    main_litedramcore_choose_req_grant <= 2'd2;
                end else begin
                    if (main_litedramcore_choose_req_request[3]) begin
                        main_litedramcore_choose_req_grant <= 2'd3;
                    end else begin
                        if (main_litedramcore_choose_req_request[4]) begin
                            main_litedramcore_choose_req_grant <= 3'd4;
                        end else begin
                            if (main_litedramcore_choose_req_request[5]) begin
                                main_litedramcore_choose_req_grant <= 3'd5;
                            end else begin
                                if (main_litedramcore_choose_req_request[6]) begin
                                    main_litedramcore_choose_req_grant <= 3'd6;
                                end else begin
                                    if (main_litedramcore_choose_req_request[7]) begin
                                        main_litedramcore_choose_req_grant <= 3'd7;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[0]) begin
                                            main_litedramcore_choose_req_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (main_litedramcore_choose_req_request[3]) begin
                    main_litedramcore_choose_req_grant <= 2'd3;
                end else begin
                    if (main_litedramcore_choose_req_request[4]) begin
                        main_litedramcore_choose_req_grant <= 3'd4;
                    end else begin
                        if (main_litedramcore_choose_req_request[5]) begin
                            main_litedramcore_choose_req_grant <= 3'd5;
                        end else begin
                            if (main_litedramcore_choose_req_request[6]) begin
                                main_litedramcore_choose_req_grant <= 3'd6;
                            end else begin
                                if (main_litedramcore_choose_req_request[7]) begin
                                    main_litedramcore_choose_req_grant <= 3'd7;
                                end else begin
                                    if (main_litedramcore_choose_req_request[0]) begin
                                        main_litedramcore_choose_req_grant <= 1'd0;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[1]) begin
                                            main_litedramcore_choose_req_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (main_litedramcore_choose_req_request[4]) begin
                    main_litedramcore_choose_req_grant <= 3'd4;
                end else begin
                    if (main_litedramcore_choose_req_request[5]) begin
                        main_litedramcore_choose_req_grant <= 3'd5;
                    end else begin
                        if (main_litedramcore_choose_req_request[6]) begin
                            main_litedramcore_choose_req_grant <= 3'd6;
                        end else begin
                            if (main_litedramcore_choose_req_request[7]) begin
                                main_litedramcore_choose_req_grant <= 3'd7;
                            end else begin
                                if (main_litedramcore_choose_req_request[0]) begin
                                    main_litedramcore_choose_req_grant <= 1'd0;
                                end else begin
                                    if (main_litedramcore_choose_req_request[1]) begin
                                        main_litedramcore_choose_req_grant <= 1'd1;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[2]) begin
                                            main_litedramcore_choose_req_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (main_litedramcore_choose_req_request[5]) begin
                    main_litedramcore_choose_req_grant <= 3'd5;
                end else begin
                    if (main_litedramcore_choose_req_request[6]) begin
                        main_litedramcore_choose_req_grant <= 3'd6;
                    end else begin
                        if (main_litedramcore_choose_req_request[7]) begin
                            main_litedramcore_choose_req_grant <= 3'd7;
                        end else begin
                            if (main_litedramcore_choose_req_request[0]) begin
                                main_litedramcore_choose_req_grant <= 1'd0;
                            end else begin
                                if (main_litedramcore_choose_req_request[1]) begin
                                    main_litedramcore_choose_req_grant <= 1'd1;
                                end else begin
                                    if (main_litedramcore_choose_req_request[2]) begin
                                        main_litedramcore_choose_req_grant <= 2'd2;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[3]) begin
                                            main_litedramcore_choose_req_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (main_litedramcore_choose_req_request[6]) begin
                    main_litedramcore_choose_req_grant <= 3'd6;
                end else begin
                    if (main_litedramcore_choose_req_request[7]) begin
                        main_litedramcore_choose_req_grant <= 3'd7;
                    end else begin
                        if (main_litedramcore_choose_req_request[0]) begin
                            main_litedramcore_choose_req_grant <= 1'd0;
                        end else begin
                            if (main_litedramcore_choose_req_request[1]) begin
                                main_litedramcore_choose_req_grant <= 1'd1;
                            end else begin
                                if (main_litedramcore_choose_req_request[2]) begin
                                    main_litedramcore_choose_req_grant <= 2'd2;
                                end else begin
                                    if (main_litedramcore_choose_req_request[3]) begin
                                        main_litedramcore_choose_req_grant <= 2'd3;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[4]) begin
                                            main_litedramcore_choose_req_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (main_litedramcore_choose_req_request[7]) begin
                    main_litedramcore_choose_req_grant <= 3'd7;
                end else begin
                    if (main_litedramcore_choose_req_request[0]) begin
                        main_litedramcore_choose_req_grant <= 1'd0;
                    end else begin
                        if (main_litedramcore_choose_req_request[1]) begin
                            main_litedramcore_choose_req_grant <= 1'd1;
                        end else begin
                            if (main_litedramcore_choose_req_request[2]) begin
                                main_litedramcore_choose_req_grant <= 2'd2;
                            end else begin
                                if (main_litedramcore_choose_req_request[3]) begin
                                    main_litedramcore_choose_req_grant <= 2'd3;
                                end else begin
                                    if (main_litedramcore_choose_req_request[4]) begin
                                        main_litedramcore_choose_req_grant <= 3'd4;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[5]) begin
                                            main_litedramcore_choose_req_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (main_litedramcore_choose_req_request[0]) begin
                    main_litedramcore_choose_req_grant <= 1'd0;
                end else begin
                    if (main_litedramcore_choose_req_request[1]) begin
                        main_litedramcore_choose_req_grant <= 1'd1;
                    end else begin
                        if (main_litedramcore_choose_req_request[2]) begin
                            main_litedramcore_choose_req_grant <= 2'd2;
                        end else begin
                            if (main_litedramcore_choose_req_request[3]) begin
                                main_litedramcore_choose_req_grant <= 2'd3;
                            end else begin
                                if (main_litedramcore_choose_req_request[4]) begin
                                    main_litedramcore_choose_req_grant <= 3'd4;
                                end else begin
                                    if (main_litedramcore_choose_req_request[5]) begin
                                        main_litedramcore_choose_req_grant <= 3'd5;
                                    end else begin
                                        if (main_litedramcore_choose_req_request[6]) begin
                                            main_litedramcore_choose_req_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    main_litedramcore_dfi_p0_cs_n <= 1'd0;
    main_litedramcore_dfi_p0_bank <= builder_self0;
    main_litedramcore_dfi_p0_address <= builder_self1;
    main_litedramcore_dfi_p0_cas_n <= (~builder_self2);
    main_litedramcore_dfi_p0_ras_n <= (~builder_self3);
    main_litedramcore_dfi_p0_we_n <= (~builder_self4);
    main_litedramcore_dfi_p0_rddata_en <= builder_self5;
    main_litedramcore_dfi_p0_wrdata_en <= builder_self6;
    main_litedramcore_dfi_p1_cs_n <= 1'd0;
    main_litedramcore_dfi_p1_bank <= builder_self7;
    main_litedramcore_dfi_p1_address <= builder_self8;
    main_litedramcore_dfi_p1_cas_n <= (~builder_self9);
    main_litedramcore_dfi_p1_ras_n <= (~builder_self10);
    main_litedramcore_dfi_p1_we_n <= (~builder_self11);
    main_litedramcore_dfi_p1_rddata_en <= builder_self12;
    main_litedramcore_dfi_p1_wrdata_en <= builder_self13;
    main_litedramcore_dfi_p2_cs_n <= 1'd0;
    main_litedramcore_dfi_p2_bank <= builder_self14;
    main_litedramcore_dfi_p2_address <= builder_self15;
    main_litedramcore_dfi_p2_cas_n <= (~builder_self16);
    main_litedramcore_dfi_p2_ras_n <= (~builder_self17);
    main_litedramcore_dfi_p2_we_n <= (~builder_self18);
    main_litedramcore_dfi_p2_rddata_en <= builder_self19;
    main_litedramcore_dfi_p2_wrdata_en <= builder_self20;
    main_litedramcore_dfi_p3_cs_n <= 1'd0;
    main_litedramcore_dfi_p3_bank <= builder_self21;
    main_litedramcore_dfi_p3_address <= builder_self22;
    main_litedramcore_dfi_p3_cas_n <= (~builder_self23);
    main_litedramcore_dfi_p3_ras_n <= (~builder_self24);
    main_litedramcore_dfi_p3_we_n <= (~builder_self25);
    main_litedramcore_dfi_p3_rddata_en <= builder_self26;
    main_litedramcore_dfi_p3_wrdata_en <= builder_self27;
    if (main_litedramcore_trrdcon_valid) begin
        main_litedramcore_trrdcon_count <= 1'd1;
        if (1'd0) begin
            main_litedramcore_trrdcon_ready <= 1'd1;
        end else begin
            main_litedramcore_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_trrdcon_ready)) begin
            main_litedramcore_trrdcon_count <= (main_litedramcore_trrdcon_count - 1'd1);
            if ((main_litedramcore_trrdcon_count == 1'd1)) begin
                main_litedramcore_trrdcon_ready <= 1'd1;
            end
        end
    end
    main_litedramcore_tfawcon_window <= {main_litedramcore_tfawcon_window, main_litedramcore_tfawcon_valid};
    if ((main_litedramcore_tfawcon_count < 3'd4)) begin
        if ((main_litedramcore_tfawcon_count == 2'd3)) begin
            main_litedramcore_tfawcon_ready <= (~main_litedramcore_tfawcon_valid);
        end else begin
            main_litedramcore_tfawcon_ready <= 1'd1;
        end
    end
    if (main_litedramcore_tccdcon_valid) begin
        main_litedramcore_tccdcon_count <= 1'd0;
        if (1'd1) begin
            main_litedramcore_tccdcon_ready <= 1'd1;
        end else begin
            main_litedramcore_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_tccdcon_ready)) begin
            main_litedramcore_tccdcon_count <= (main_litedramcore_tccdcon_count - 1'd1);
            if ((main_litedramcore_tccdcon_count == 1'd1)) begin
                main_litedramcore_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (main_litedramcore_twtrcon_valid) begin
        main_litedramcore_twtrcon_count <= 3'd4;
        if (1'd0) begin
            main_litedramcore_twtrcon_ready <= 1'd1;
        end else begin
            main_litedramcore_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~main_litedramcore_twtrcon_ready)) begin
            main_litedramcore_twtrcon_count <= (main_litedramcore_twtrcon_count - 1'd1);
            if ((main_litedramcore_twtrcon_count == 1'd1)) begin
                main_litedramcore_twtrcon_ready <= 1'd1;
            end
        end
    end
    builder_multiplexer_state <= builder_multiplexer_next_state;
    builder_new_master_wdata_ready0 <= ((((((((1'd0 | ((builder_roundrobin0_grant == 1'd0) & main_litedramcore_interface_bank0_wdata_ready)) | ((builder_roundrobin1_grant == 1'd0) & main_litedramcore_interface_bank1_wdata_ready)) | ((builder_roundrobin2_grant == 1'd0) & main_litedramcore_interface_bank2_wdata_ready)) | ((builder_roundrobin3_grant == 1'd0) & main_litedramcore_interface_bank3_wdata_ready)) | ((builder_roundrobin4_grant == 1'd0) & main_litedramcore_interface_bank4_wdata_ready)) | ((builder_roundrobin5_grant == 1'd0) & main_litedramcore_interface_bank5_wdata_ready)) | ((builder_roundrobin6_grant == 1'd0) & main_litedramcore_interface_bank6_wdata_ready)) | ((builder_roundrobin7_grant == 1'd0) & main_litedramcore_interface_bank7_wdata_ready));
    builder_new_master_wdata_ready1 <= builder_new_master_wdata_ready0;
    builder_new_master_rdata_valid0 <= ((((((((1'd0 | ((builder_roundrobin0_grant == 1'd0) & main_litedramcore_interface_bank0_rdata_valid)) | ((builder_roundrobin1_grant == 1'd0) & main_litedramcore_interface_bank1_rdata_valid)) | ((builder_roundrobin2_grant == 1'd0) & main_litedramcore_interface_bank2_rdata_valid)) | ((builder_roundrobin3_grant == 1'd0) & main_litedramcore_interface_bank3_rdata_valid)) | ((builder_roundrobin4_grant == 1'd0) & main_litedramcore_interface_bank4_rdata_valid)) | ((builder_roundrobin5_grant == 1'd0) & main_litedramcore_interface_bank5_rdata_valid)) | ((builder_roundrobin6_grant == 1'd0) & main_litedramcore_interface_bank6_rdata_valid)) | ((builder_roundrobin7_grant == 1'd0) & main_litedramcore_interface_bank7_rdata_valid));
    builder_new_master_rdata_valid1 <= builder_new_master_rdata_valid0;
    builder_new_master_rdata_valid2 <= builder_new_master_rdata_valid1;
    builder_new_master_rdata_valid3 <= builder_new_master_rdata_valid2;
    builder_new_master_rdata_valid4 <= builder_new_master_rdata_valid3;
    builder_new_master_rdata_valid5 <= builder_new_master_rdata_valid4;
    builder_new_master_rdata_valid6 <= builder_new_master_rdata_valid5;
    builder_new_master_rdata_valid7 <= builder_new_master_rdata_valid6;
    builder_new_master_rdata_valid8 <= builder_new_master_rdata_valid7;
    builder_state <= builder_next_state;
    if (builder_interface1_dat_w_next_value_ce0) begin
        builder_interface1_dat_w <= builder_interface1_dat_w_next_value0;
    end
    if (builder_interface1_adr_next_value_ce1) begin
        builder_interface1_adr <= builder_interface1_adr_next_value1;
    end
    if (builder_interface1_re_next_value_ce2) begin
        builder_interface1_re <= builder_interface1_re_next_value2;
    end
    if (builder_interface1_we_next_value_ce3) begin
        builder_interface1_we <= builder_interface1_we_next_value3;
    end
    builder_interface0_bank_bus_dat_r <= 1'd0;
    if (builder_csrbank0_sel) begin
        case (builder_interface0_bank_bus_adr[8:0])
            1'd0: begin
                builder_interface0_bank_bus_dat_r <= builder_csrbank0_init_done0_w;
            end
            1'd1: begin
                builder_interface0_bank_bus_dat_r <= builder_csrbank0_init_error0_w;
            end
        endcase
    end
    if (builder_csrbank0_init_done0_re) begin
        main_init_done_storage <= builder_csrbank0_init_done0_r;
    end
    main_init_done_re <= builder_csrbank0_init_done0_re;
    if (builder_csrbank0_init_error0_re) begin
        main_init_error_storage <= builder_csrbank0_init_error0_r;
    end
    main_init_error_re <= builder_csrbank0_init_error0_re;
    builder_interface1_bank_bus_dat_r <= 1'd0;
    if (builder_csrbank1_sel) begin
        case (builder_interface1_bank_bus_adr[8:0])
            1'd0: begin
                builder_interface1_bank_bus_dat_r <= builder_csrbank1_rst0_w;
            end
            1'd1: begin
                builder_interface1_bank_bus_dat_r <= builder_csrbank1_dly_sel0_w;
            end
            2'd2: begin
                builder_interface1_bank_bus_dat_r <= builder_csrbank1_half_sys8x_taps0_w;
            end
            2'd3: begin
                builder_interface1_bank_bus_dat_r <= builder_csrbank1_wlevel_en0_w;
            end
            3'd4: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wlevel_strobe_w;
            end
            3'd5: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_cdly_rst_w;
            end
            3'd6: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_cdly_inc_w;
            end
            3'd7: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_rdly_dq_rst_w;
            end
            4'd8: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_rdly_dq_inc_w;
            end
            4'd9: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_rdly_dq_bitslip_rst_w;
            end
            4'd10: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_rdly_dq_bitslip_w;
            end
            4'd11: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wdly_dq_rst_w;
            end
            4'd12: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wdly_dq_inc_w;
            end
            4'd13: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wdly_dqs_rst_w;
            end
            4'd14: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wdly_dqs_inc_w;
            end
            4'd15: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wdly_dq_bitslip_rst_w;
            end
            5'd16: begin
                builder_interface1_bank_bus_dat_r <= main_k7ddrphy_wdly_dq_bitslip_w;
            end
            5'd17: begin
                builder_interface1_bank_bus_dat_r <= builder_csrbank1_rdphase0_w;
            end
            5'd18: begin
                builder_interface1_bank_bus_dat_r <= builder_csrbank1_wrphase0_w;
            end
        endcase
    end
    if (builder_csrbank1_rst0_re) begin
        main_k7ddrphy_rst_storage <= builder_csrbank1_rst0_r;
    end
    main_k7ddrphy_rst_re <= builder_csrbank1_rst0_re;
    if (builder_csrbank1_dly_sel0_re) begin
        main_k7ddrphy_dly_sel_storage <= builder_csrbank1_dly_sel0_r;
    end
    main_k7ddrphy_dly_sel_re <= builder_csrbank1_dly_sel0_re;
    if (builder_csrbank1_half_sys8x_taps0_re) begin
        main_k7ddrphy_half_sys8x_taps_storage <= builder_csrbank1_half_sys8x_taps0_r;
    end
    main_k7ddrphy_half_sys8x_taps_re <= builder_csrbank1_half_sys8x_taps0_re;
    if (builder_csrbank1_wlevel_en0_re) begin
        main_k7ddrphy_wlevel_en_storage <= builder_csrbank1_wlevel_en0_r;
    end
    main_k7ddrphy_wlevel_en_re <= builder_csrbank1_wlevel_en0_re;
    if (builder_csrbank1_rdphase0_re) begin
        main_k7ddrphy_rdphase_storage <= builder_csrbank1_rdphase0_r;
    end
    main_k7ddrphy_rdphase_re <= builder_csrbank1_rdphase0_re;
    if (builder_csrbank1_wrphase0_re) begin
        main_k7ddrphy_wrphase_storage <= builder_csrbank1_wrphase0_r;
    end
    main_k7ddrphy_wrphase_re <= builder_csrbank1_wrphase0_re;
    builder_interface2_bank_bus_dat_r <= 1'd0;
    if (builder_csrbank2_sel) begin
        case (builder_interface2_bank_bus_adr[8:0])
            1'd0: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_control0_w;
            end
            1'd1: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_command0_w;
            end
            2'd2: begin
                builder_interface2_bank_bus_dat_r <= main_litedramcore_phaseinjector0_command_issue_w;
            end
            2'd3: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_address0_w;
            end
            3'd4: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_wrdata1_w;
            end
            3'd6: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_wrdata0_w;
            end
            3'd7: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_rddata1_w;
            end
            4'd8: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi0_rddata0_w;
            end
            4'd9: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_command0_w;
            end
            4'd10: begin
                builder_interface2_bank_bus_dat_r <= main_litedramcore_phaseinjector1_command_issue_w;
            end
            4'd11: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_address0_w;
            end
            4'd12: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_baddress0_w;
            end
            4'd13: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_wrdata1_w;
            end
            4'd14: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_wrdata0_w;
            end
            4'd15: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_rddata1_w;
            end
            5'd16: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi1_rddata0_w;
            end
            5'd17: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_command0_w;
            end
            5'd18: begin
                builder_interface2_bank_bus_dat_r <= main_litedramcore_phaseinjector2_command_issue_w;
            end
            5'd19: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_address0_w;
            end
            5'd20: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_baddress0_w;
            end
            5'd21: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_wrdata1_w;
            end
            5'd22: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_wrdata0_w;
            end
            5'd23: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_rddata1_w;
            end
            5'd24: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi2_rddata0_w;
            end
            5'd25: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_command0_w;
            end
            5'd26: begin
                builder_interface2_bank_bus_dat_r <= main_litedramcore_phaseinjector3_command_issue_w;
            end
            5'd27: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_address0_w;
            end
            5'd28: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_baddress0_w;
            end
            5'd29: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_wrdata1_w;
            end
            5'd30: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_wrdata0_w;
            end
            5'd31: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_rddata1_w;
            end
            6'd32: begin
                builder_interface2_bank_bus_dat_r <= builder_csrbank2_dfii_pi3_rddata0_w;
            end
        endcase
    end
    if (builder_csrbank2_dfii_control0_re) begin
        main_litedramcore_storage <= builder_csrbank2_dfii_control0_r;
    end
    main_litedramcore_re <= builder_csrbank2_dfii_control0_re;
    if (builder_csrbank2_dfii_pi0_command0_re) begin
        main_litedramcore_phaseinjector0_command_storage <= builder_csrbank2_dfii_pi0_command0_r;
    end
    main_litedramcore_phaseinjector0_command_re <= builder_csrbank2_dfii_pi0_command0_re;
    if (builder_csrbank2_dfii_pi0_address0_re) begin
        main_litedramcore_phaseinjector0_address_storage <= builder_csrbank2_dfii_pi0_address0_r;
    end
    main_litedramcore_phaseinjector0_address_re <= builder_csrbank2_dfii_pi0_address0_re;
    if (builder_csrbank2_dfii_pi0_baddress0_re) begin
        main_litedramcore_phaseinjector0_baddress_storage <= builder_csrbank2_dfii_pi0_baddress0_r;
    end
    main_litedramcore_phaseinjector0_baddress_re <= builder_csrbank2_dfii_pi0_baddress0_re;
    if (builder_csrbank2_dfii_pi0_wrdata1_re) begin
        main_litedramcore_phaseinjector0_wrdata_storage[63:32] <= builder_csrbank2_dfii_pi0_wrdata1_r;
    end
    if (builder_csrbank2_dfii_pi0_wrdata0_re) begin
        main_litedramcore_phaseinjector0_wrdata_storage[31:0] <= builder_csrbank2_dfii_pi0_wrdata0_r;
    end
    main_litedramcore_phaseinjector0_wrdata_re <= builder_csrbank2_dfii_pi0_wrdata0_re;
    main_litedramcore_phaseinjector0_rddata_re <= builder_csrbank2_dfii_pi0_rddata0_re;
    if (builder_csrbank2_dfii_pi1_command0_re) begin
        main_litedramcore_phaseinjector1_command_storage <= builder_csrbank2_dfii_pi1_command0_r;
    end
    main_litedramcore_phaseinjector1_command_re <= builder_csrbank2_dfii_pi1_command0_re;
    if (builder_csrbank2_dfii_pi1_address0_re) begin
        main_litedramcore_phaseinjector1_address_storage <= builder_csrbank2_dfii_pi1_address0_r;
    end
    main_litedramcore_phaseinjector1_address_re <= builder_csrbank2_dfii_pi1_address0_re;
    if (builder_csrbank2_dfii_pi1_baddress0_re) begin
        main_litedramcore_phaseinjector1_baddress_storage <= builder_csrbank2_dfii_pi1_baddress0_r;
    end
    main_litedramcore_phaseinjector1_baddress_re <= builder_csrbank2_dfii_pi1_baddress0_re;
    if (builder_csrbank2_dfii_pi1_wrdata1_re) begin
        main_litedramcore_phaseinjector1_wrdata_storage[63:32] <= builder_csrbank2_dfii_pi1_wrdata1_r;
    end
    if (builder_csrbank2_dfii_pi1_wrdata0_re) begin
        main_litedramcore_phaseinjector1_wrdata_storage[31:0] <= builder_csrbank2_dfii_pi1_wrdata0_r;
    end
    main_litedramcore_phaseinjector1_wrdata_re <= builder_csrbank2_dfii_pi1_wrdata0_re;
    main_litedramcore_phaseinjector1_rddata_re <= builder_csrbank2_dfii_pi1_rddata0_re;
    if (builder_csrbank2_dfii_pi2_command0_re) begin
        main_litedramcore_phaseinjector2_command_storage <= builder_csrbank2_dfii_pi2_command0_r;
    end
    main_litedramcore_phaseinjector2_command_re <= builder_csrbank2_dfii_pi2_command0_re;
    if (builder_csrbank2_dfii_pi2_address0_re) begin
        main_litedramcore_phaseinjector2_address_storage <= builder_csrbank2_dfii_pi2_address0_r;
    end
    main_litedramcore_phaseinjector2_address_re <= builder_csrbank2_dfii_pi2_address0_re;
    if (builder_csrbank2_dfii_pi2_baddress0_re) begin
        main_litedramcore_phaseinjector2_baddress_storage <= builder_csrbank2_dfii_pi2_baddress0_r;
    end
    main_litedramcore_phaseinjector2_baddress_re <= builder_csrbank2_dfii_pi2_baddress0_re;
    if (builder_csrbank2_dfii_pi2_wrdata1_re) begin
        main_litedramcore_phaseinjector2_wrdata_storage[63:32] <= builder_csrbank2_dfii_pi2_wrdata1_r;
    end
    if (builder_csrbank2_dfii_pi2_wrdata0_re) begin
        main_litedramcore_phaseinjector2_wrdata_storage[31:0] <= builder_csrbank2_dfii_pi2_wrdata0_r;
    end
    main_litedramcore_phaseinjector2_wrdata_re <= builder_csrbank2_dfii_pi2_wrdata0_re;
    main_litedramcore_phaseinjector2_rddata_re <= builder_csrbank2_dfii_pi2_rddata0_re;
    if (builder_csrbank2_dfii_pi3_command0_re) begin
        main_litedramcore_phaseinjector3_command_storage <= builder_csrbank2_dfii_pi3_command0_r;
    end
    main_litedramcore_phaseinjector3_command_re <= builder_csrbank2_dfii_pi3_command0_re;
    if (builder_csrbank2_dfii_pi3_address0_re) begin
        main_litedramcore_phaseinjector3_address_storage <= builder_csrbank2_dfii_pi3_address0_r;
    end
    main_litedramcore_phaseinjector3_address_re <= builder_csrbank2_dfii_pi3_address0_re;
    if (builder_csrbank2_dfii_pi3_baddress0_re) begin
        main_litedramcore_phaseinjector3_baddress_storage <= builder_csrbank2_dfii_pi3_baddress0_r;
    end
    main_litedramcore_phaseinjector3_baddress_re <= builder_csrbank2_dfii_pi3_baddress0_re;
    if (builder_csrbank2_dfii_pi3_wrdata1_re) begin
        main_litedramcore_phaseinjector3_wrdata_storage[63:32] <= builder_csrbank2_dfii_pi3_wrdata1_r;
    end
    if (builder_csrbank2_dfii_pi3_wrdata0_re) begin
        main_litedramcore_phaseinjector3_wrdata_storage[31:0] <= builder_csrbank2_dfii_pi3_wrdata0_r;
    end
    main_litedramcore_phaseinjector3_wrdata_re <= builder_csrbank2_dfii_pi3_wrdata0_re;
    main_litedramcore_phaseinjector3_rddata_re <= builder_csrbank2_dfii_pi3_rddata0_re;
    if (sys_rst) begin
        main_k7ddrphy_rst_storage <= 1'd0;
        main_k7ddrphy_rst_re <= 1'd0;
        main_k7ddrphy_dly_sel_storage <= 4'd0;
        main_k7ddrphy_dly_sel_re <= 1'd0;
        main_k7ddrphy_half_sys8x_taps_storage <= 5'd8;
        main_k7ddrphy_half_sys8x_taps_re <= 1'd0;
        main_k7ddrphy_wlevel_en_storage <= 1'd0;
        main_k7ddrphy_wlevel_en_re <= 1'd0;
        main_k7ddrphy_rdphase_storage <= 2'd1;
        main_k7ddrphy_rdphase_re <= 1'd0;
        main_k7ddrphy_wrphase_storage <= 2'd2;
        main_k7ddrphy_wrphase_re <= 1'd0;
        main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
        main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
        main_k7ddrphy_bitslip0_value0 <= 3'd7;
        main_k7ddrphy_bitslip1_value0 <= 3'd7;
        main_k7ddrphy_bitslip2_value0 <= 3'd7;
        main_k7ddrphy_bitslip3_value0 <= 3'd7;
        main_k7ddrphy_bitslip0_value1 <= 3'd7;
        main_k7ddrphy_bitslip1_value1 <= 3'd7;
        main_k7ddrphy_bitslip2_value1 <= 3'd7;
        main_k7ddrphy_bitslip3_value1 <= 3'd7;
        main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
        main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
        main_k7ddrphy_bitslip0_value2 <= 3'd7;
        main_k7ddrphy_bitslip0_value3 <= 3'd7;
        main_k7ddrphy_bitslip1_value2 <= 3'd7;
        main_k7ddrphy_bitslip1_value3 <= 3'd7;
        main_k7ddrphy_bitslip2_value2 <= 3'd7;
        main_k7ddrphy_bitslip2_value3 <= 3'd7;
        main_k7ddrphy_bitslip3_value2 <= 3'd7;
        main_k7ddrphy_bitslip3_value3 <= 3'd7;
        main_k7ddrphy_bitslip4_value0 <= 3'd7;
        main_k7ddrphy_bitslip4_value1 <= 3'd7;
        main_k7ddrphy_bitslip5_value0 <= 3'd7;
        main_k7ddrphy_bitslip5_value1 <= 3'd7;
        main_k7ddrphy_bitslip6_value0 <= 3'd7;
        main_k7ddrphy_bitslip6_value1 <= 3'd7;
        main_k7ddrphy_bitslip7_value0 <= 3'd7;
        main_k7ddrphy_bitslip7_value1 <= 3'd7;
        main_k7ddrphy_bitslip8_value0 <= 3'd7;
        main_k7ddrphy_bitslip8_value1 <= 3'd7;
        main_k7ddrphy_bitslip9_value0 <= 3'd7;
        main_k7ddrphy_bitslip9_value1 <= 3'd7;
        main_k7ddrphy_bitslip10_value0 <= 3'd7;
        main_k7ddrphy_bitslip10_value1 <= 3'd7;
        main_k7ddrphy_bitslip11_value0 <= 3'd7;
        main_k7ddrphy_bitslip11_value1 <= 3'd7;
        main_k7ddrphy_bitslip12_value0 <= 3'd7;
        main_k7ddrphy_bitslip12_value1 <= 3'd7;
        main_k7ddrphy_bitslip13_value0 <= 3'd7;
        main_k7ddrphy_bitslip13_value1 <= 3'd7;
        main_k7ddrphy_bitslip14_value0 <= 3'd7;
        main_k7ddrphy_bitslip14_value1 <= 3'd7;
        main_k7ddrphy_bitslip15_value0 <= 3'd7;
        main_k7ddrphy_bitslip15_value1 <= 3'd7;
        main_k7ddrphy_bitslip16_value0 <= 3'd7;
        main_k7ddrphy_bitslip16_value1 <= 3'd7;
        main_k7ddrphy_bitslip17_value0 <= 3'd7;
        main_k7ddrphy_bitslip17_value1 <= 3'd7;
        main_k7ddrphy_bitslip18_value0 <= 3'd7;
        main_k7ddrphy_bitslip18_value1 <= 3'd7;
        main_k7ddrphy_bitslip19_value0 <= 3'd7;
        main_k7ddrphy_bitslip19_value1 <= 3'd7;
        main_k7ddrphy_bitslip20_value0 <= 3'd7;
        main_k7ddrphy_bitslip20_value1 <= 3'd7;
        main_k7ddrphy_bitslip21_value0 <= 3'd7;
        main_k7ddrphy_bitslip21_value1 <= 3'd7;
        main_k7ddrphy_bitslip22_value0 <= 3'd7;
        main_k7ddrphy_bitslip22_value1 <= 3'd7;
        main_k7ddrphy_bitslip23_value0 <= 3'd7;
        main_k7ddrphy_bitslip23_value1 <= 3'd7;
        main_k7ddrphy_bitslip24_value0 <= 3'd7;
        main_k7ddrphy_bitslip24_value1 <= 3'd7;
        main_k7ddrphy_bitslip25_value0 <= 3'd7;
        main_k7ddrphy_bitslip25_value1 <= 3'd7;
        main_k7ddrphy_bitslip26_value0 <= 3'd7;
        main_k7ddrphy_bitslip26_value1 <= 3'd7;
        main_k7ddrphy_bitslip27_value0 <= 3'd7;
        main_k7ddrphy_bitslip27_value1 <= 3'd7;
        main_k7ddrphy_bitslip28_value0 <= 3'd7;
        main_k7ddrphy_bitslip28_value1 <= 3'd7;
        main_k7ddrphy_bitslip29_value0 <= 3'd7;
        main_k7ddrphy_bitslip29_value1 <= 3'd7;
        main_k7ddrphy_bitslip30_value0 <= 3'd7;
        main_k7ddrphy_bitslip30_value1 <= 3'd7;
        main_k7ddrphy_bitslip31_value0 <= 3'd7;
        main_k7ddrphy_bitslip31_value1 <= 3'd7;
        main_k7ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
        main_k7ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
        main_k7ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
        main_k7ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
        main_k7ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
        main_litedramcore_storage <= 4'd1;
        main_litedramcore_re <= 1'd0;
        main_litedramcore_phaseinjector0_command_storage <= 8'd0;
        main_litedramcore_phaseinjector0_command_re <= 1'd0;
        main_litedramcore_phaseinjector0_address_re <= 1'd0;
        main_litedramcore_phaseinjector0_baddress_re <= 1'd0;
        main_litedramcore_phaseinjector0_wrdata_re <= 1'd0;
        main_litedramcore_phaseinjector0_rddata_status <= 64'd0;
        main_litedramcore_phaseinjector0_rddata_re <= 1'd0;
        main_litedramcore_phaseinjector1_command_storage <= 8'd0;
        main_litedramcore_phaseinjector1_command_re <= 1'd0;
        main_litedramcore_phaseinjector1_address_re <= 1'd0;
        main_litedramcore_phaseinjector1_baddress_re <= 1'd0;
        main_litedramcore_phaseinjector1_wrdata_re <= 1'd0;
        main_litedramcore_phaseinjector1_rddata_status <= 64'd0;
        main_litedramcore_phaseinjector1_rddata_re <= 1'd0;
        main_litedramcore_phaseinjector2_command_storage <= 8'd0;
        main_litedramcore_phaseinjector2_command_re <= 1'd0;
        main_litedramcore_phaseinjector2_address_re <= 1'd0;
        main_litedramcore_phaseinjector2_baddress_re <= 1'd0;
        main_litedramcore_phaseinjector2_wrdata_re <= 1'd0;
        main_litedramcore_phaseinjector2_rddata_status <= 64'd0;
        main_litedramcore_phaseinjector2_rddata_re <= 1'd0;
        main_litedramcore_phaseinjector3_command_storage <= 8'd0;
        main_litedramcore_phaseinjector3_command_re <= 1'd0;
        main_litedramcore_phaseinjector3_address_re <= 1'd0;
        main_litedramcore_phaseinjector3_baddress_re <= 1'd0;
        main_litedramcore_phaseinjector3_wrdata_re <= 1'd0;
        main_litedramcore_phaseinjector3_rddata_status <= 64'd0;
        main_litedramcore_phaseinjector3_rddata_re <= 1'd0;
        main_litedramcore_dfi_p0_address <= 15'd0;
        main_litedramcore_dfi_p0_bank <= 3'd0;
        main_litedramcore_dfi_p0_cas_n <= 1'd1;
        main_litedramcore_dfi_p0_cs_n <= 1'd1;
        main_litedramcore_dfi_p0_ras_n <= 1'd1;
        main_litedramcore_dfi_p0_we_n <= 1'd1;
        main_litedramcore_dfi_p0_wrdata_en <= 1'd0;
        main_litedramcore_dfi_p0_rddata_en <= 1'd0;
        main_litedramcore_dfi_p1_address <= 15'd0;
        main_litedramcore_dfi_p1_bank <= 3'd0;
        main_litedramcore_dfi_p1_cas_n <= 1'd1;
        main_litedramcore_dfi_p1_cs_n <= 1'd1;
        main_litedramcore_dfi_p1_ras_n <= 1'd1;
        main_litedramcore_dfi_p1_we_n <= 1'd1;
        main_litedramcore_dfi_p1_wrdata_en <= 1'd0;
        main_litedramcore_dfi_p1_rddata_en <= 1'd0;
        main_litedramcore_dfi_p2_address <= 15'd0;
        main_litedramcore_dfi_p2_bank <= 3'd0;
        main_litedramcore_dfi_p2_cas_n <= 1'd1;
        main_litedramcore_dfi_p2_cs_n <= 1'd1;
        main_litedramcore_dfi_p2_ras_n <= 1'd1;
        main_litedramcore_dfi_p2_we_n <= 1'd1;
        main_litedramcore_dfi_p2_wrdata_en <= 1'd0;
        main_litedramcore_dfi_p2_rddata_en <= 1'd0;
        main_litedramcore_dfi_p3_address <= 15'd0;
        main_litedramcore_dfi_p3_bank <= 3'd0;
        main_litedramcore_dfi_p3_cas_n <= 1'd1;
        main_litedramcore_dfi_p3_cs_n <= 1'd1;
        main_litedramcore_dfi_p3_ras_n <= 1'd1;
        main_litedramcore_dfi_p3_we_n <= 1'd1;
        main_litedramcore_dfi_p3_wrdata_en <= 1'd0;
        main_litedramcore_dfi_p3_rddata_en <= 1'd0;
        main_litedramcore_cmd_payload_a <= 15'd0;
        main_litedramcore_cmd_payload_ba <= 3'd0;
        main_litedramcore_cmd_payload_cas <= 1'd0;
        main_litedramcore_cmd_payload_ras <= 1'd0;
        main_litedramcore_cmd_payload_we <= 1'd0;
        main_litedramcore_timer_count1 <= 10'd781;
        main_litedramcore_postponer_req_o <= 1'd0;
        main_litedramcore_postponer_count <= 1'd0;
        main_litedramcore_sequencer_done1 <= 1'd0;
        main_litedramcore_sequencer_trigger <= 6'd0;
        main_litedramcore_sequencer_count <= 1'd0;
        main_litedramcore_zqcs_timer_count1 <= 27'd99999999;
        main_litedramcore_zqcs_executer_done <= 1'd0;
        main_litedramcore_zqcs_executer_trigger <= 5'd0;
        main_litedramcore_bankmachine0_level <= 5'd0;
        main_litedramcore_bankmachine0_produce <= 4'd0;
        main_litedramcore_bankmachine0_consume <= 4'd0;
        main_litedramcore_bankmachine0_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine0_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine0_row <= 15'd0;
        main_litedramcore_bankmachine0_row_opened <= 1'd0;
        main_litedramcore_bankmachine0_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine0_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine0_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine0_trccon_count <= 3'd0;
        main_litedramcore_bankmachine0_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine0_trascon_count <= 3'd0;
        main_litedramcore_bankmachine1_level <= 5'd0;
        main_litedramcore_bankmachine1_produce <= 4'd0;
        main_litedramcore_bankmachine1_consume <= 4'd0;
        main_litedramcore_bankmachine1_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine1_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine1_row <= 15'd0;
        main_litedramcore_bankmachine1_row_opened <= 1'd0;
        main_litedramcore_bankmachine1_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine1_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine1_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine1_trccon_count <= 3'd0;
        main_litedramcore_bankmachine1_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine1_trascon_count <= 3'd0;
        main_litedramcore_bankmachine2_level <= 5'd0;
        main_litedramcore_bankmachine2_produce <= 4'd0;
        main_litedramcore_bankmachine2_consume <= 4'd0;
        main_litedramcore_bankmachine2_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine2_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine2_row <= 15'd0;
        main_litedramcore_bankmachine2_row_opened <= 1'd0;
        main_litedramcore_bankmachine2_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine2_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine2_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine2_trccon_count <= 3'd0;
        main_litedramcore_bankmachine2_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine2_trascon_count <= 3'd0;
        main_litedramcore_bankmachine3_level <= 5'd0;
        main_litedramcore_bankmachine3_produce <= 4'd0;
        main_litedramcore_bankmachine3_consume <= 4'd0;
        main_litedramcore_bankmachine3_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine3_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine3_row <= 15'd0;
        main_litedramcore_bankmachine3_row_opened <= 1'd0;
        main_litedramcore_bankmachine3_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine3_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine3_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine3_trccon_count <= 3'd0;
        main_litedramcore_bankmachine3_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine3_trascon_count <= 3'd0;
        main_litedramcore_bankmachine4_level <= 5'd0;
        main_litedramcore_bankmachine4_produce <= 4'd0;
        main_litedramcore_bankmachine4_consume <= 4'd0;
        main_litedramcore_bankmachine4_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine4_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine4_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine4_row <= 15'd0;
        main_litedramcore_bankmachine4_row_opened <= 1'd0;
        main_litedramcore_bankmachine4_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine4_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine4_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine4_trccon_count <= 3'd0;
        main_litedramcore_bankmachine4_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine4_trascon_count <= 3'd0;
        main_litedramcore_bankmachine5_level <= 5'd0;
        main_litedramcore_bankmachine5_produce <= 4'd0;
        main_litedramcore_bankmachine5_consume <= 4'd0;
        main_litedramcore_bankmachine5_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine5_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine5_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine5_row <= 15'd0;
        main_litedramcore_bankmachine5_row_opened <= 1'd0;
        main_litedramcore_bankmachine5_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine5_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine5_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine5_trccon_count <= 3'd0;
        main_litedramcore_bankmachine5_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine5_trascon_count <= 3'd0;
        main_litedramcore_bankmachine6_level <= 5'd0;
        main_litedramcore_bankmachine6_produce <= 4'd0;
        main_litedramcore_bankmachine6_consume <= 4'd0;
        main_litedramcore_bankmachine6_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine6_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine6_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine6_row <= 15'd0;
        main_litedramcore_bankmachine6_row_opened <= 1'd0;
        main_litedramcore_bankmachine6_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine6_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine6_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine6_trccon_count <= 3'd0;
        main_litedramcore_bankmachine6_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine6_trascon_count <= 3'd0;
        main_litedramcore_bankmachine7_level <= 5'd0;
        main_litedramcore_bankmachine7_produce <= 4'd0;
        main_litedramcore_bankmachine7_consume <= 4'd0;
        main_litedramcore_bankmachine7_pipe_valid_source_valid <= 1'd0;
        main_litedramcore_bankmachine7_pipe_valid_source_payload_we <= 1'd0;
        main_litedramcore_bankmachine7_pipe_valid_source_payload_addr <= 22'd0;
        main_litedramcore_bankmachine7_row <= 15'd0;
        main_litedramcore_bankmachine7_row_opened <= 1'd0;
        main_litedramcore_bankmachine7_twtpcon_ready <= 1'd0;
        main_litedramcore_bankmachine7_twtpcon_count <= 3'd0;
        main_litedramcore_bankmachine7_trccon_ready <= 1'd0;
        main_litedramcore_bankmachine7_trccon_count <= 3'd0;
        main_litedramcore_bankmachine7_trascon_ready <= 1'd0;
        main_litedramcore_bankmachine7_trascon_count <= 3'd0;
        main_litedramcore_choose_cmd_grant <= 3'd0;
        main_litedramcore_choose_req_grant <= 3'd0;
        main_litedramcore_trrdcon_ready <= 1'd0;
        main_litedramcore_trrdcon_count <= 1'd0;
        main_litedramcore_tfawcon_ready <= 1'd1;
        main_litedramcore_tfawcon_window <= 5'd0;
        main_litedramcore_tccdcon_ready <= 1'd0;
        main_litedramcore_tccdcon_count <= 1'd0;
        main_litedramcore_twtrcon_ready <= 1'd0;
        main_litedramcore_twtrcon_count <= 3'd0;
        main_litedramcore_time0 <= 5'd0;
        main_litedramcore_time1 <= 4'd0;
        main_init_done_storage <= 1'd0;
        main_init_done_re <= 1'd0;
        main_init_error_storage <= 1'd0;
        main_init_error_re <= 1'd0;
        builder_interface1_re <= 1'd0;
        builder_interface1_we <= 1'd0;
        builder_refresher_state <= 2'd0;
        builder_bankmachine0_state <= 4'd0;
        builder_bankmachine1_state <= 4'd0;
        builder_bankmachine2_state <= 4'd0;
        builder_bankmachine3_state <= 4'd0;
        builder_bankmachine4_state <= 4'd0;
        builder_bankmachine5_state <= 4'd0;
        builder_bankmachine6_state <= 4'd0;
        builder_bankmachine7_state <= 4'd0;
        builder_multiplexer_state <= 4'd0;
        builder_new_master_wdata_ready0 <= 1'd0;
        builder_new_master_wdata_ready1 <= 1'd0;
        builder_new_master_rdata_valid0 <= 1'd0;
        builder_new_master_rdata_valid1 <= 1'd0;
        builder_new_master_rdata_valid2 <= 1'd0;
        builder_new_master_rdata_valid3 <= 1'd0;
        builder_new_master_rdata_valid4 <= 1'd0;
        builder_new_master_rdata_valid5 <= 1'd0;
        builder_new_master_rdata_valid6 <= 1'd0;
        builder_new_master_rdata_valid7 <= 1'd0;
        builder_new_master_rdata_valid8 <= 1'd0;
        builder_state <= 2'd0;
    end
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Instance BUFG of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG(
	// Inputs.
	.I (main_clkout0),

	// Outputs.
	.O (main_clkout_buf0)
);

//------------------------------------------------------------------------------
// Instance BUFG_1 of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG_1(
	// Inputs.
	.I (main_clkout1),

	// Outputs.
	.O (main_clkout_buf1)
);

//------------------------------------------------------------------------------
// Instance BUFG_2 of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG_2(
	// Inputs.
	.I (main_clkout2),

	// Outputs.
	.O (main_clkout_buf2)
);

//------------------------------------------------------------------------------
// Instance BUFG_3 of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG_3(
	// Inputs.
	.I (main_clkout3),

	// Outputs.
	.O (main_clkout_buf3)
);

//------------------------------------------------------------------------------
// Instance IDELAYCTRL of IDELAYCTRL Module.
//------------------------------------------------------------------------------
IDELAYCTRL IDELAYCTRL(
	// Inputs.
	.REFCLK (iodelay_clk),
	.RST    (main_ic_reset)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (1'd0),
	.D2     (1'd1),
	.D3     (1'd0),
	.D4     (1'd1),
	.D5     (1'd0),
	.D6     (1'd1),
	.D7     (1'd0),
	.D8     (1'd1),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_sd_clk_se_nodelay)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_sd_clk_se_delayed),
	.ODATAIN  (main_k7ddrphy_sd_clk_se_nodelay)
);

//------------------------------------------------------------------------------
// Instance OBUFDS of OBUFDS Module.
//------------------------------------------------------------------------------
OBUFDS OBUFDS(
	// Inputs.
	.I  (main_k7ddrphy_sd_clk_se_delayed),

	// Outputs.
	.O  (ddram_clk_p),
	.OB (ddram_clk_n)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_1 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_1 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_reset_n),
	.D2     (main_k7ddrphy_dfi_p0_reset_n),
	.D3     (main_k7ddrphy_dfi_p1_reset_n),
	.D4     (main_k7ddrphy_dfi_p1_reset_n),
	.D5     (main_k7ddrphy_dfi_p2_reset_n),
	.D6     (main_k7ddrphy_dfi_p2_reset_n),
	.D7     (main_k7ddrphy_dfi_p3_reset_n),
	.D8     (main_k7ddrphy_dfi_p3_reset_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq0)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_1 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_1 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_reset_n),
	.ODATAIN  (main_k7ddrphy_oq0)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_2 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_2 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_cs_n),
	.D2     (main_k7ddrphy_dfi_p0_cs_n),
	.D3     (main_k7ddrphy_dfi_p1_cs_n),
	.D4     (main_k7ddrphy_dfi_p1_cs_n),
	.D5     (main_k7ddrphy_dfi_p2_cs_n),
	.D6     (main_k7ddrphy_dfi_p2_cs_n),
	.D7     (main_k7ddrphy_dfi_p3_cs_n),
	.D8     (main_k7ddrphy_dfi_p3_cs_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq1)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_2 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_2 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_cs_n),
	.ODATAIN  (main_k7ddrphy_oq1)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_3 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_3 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[0]),
	.D2     (main_k7ddrphy_dfi_p0_address[0]),
	.D3     (main_k7ddrphy_dfi_p1_address[0]),
	.D4     (main_k7ddrphy_dfi_p1_address[0]),
	.D5     (main_k7ddrphy_dfi_p2_address[0]),
	.D6     (main_k7ddrphy_dfi_p2_address[0]),
	.D7     (main_k7ddrphy_dfi_p3_address[0]),
	.D8     (main_k7ddrphy_dfi_p3_address[0]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq2)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_3 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_3 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[0]),
	.ODATAIN  (main_k7ddrphy_oq2)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_4 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_4 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[1]),
	.D2     (main_k7ddrphy_dfi_p0_address[1]),
	.D3     (main_k7ddrphy_dfi_p1_address[1]),
	.D4     (main_k7ddrphy_dfi_p1_address[1]),
	.D5     (main_k7ddrphy_dfi_p2_address[1]),
	.D6     (main_k7ddrphy_dfi_p2_address[1]),
	.D7     (main_k7ddrphy_dfi_p3_address[1]),
	.D8     (main_k7ddrphy_dfi_p3_address[1]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq3)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_4 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_4 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[1]),
	.ODATAIN  (main_k7ddrphy_oq3)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_5 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_5 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[2]),
	.D2     (main_k7ddrphy_dfi_p0_address[2]),
	.D3     (main_k7ddrphy_dfi_p1_address[2]),
	.D4     (main_k7ddrphy_dfi_p1_address[2]),
	.D5     (main_k7ddrphy_dfi_p2_address[2]),
	.D6     (main_k7ddrphy_dfi_p2_address[2]),
	.D7     (main_k7ddrphy_dfi_p3_address[2]),
	.D8     (main_k7ddrphy_dfi_p3_address[2]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq4)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_5 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_5 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[2]),
	.ODATAIN  (main_k7ddrphy_oq4)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_6 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_6 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[3]),
	.D2     (main_k7ddrphy_dfi_p0_address[3]),
	.D3     (main_k7ddrphy_dfi_p1_address[3]),
	.D4     (main_k7ddrphy_dfi_p1_address[3]),
	.D5     (main_k7ddrphy_dfi_p2_address[3]),
	.D6     (main_k7ddrphy_dfi_p2_address[3]),
	.D7     (main_k7ddrphy_dfi_p3_address[3]),
	.D8     (main_k7ddrphy_dfi_p3_address[3]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq5)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_6 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_6 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[3]),
	.ODATAIN  (main_k7ddrphy_oq5)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_7 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_7 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[4]),
	.D2     (main_k7ddrphy_dfi_p0_address[4]),
	.D3     (main_k7ddrphy_dfi_p1_address[4]),
	.D4     (main_k7ddrphy_dfi_p1_address[4]),
	.D5     (main_k7ddrphy_dfi_p2_address[4]),
	.D6     (main_k7ddrphy_dfi_p2_address[4]),
	.D7     (main_k7ddrphy_dfi_p3_address[4]),
	.D8     (main_k7ddrphy_dfi_p3_address[4]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq6)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_7 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_7 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[4]),
	.ODATAIN  (main_k7ddrphy_oq6)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_8 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_8 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[5]),
	.D2     (main_k7ddrphy_dfi_p0_address[5]),
	.D3     (main_k7ddrphy_dfi_p1_address[5]),
	.D4     (main_k7ddrphy_dfi_p1_address[5]),
	.D5     (main_k7ddrphy_dfi_p2_address[5]),
	.D6     (main_k7ddrphy_dfi_p2_address[5]),
	.D7     (main_k7ddrphy_dfi_p3_address[5]),
	.D8     (main_k7ddrphy_dfi_p3_address[5]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq7)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_8 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_8 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[5]),
	.ODATAIN  (main_k7ddrphy_oq7)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_9 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_9 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[6]),
	.D2     (main_k7ddrphy_dfi_p0_address[6]),
	.D3     (main_k7ddrphy_dfi_p1_address[6]),
	.D4     (main_k7ddrphy_dfi_p1_address[6]),
	.D5     (main_k7ddrphy_dfi_p2_address[6]),
	.D6     (main_k7ddrphy_dfi_p2_address[6]),
	.D7     (main_k7ddrphy_dfi_p3_address[6]),
	.D8     (main_k7ddrphy_dfi_p3_address[6]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq8)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_9 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_9 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[6]),
	.ODATAIN  (main_k7ddrphy_oq8)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_10 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_10 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[7]),
	.D2     (main_k7ddrphy_dfi_p0_address[7]),
	.D3     (main_k7ddrphy_dfi_p1_address[7]),
	.D4     (main_k7ddrphy_dfi_p1_address[7]),
	.D5     (main_k7ddrphy_dfi_p2_address[7]),
	.D6     (main_k7ddrphy_dfi_p2_address[7]),
	.D7     (main_k7ddrphy_dfi_p3_address[7]),
	.D8     (main_k7ddrphy_dfi_p3_address[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq9)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_10 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_10 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[7]),
	.ODATAIN  (main_k7ddrphy_oq9)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_11 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_11 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[8]),
	.D2     (main_k7ddrphy_dfi_p0_address[8]),
	.D3     (main_k7ddrphy_dfi_p1_address[8]),
	.D4     (main_k7ddrphy_dfi_p1_address[8]),
	.D5     (main_k7ddrphy_dfi_p2_address[8]),
	.D6     (main_k7ddrphy_dfi_p2_address[8]),
	.D7     (main_k7ddrphy_dfi_p3_address[8]),
	.D8     (main_k7ddrphy_dfi_p3_address[8]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq10)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_11 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_11 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[8]),
	.ODATAIN  (main_k7ddrphy_oq10)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_12 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_12 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[9]),
	.D2     (main_k7ddrphy_dfi_p0_address[9]),
	.D3     (main_k7ddrphy_dfi_p1_address[9]),
	.D4     (main_k7ddrphy_dfi_p1_address[9]),
	.D5     (main_k7ddrphy_dfi_p2_address[9]),
	.D6     (main_k7ddrphy_dfi_p2_address[9]),
	.D7     (main_k7ddrphy_dfi_p3_address[9]),
	.D8     (main_k7ddrphy_dfi_p3_address[9]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq11)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_12 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_12 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[9]),
	.ODATAIN  (main_k7ddrphy_oq11)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_13 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_13 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[10]),
	.D2     (main_k7ddrphy_dfi_p0_address[10]),
	.D3     (main_k7ddrphy_dfi_p1_address[10]),
	.D4     (main_k7ddrphy_dfi_p1_address[10]),
	.D5     (main_k7ddrphy_dfi_p2_address[10]),
	.D6     (main_k7ddrphy_dfi_p2_address[10]),
	.D7     (main_k7ddrphy_dfi_p3_address[10]),
	.D8     (main_k7ddrphy_dfi_p3_address[10]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq12)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_13 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_13 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[10]),
	.ODATAIN  (main_k7ddrphy_oq12)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_14 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_14 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[11]),
	.D2     (main_k7ddrphy_dfi_p0_address[11]),
	.D3     (main_k7ddrphy_dfi_p1_address[11]),
	.D4     (main_k7ddrphy_dfi_p1_address[11]),
	.D5     (main_k7ddrphy_dfi_p2_address[11]),
	.D6     (main_k7ddrphy_dfi_p2_address[11]),
	.D7     (main_k7ddrphy_dfi_p3_address[11]),
	.D8     (main_k7ddrphy_dfi_p3_address[11]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq13)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_14 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_14 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[11]),
	.ODATAIN  (main_k7ddrphy_oq13)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_15 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_15 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[12]),
	.D2     (main_k7ddrphy_dfi_p0_address[12]),
	.D3     (main_k7ddrphy_dfi_p1_address[12]),
	.D4     (main_k7ddrphy_dfi_p1_address[12]),
	.D5     (main_k7ddrphy_dfi_p2_address[12]),
	.D6     (main_k7ddrphy_dfi_p2_address[12]),
	.D7     (main_k7ddrphy_dfi_p3_address[12]),
	.D8     (main_k7ddrphy_dfi_p3_address[12]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq14)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_15 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_15 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[12]),
	.ODATAIN  (main_k7ddrphy_oq14)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_16 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_16 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[13]),
	.D2     (main_k7ddrphy_dfi_p0_address[13]),
	.D3     (main_k7ddrphy_dfi_p1_address[13]),
	.D4     (main_k7ddrphy_dfi_p1_address[13]),
	.D5     (main_k7ddrphy_dfi_p2_address[13]),
	.D6     (main_k7ddrphy_dfi_p2_address[13]),
	.D7     (main_k7ddrphy_dfi_p3_address[13]),
	.D8     (main_k7ddrphy_dfi_p3_address[13]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq15)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_16 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_16 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[13]),
	.ODATAIN  (main_k7ddrphy_oq15)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_17 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_17 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_address[14]),
	.D2     (main_k7ddrphy_dfi_p0_address[14]),
	.D3     (main_k7ddrphy_dfi_p1_address[14]),
	.D4     (main_k7ddrphy_dfi_p1_address[14]),
	.D5     (main_k7ddrphy_dfi_p2_address[14]),
	.D6     (main_k7ddrphy_dfi_p2_address[14]),
	.D7     (main_k7ddrphy_dfi_p3_address[14]),
	.D8     (main_k7ddrphy_dfi_p3_address[14]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq16)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_17 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_17 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[14]),
	.ODATAIN  (main_k7ddrphy_oq16)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_18 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_18 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_bank[0]),
	.D2     (main_k7ddrphy_dfi_p0_bank[0]),
	.D3     (main_k7ddrphy_dfi_p1_bank[0]),
	.D4     (main_k7ddrphy_dfi_p1_bank[0]),
	.D5     (main_k7ddrphy_dfi_p2_bank[0]),
	.D6     (main_k7ddrphy_dfi_p2_bank[0]),
	.D7     (main_k7ddrphy_dfi_p3_bank[0]),
	.D8     (main_k7ddrphy_dfi_p3_bank[0]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq17)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_18 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_18 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_pads_ba[0]),
	.ODATAIN  (main_k7ddrphy_oq17)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_19 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_19 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_bank[1]),
	.D2     (main_k7ddrphy_dfi_p0_bank[1]),
	.D3     (main_k7ddrphy_dfi_p1_bank[1]),
	.D4     (main_k7ddrphy_dfi_p1_bank[1]),
	.D5     (main_k7ddrphy_dfi_p2_bank[1]),
	.D6     (main_k7ddrphy_dfi_p2_bank[1]),
	.D7     (main_k7ddrphy_dfi_p3_bank[1]),
	.D8     (main_k7ddrphy_dfi_p3_bank[1]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq18)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_19 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_19 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_pads_ba[1]),
	.ODATAIN  (main_k7ddrphy_oq18)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_20 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_20 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_bank[2]),
	.D2     (main_k7ddrphy_dfi_p0_bank[2]),
	.D3     (main_k7ddrphy_dfi_p1_bank[2]),
	.D4     (main_k7ddrphy_dfi_p1_bank[2]),
	.D5     (main_k7ddrphy_dfi_p2_bank[2]),
	.D6     (main_k7ddrphy_dfi_p2_bank[2]),
	.D7     (main_k7ddrphy_dfi_p3_bank[2]),
	.D8     (main_k7ddrphy_dfi_p3_bank[2]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq19)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_20 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_20 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_pads_ba[2]),
	.ODATAIN  (main_k7ddrphy_oq19)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_21 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_21 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_ras_n),
	.D2     (main_k7ddrphy_dfi_p0_ras_n),
	.D3     (main_k7ddrphy_dfi_p1_ras_n),
	.D4     (main_k7ddrphy_dfi_p1_ras_n),
	.D5     (main_k7ddrphy_dfi_p2_ras_n),
	.D6     (main_k7ddrphy_dfi_p2_ras_n),
	.D7     (main_k7ddrphy_dfi_p3_ras_n),
	.D8     (main_k7ddrphy_dfi_p3_ras_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq20)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_21 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_21 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_ras_n),
	.ODATAIN  (main_k7ddrphy_oq20)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_22 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_22 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_cas_n),
	.D2     (main_k7ddrphy_dfi_p0_cas_n),
	.D3     (main_k7ddrphy_dfi_p1_cas_n),
	.D4     (main_k7ddrphy_dfi_p1_cas_n),
	.D5     (main_k7ddrphy_dfi_p2_cas_n),
	.D6     (main_k7ddrphy_dfi_p2_cas_n),
	.D7     (main_k7ddrphy_dfi_p3_cas_n),
	.D8     (main_k7ddrphy_dfi_p3_cas_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq21)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_22 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_22 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_cas_n),
	.ODATAIN  (main_k7ddrphy_oq21)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_23 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_23 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_we_n),
	.D2     (main_k7ddrphy_dfi_p0_we_n),
	.D3     (main_k7ddrphy_dfi_p1_we_n),
	.D4     (main_k7ddrphy_dfi_p1_we_n),
	.D5     (main_k7ddrphy_dfi_p2_we_n),
	.D6     (main_k7ddrphy_dfi_p2_we_n),
	.D7     (main_k7ddrphy_dfi_p3_we_n),
	.D8     (main_k7ddrphy_dfi_p3_we_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq22)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_23 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_23 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_we_n),
	.ODATAIN  (main_k7ddrphy_oq22)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_24 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_24 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_cke),
	.D2     (main_k7ddrphy_dfi_p0_cke),
	.D3     (main_k7ddrphy_dfi_p1_cke),
	.D4     (main_k7ddrphy_dfi_p1_cke),
	.D5     (main_k7ddrphy_dfi_p2_cke),
	.D6     (main_k7ddrphy_dfi_p2_cke),
	.D7     (main_k7ddrphy_dfi_p3_cke),
	.D8     (main_k7ddrphy_dfi_p3_cke),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq23)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_24 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_24 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_cke),
	.ODATAIN  (main_k7ddrphy_oq23)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_25 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_25 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_dfi_p0_odt),
	.D2     (main_k7ddrphy_dfi_p0_odt),
	.D3     (main_k7ddrphy_dfi_p1_odt),
	.D4     (main_k7ddrphy_dfi_p1_odt),
	.D5     (main_k7ddrphy_dfi_p2_odt),
	.D6     (main_k7ddrphy_dfi_p2_odt),
	.D7     (main_k7ddrphy_dfi_p3_odt),
	.D8     (main_k7ddrphy_dfi_p3_odt),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_oq24)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_25 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_25 (
	// Inputs.
	.C        (sys_clk),
	.CE       (main_k7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_cdly_rst_re | main_k7ddrphy_rst_storage) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_odt),
	.ODATAIN  (main_k7ddrphy_oq24)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_26 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_26 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip00[0]),
	.D2     (main_k7ddrphy_bitslip00[1]),
	.D3     (main_k7ddrphy_bitslip00[2]),
	.D4     (main_k7ddrphy_bitslip00[3]),
	.D5     (main_k7ddrphy_bitslip00[4]),
	.D6     (main_k7ddrphy_bitslip00[5]),
	.D7     (main_k7ddrphy_bitslip00[6]),
	.D8     (main_k7ddrphy_bitslip00[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (main_k7ddrphy_dqs_o_no_delay0),
	.OQ     (main_k7ddrphy0),
	.TQ     (main_k7ddrphy_dqs_t0)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_26 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (4'd8),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_26 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dqs_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dqs_o_delayed0),
	.ODATAIN  (main_k7ddrphy_dqs_o_no_delay0)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS(
	// Inputs.
	.I   (main_k7ddrphy_dqs_o_delayed0),
	.T   (main_k7ddrphy_dqs_t0),

	// InOuts.
	.IO  (ddram_dqs_p[0]),
	.IOB (ddram_dqs_n[0])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_27 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_27 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip10[0]),
	.D2     (main_k7ddrphy_bitslip10[1]),
	.D3     (main_k7ddrphy_bitslip10[2]),
	.D4     (main_k7ddrphy_bitslip10[3]),
	.D5     (main_k7ddrphy_bitslip10[4]),
	.D6     (main_k7ddrphy_bitslip10[5]),
	.D7     (main_k7ddrphy_bitslip10[6]),
	.D8     (main_k7ddrphy_bitslip10[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (main_k7ddrphy_dqs_o_no_delay1),
	.OQ     (main_k7ddrphy1),
	.TQ     (main_k7ddrphy_dqs_t1)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_27 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (4'd8),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_27 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dqs_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dqs_o_delayed1),
	.ODATAIN  (main_k7ddrphy_dqs_o_no_delay1)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS_1 of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS_1(
	// Inputs.
	.I   (main_k7ddrphy_dqs_o_delayed1),
	.T   (main_k7ddrphy_dqs_t1),

	// InOuts.
	.IO  (ddram_dqs_p[1]),
	.IOB (ddram_dqs_n[1])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_28 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_28 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip20[0]),
	.D2     (main_k7ddrphy_bitslip20[1]),
	.D3     (main_k7ddrphy_bitslip20[2]),
	.D4     (main_k7ddrphy_bitslip20[3]),
	.D5     (main_k7ddrphy_bitslip20[4]),
	.D6     (main_k7ddrphy_bitslip20[5]),
	.D7     (main_k7ddrphy_bitslip20[6]),
	.D8     (main_k7ddrphy_bitslip20[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (main_k7ddrphy_dqs_o_no_delay2),
	.OQ     (main_k7ddrphy2),
	.TQ     (main_k7ddrphy_dqs_t2)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_28 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (4'd8),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_28 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dqs_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dqs_o_delayed2),
	.ODATAIN  (main_k7ddrphy_dqs_o_no_delay2)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS_2 of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS_2(
	// Inputs.
	.I   (main_k7ddrphy_dqs_o_delayed2),
	.T   (main_k7ddrphy_dqs_t2),

	// InOuts.
	.IO  (ddram_dqs_p[2]),
	.IOB (ddram_dqs_n[2])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_29 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_29 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip30[0]),
	.D2     (main_k7ddrphy_bitslip30[1]),
	.D3     (main_k7ddrphy_bitslip30[2]),
	.D4     (main_k7ddrphy_bitslip30[3]),
	.D5     (main_k7ddrphy_bitslip30[4]),
	.D6     (main_k7ddrphy_bitslip30[5]),
	.D7     (main_k7ddrphy_bitslip30[6]),
	.D8     (main_k7ddrphy_bitslip30[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (main_k7ddrphy_dqs_o_no_delay3),
	.OQ     (main_k7ddrphy3),
	.TQ     (main_k7ddrphy_dqs_t3)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_29 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (4'd8),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_29 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dqs_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dqs_o_delayed3),
	.ODATAIN  (main_k7ddrphy_dqs_o_no_delay3)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS_3 of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS_3(
	// Inputs.
	.I   (main_k7ddrphy_dqs_o_delayed3),
	.T   (main_k7ddrphy_dqs_t3),

	// InOuts.
	.IO  (ddram_dqs_p[3]),
	.IOB (ddram_dqs_n[3])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_30 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_30 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip01[0]),
	.D2     (main_k7ddrphy_bitslip01[1]),
	.D3     (main_k7ddrphy_bitslip01[2]),
	.D4     (main_k7ddrphy_bitslip01[3]),
	.D5     (main_k7ddrphy_bitslip01[4]),
	.D6     (main_k7ddrphy_bitslip01[5]),
	.D7     (main_k7ddrphy_bitslip01[6]),
	.D8     (main_k7ddrphy_bitslip01[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_dm_o_nodelay0)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_30 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_30 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[0]),
	.ODATAIN  (main_k7ddrphy_dm_o_nodelay0)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_31 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_31 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip11[0]),
	.D2     (main_k7ddrphy_bitslip11[1]),
	.D3     (main_k7ddrphy_bitslip11[2]),
	.D4     (main_k7ddrphy_bitslip11[3]),
	.D5     (main_k7ddrphy_bitslip11[4]),
	.D6     (main_k7ddrphy_bitslip11[5]),
	.D7     (main_k7ddrphy_bitslip11[6]),
	.D8     (main_k7ddrphy_bitslip11[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_dm_o_nodelay1)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_31 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_31 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[1]),
	.ODATAIN  (main_k7ddrphy_dm_o_nodelay1)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_32 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_32 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip21[0]),
	.D2     (main_k7ddrphy_bitslip21[1]),
	.D3     (main_k7ddrphy_bitslip21[2]),
	.D4     (main_k7ddrphy_bitslip21[3]),
	.D5     (main_k7ddrphy_bitslip21[4]),
	.D6     (main_k7ddrphy_bitslip21[5]),
	.D7     (main_k7ddrphy_bitslip21[6]),
	.D8     (main_k7ddrphy_bitslip21[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_dm_o_nodelay2)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_32 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_32 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[2]),
	.ODATAIN  (main_k7ddrphy_dm_o_nodelay2)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_33 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_33 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip31[0]),
	.D2     (main_k7ddrphy_bitslip31[1]),
	.D3     (main_k7ddrphy_bitslip31[2]),
	.D4     (main_k7ddrphy_bitslip31[3]),
	.D5     (main_k7ddrphy_bitslip31[4]),
	.D6     (main_k7ddrphy_bitslip31[5]),
	.D7     (main_k7ddrphy_bitslip31[6]),
	.D8     (main_k7ddrphy_bitslip31[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (main_k7ddrphy_dm_o_nodelay3)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_33 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_33 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[3]),
	.ODATAIN  (main_k7ddrphy_dm_o_nodelay3)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_34 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_34 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip02[0]),
	.D2     (main_k7ddrphy_bitslip02[1]),
	.D3     (main_k7ddrphy_bitslip02[2]),
	.D4     (main_k7ddrphy_bitslip02[3]),
	.D5     (main_k7ddrphy_bitslip02[4]),
	.D6     (main_k7ddrphy_bitslip02[5]),
	.D7     (main_k7ddrphy_bitslip02[6]),
	.D8     (main_k7ddrphy_bitslip02[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay0),
	.TQ     (main_k7ddrphy_dq_t0)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed0),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip03[7]),
	.Q2      (main_k7ddrphy_bitslip03[6]),
	.Q3      (main_k7ddrphy_bitslip03[5]),
	.Q4      (main_k7ddrphy_bitslip03[4]),
	.Q5      (main_k7ddrphy_bitslip03[3]),
	.Q6      (main_k7ddrphy_bitslip03[2]),
	.Q7      (main_k7ddrphy_bitslip03[1]),
	.Q8      (main_k7ddrphy_bitslip03[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_34 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_34 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed0),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay0)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay0),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed0)
);

//------------------------------------------------------------------------------
// Instance IOBUF of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed0),
	.T  (main_k7ddrphy_dq_t0),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay0),

	// InOuts.
	.IO (ddram_dq[0])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_35 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_35 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip12[0]),
	.D2     (main_k7ddrphy_bitslip12[1]),
	.D3     (main_k7ddrphy_bitslip12[2]),
	.D4     (main_k7ddrphy_bitslip12[3]),
	.D5     (main_k7ddrphy_bitslip12[4]),
	.D6     (main_k7ddrphy_bitslip12[5]),
	.D7     (main_k7ddrphy_bitslip12[6]),
	.D8     (main_k7ddrphy_bitslip12[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay1),
	.TQ     (main_k7ddrphy_dq_t1)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_1 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_1 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed1),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip13[7]),
	.Q2      (main_k7ddrphy_bitslip13[6]),
	.Q3      (main_k7ddrphy_bitslip13[5]),
	.Q4      (main_k7ddrphy_bitslip13[4]),
	.Q5      (main_k7ddrphy_bitslip13[3]),
	.Q6      (main_k7ddrphy_bitslip13[2]),
	.Q7      (main_k7ddrphy_bitslip13[1]),
	.Q8      (main_k7ddrphy_bitslip13[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_35 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_35 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed1),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay1)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_1 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_1 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay1),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed1)
);

//------------------------------------------------------------------------------
// Instance IOBUF_1 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_1(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed1),
	.T  (main_k7ddrphy_dq_t1),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay1),

	// InOuts.
	.IO (ddram_dq[1])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_36 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_36 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip22[0]),
	.D2     (main_k7ddrphy_bitslip22[1]),
	.D3     (main_k7ddrphy_bitslip22[2]),
	.D4     (main_k7ddrphy_bitslip22[3]),
	.D5     (main_k7ddrphy_bitslip22[4]),
	.D6     (main_k7ddrphy_bitslip22[5]),
	.D7     (main_k7ddrphy_bitslip22[6]),
	.D8     (main_k7ddrphy_bitslip22[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay2),
	.TQ     (main_k7ddrphy_dq_t2)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_2 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_2 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed2),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip23[7]),
	.Q2      (main_k7ddrphy_bitslip23[6]),
	.Q3      (main_k7ddrphy_bitslip23[5]),
	.Q4      (main_k7ddrphy_bitslip23[4]),
	.Q5      (main_k7ddrphy_bitslip23[3]),
	.Q6      (main_k7ddrphy_bitslip23[2]),
	.Q7      (main_k7ddrphy_bitslip23[1]),
	.Q8      (main_k7ddrphy_bitslip23[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_36 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_36 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed2),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay2)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_2 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_2 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay2),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed2)
);

//------------------------------------------------------------------------------
// Instance IOBUF_2 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_2(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed2),
	.T  (main_k7ddrphy_dq_t2),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay2),

	// InOuts.
	.IO (ddram_dq[2])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_37 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_37 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip32[0]),
	.D2     (main_k7ddrphy_bitslip32[1]),
	.D3     (main_k7ddrphy_bitslip32[2]),
	.D4     (main_k7ddrphy_bitslip32[3]),
	.D5     (main_k7ddrphy_bitslip32[4]),
	.D6     (main_k7ddrphy_bitslip32[5]),
	.D7     (main_k7ddrphy_bitslip32[6]),
	.D8     (main_k7ddrphy_bitslip32[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay3),
	.TQ     (main_k7ddrphy_dq_t3)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_3 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_3 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed3),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip33[7]),
	.Q2      (main_k7ddrphy_bitslip33[6]),
	.Q3      (main_k7ddrphy_bitslip33[5]),
	.Q4      (main_k7ddrphy_bitslip33[4]),
	.Q5      (main_k7ddrphy_bitslip33[3]),
	.Q6      (main_k7ddrphy_bitslip33[2]),
	.Q7      (main_k7ddrphy_bitslip33[1]),
	.Q8      (main_k7ddrphy_bitslip33[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_37 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_37 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed3),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay3)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_3 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_3 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay3),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed3)
);

//------------------------------------------------------------------------------
// Instance IOBUF_3 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_3(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed3),
	.T  (main_k7ddrphy_dq_t3),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay3),

	// InOuts.
	.IO (ddram_dq[3])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_38 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_38 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip40[0]),
	.D2     (main_k7ddrphy_bitslip40[1]),
	.D3     (main_k7ddrphy_bitslip40[2]),
	.D4     (main_k7ddrphy_bitslip40[3]),
	.D5     (main_k7ddrphy_bitslip40[4]),
	.D6     (main_k7ddrphy_bitslip40[5]),
	.D7     (main_k7ddrphy_bitslip40[6]),
	.D8     (main_k7ddrphy_bitslip40[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay4),
	.TQ     (main_k7ddrphy_dq_t4)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_4 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_4 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed4),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip41[7]),
	.Q2      (main_k7ddrphy_bitslip41[6]),
	.Q3      (main_k7ddrphy_bitslip41[5]),
	.Q4      (main_k7ddrphy_bitslip41[4]),
	.Q5      (main_k7ddrphy_bitslip41[3]),
	.Q6      (main_k7ddrphy_bitslip41[2]),
	.Q7      (main_k7ddrphy_bitslip41[1]),
	.Q8      (main_k7ddrphy_bitslip41[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_38 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_38 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed4),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay4)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_4 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_4 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay4),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed4)
);

//------------------------------------------------------------------------------
// Instance IOBUF_4 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_4(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed4),
	.T  (main_k7ddrphy_dq_t4),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay4),

	// InOuts.
	.IO (ddram_dq[4])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_39 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_39 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip50[0]),
	.D2     (main_k7ddrphy_bitslip50[1]),
	.D3     (main_k7ddrphy_bitslip50[2]),
	.D4     (main_k7ddrphy_bitslip50[3]),
	.D5     (main_k7ddrphy_bitslip50[4]),
	.D6     (main_k7ddrphy_bitslip50[5]),
	.D7     (main_k7ddrphy_bitslip50[6]),
	.D8     (main_k7ddrphy_bitslip50[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay5),
	.TQ     (main_k7ddrphy_dq_t5)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_5 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_5 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed5),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip51[7]),
	.Q2      (main_k7ddrphy_bitslip51[6]),
	.Q3      (main_k7ddrphy_bitslip51[5]),
	.Q4      (main_k7ddrphy_bitslip51[4]),
	.Q5      (main_k7ddrphy_bitslip51[3]),
	.Q6      (main_k7ddrphy_bitslip51[2]),
	.Q7      (main_k7ddrphy_bitslip51[1]),
	.Q8      (main_k7ddrphy_bitslip51[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_39 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_39 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed5),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay5)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_5 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_5 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay5),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed5)
);

//------------------------------------------------------------------------------
// Instance IOBUF_5 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_5(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed5),
	.T  (main_k7ddrphy_dq_t5),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay5),

	// InOuts.
	.IO (ddram_dq[5])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_40 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_40 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip60[0]),
	.D2     (main_k7ddrphy_bitslip60[1]),
	.D3     (main_k7ddrphy_bitslip60[2]),
	.D4     (main_k7ddrphy_bitslip60[3]),
	.D5     (main_k7ddrphy_bitslip60[4]),
	.D6     (main_k7ddrphy_bitslip60[5]),
	.D7     (main_k7ddrphy_bitslip60[6]),
	.D8     (main_k7ddrphy_bitslip60[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay6),
	.TQ     (main_k7ddrphy_dq_t6)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_6 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_6 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed6),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip61[7]),
	.Q2      (main_k7ddrphy_bitslip61[6]),
	.Q3      (main_k7ddrphy_bitslip61[5]),
	.Q4      (main_k7ddrphy_bitslip61[4]),
	.Q5      (main_k7ddrphy_bitslip61[3]),
	.Q6      (main_k7ddrphy_bitslip61[2]),
	.Q7      (main_k7ddrphy_bitslip61[1]),
	.Q8      (main_k7ddrphy_bitslip61[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_40 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_40 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed6),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay6)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_6 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_6 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay6),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed6)
);

//------------------------------------------------------------------------------
// Instance IOBUF_6 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_6(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed6),
	.T  (main_k7ddrphy_dq_t6),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay6),

	// InOuts.
	.IO (ddram_dq[6])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_41 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_41 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip70[0]),
	.D2     (main_k7ddrphy_bitslip70[1]),
	.D3     (main_k7ddrphy_bitslip70[2]),
	.D4     (main_k7ddrphy_bitslip70[3]),
	.D5     (main_k7ddrphy_bitslip70[4]),
	.D6     (main_k7ddrphy_bitslip70[5]),
	.D7     (main_k7ddrphy_bitslip70[6]),
	.D8     (main_k7ddrphy_bitslip70[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay7),
	.TQ     (main_k7ddrphy_dq_t7)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_7 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_7 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed7),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip71[7]),
	.Q2      (main_k7ddrphy_bitslip71[6]),
	.Q3      (main_k7ddrphy_bitslip71[5]),
	.Q4      (main_k7ddrphy_bitslip71[4]),
	.Q5      (main_k7ddrphy_bitslip71[3]),
	.Q6      (main_k7ddrphy_bitslip71[2]),
	.Q7      (main_k7ddrphy_bitslip71[1]),
	.Q8      (main_k7ddrphy_bitslip71[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_41 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_41 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed7),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay7)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_7 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_7 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay7),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[0] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed7)
);

//------------------------------------------------------------------------------
// Instance IOBUF_7 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_7(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed7),
	.T  (main_k7ddrphy_dq_t7),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay7),

	// InOuts.
	.IO (ddram_dq[7])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_42 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_42 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip80[0]),
	.D2     (main_k7ddrphy_bitslip80[1]),
	.D3     (main_k7ddrphy_bitslip80[2]),
	.D4     (main_k7ddrphy_bitslip80[3]),
	.D5     (main_k7ddrphy_bitslip80[4]),
	.D6     (main_k7ddrphy_bitslip80[5]),
	.D7     (main_k7ddrphy_bitslip80[6]),
	.D8     (main_k7ddrphy_bitslip80[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay8),
	.TQ     (main_k7ddrphy_dq_t8)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_8 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_8 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed8),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip81[7]),
	.Q2      (main_k7ddrphy_bitslip81[6]),
	.Q3      (main_k7ddrphy_bitslip81[5]),
	.Q4      (main_k7ddrphy_bitslip81[4]),
	.Q5      (main_k7ddrphy_bitslip81[3]),
	.Q6      (main_k7ddrphy_bitslip81[2]),
	.Q7      (main_k7ddrphy_bitslip81[1]),
	.Q8      (main_k7ddrphy_bitslip81[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_42 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_42 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed8),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay8)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_8 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_8 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay8),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed8)
);

//------------------------------------------------------------------------------
// Instance IOBUF_8 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_8(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed8),
	.T  (main_k7ddrphy_dq_t8),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay8),

	// InOuts.
	.IO (ddram_dq[8])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_43 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_43 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip90[0]),
	.D2     (main_k7ddrphy_bitslip90[1]),
	.D3     (main_k7ddrphy_bitslip90[2]),
	.D4     (main_k7ddrphy_bitslip90[3]),
	.D5     (main_k7ddrphy_bitslip90[4]),
	.D6     (main_k7ddrphy_bitslip90[5]),
	.D7     (main_k7ddrphy_bitslip90[6]),
	.D8     (main_k7ddrphy_bitslip90[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay9),
	.TQ     (main_k7ddrphy_dq_t9)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_9 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_9 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed9),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip91[7]),
	.Q2      (main_k7ddrphy_bitslip91[6]),
	.Q3      (main_k7ddrphy_bitslip91[5]),
	.Q4      (main_k7ddrphy_bitslip91[4]),
	.Q5      (main_k7ddrphy_bitslip91[3]),
	.Q6      (main_k7ddrphy_bitslip91[2]),
	.Q7      (main_k7ddrphy_bitslip91[1]),
	.Q8      (main_k7ddrphy_bitslip91[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_43 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_43 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed9),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay9)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_9 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_9 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay9),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed9)
);

//------------------------------------------------------------------------------
// Instance IOBUF_9 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_9(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed9),
	.T  (main_k7ddrphy_dq_t9),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay9),

	// InOuts.
	.IO (ddram_dq[9])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_44 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_44 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip100[0]),
	.D2     (main_k7ddrphy_bitslip100[1]),
	.D3     (main_k7ddrphy_bitslip100[2]),
	.D4     (main_k7ddrphy_bitslip100[3]),
	.D5     (main_k7ddrphy_bitslip100[4]),
	.D6     (main_k7ddrphy_bitslip100[5]),
	.D7     (main_k7ddrphy_bitslip100[6]),
	.D8     (main_k7ddrphy_bitslip100[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay10),
	.TQ     (main_k7ddrphy_dq_t10)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_10 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_10 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed10),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip101[7]),
	.Q2      (main_k7ddrphy_bitslip101[6]),
	.Q3      (main_k7ddrphy_bitslip101[5]),
	.Q4      (main_k7ddrphy_bitslip101[4]),
	.Q5      (main_k7ddrphy_bitslip101[3]),
	.Q6      (main_k7ddrphy_bitslip101[2]),
	.Q7      (main_k7ddrphy_bitslip101[1]),
	.Q8      (main_k7ddrphy_bitslip101[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_44 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_44 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed10),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay10)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_10 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_10 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay10),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed10)
);

//------------------------------------------------------------------------------
// Instance IOBUF_10 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_10(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed10),
	.T  (main_k7ddrphy_dq_t10),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay10),

	// InOuts.
	.IO (ddram_dq[10])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_45 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_45 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip110[0]),
	.D2     (main_k7ddrphy_bitslip110[1]),
	.D3     (main_k7ddrphy_bitslip110[2]),
	.D4     (main_k7ddrphy_bitslip110[3]),
	.D5     (main_k7ddrphy_bitslip110[4]),
	.D6     (main_k7ddrphy_bitslip110[5]),
	.D7     (main_k7ddrphy_bitslip110[6]),
	.D8     (main_k7ddrphy_bitslip110[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay11),
	.TQ     (main_k7ddrphy_dq_t11)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_11 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_11 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed11),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip111[7]),
	.Q2      (main_k7ddrphy_bitslip111[6]),
	.Q3      (main_k7ddrphy_bitslip111[5]),
	.Q4      (main_k7ddrphy_bitslip111[4]),
	.Q5      (main_k7ddrphy_bitslip111[3]),
	.Q6      (main_k7ddrphy_bitslip111[2]),
	.Q7      (main_k7ddrphy_bitslip111[1]),
	.Q8      (main_k7ddrphy_bitslip111[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_45 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_45 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed11),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay11)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_11 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_11 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay11),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed11)
);

//------------------------------------------------------------------------------
// Instance IOBUF_11 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_11(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed11),
	.T  (main_k7ddrphy_dq_t11),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay11),

	// InOuts.
	.IO (ddram_dq[11])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_46 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_46 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip120[0]),
	.D2     (main_k7ddrphy_bitslip120[1]),
	.D3     (main_k7ddrphy_bitslip120[2]),
	.D4     (main_k7ddrphy_bitslip120[3]),
	.D5     (main_k7ddrphy_bitslip120[4]),
	.D6     (main_k7ddrphy_bitslip120[5]),
	.D7     (main_k7ddrphy_bitslip120[6]),
	.D8     (main_k7ddrphy_bitslip120[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay12),
	.TQ     (main_k7ddrphy_dq_t12)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_12 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_12 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed12),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip121[7]),
	.Q2      (main_k7ddrphy_bitslip121[6]),
	.Q3      (main_k7ddrphy_bitslip121[5]),
	.Q4      (main_k7ddrphy_bitslip121[4]),
	.Q5      (main_k7ddrphy_bitslip121[3]),
	.Q6      (main_k7ddrphy_bitslip121[2]),
	.Q7      (main_k7ddrphy_bitslip121[1]),
	.Q8      (main_k7ddrphy_bitslip121[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_46 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_46 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed12),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay12)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_12 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_12 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay12),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed12)
);

//------------------------------------------------------------------------------
// Instance IOBUF_12 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_12(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed12),
	.T  (main_k7ddrphy_dq_t12),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay12),

	// InOuts.
	.IO (ddram_dq[12])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_47 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_47 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip130[0]),
	.D2     (main_k7ddrphy_bitslip130[1]),
	.D3     (main_k7ddrphy_bitslip130[2]),
	.D4     (main_k7ddrphy_bitslip130[3]),
	.D5     (main_k7ddrphy_bitslip130[4]),
	.D6     (main_k7ddrphy_bitslip130[5]),
	.D7     (main_k7ddrphy_bitslip130[6]),
	.D8     (main_k7ddrphy_bitslip130[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay13),
	.TQ     (main_k7ddrphy_dq_t13)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_13 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_13 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed13),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip131[7]),
	.Q2      (main_k7ddrphy_bitslip131[6]),
	.Q3      (main_k7ddrphy_bitslip131[5]),
	.Q4      (main_k7ddrphy_bitslip131[4]),
	.Q5      (main_k7ddrphy_bitslip131[3]),
	.Q6      (main_k7ddrphy_bitslip131[2]),
	.Q7      (main_k7ddrphy_bitslip131[1]),
	.Q8      (main_k7ddrphy_bitslip131[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_47 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_47 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed13),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay13)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_13 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_13 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay13),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed13)
);

//------------------------------------------------------------------------------
// Instance IOBUF_13 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_13(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed13),
	.T  (main_k7ddrphy_dq_t13),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay13),

	// InOuts.
	.IO (ddram_dq[13])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_48 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_48 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip140[0]),
	.D2     (main_k7ddrphy_bitslip140[1]),
	.D3     (main_k7ddrphy_bitslip140[2]),
	.D4     (main_k7ddrphy_bitslip140[3]),
	.D5     (main_k7ddrphy_bitslip140[4]),
	.D6     (main_k7ddrphy_bitslip140[5]),
	.D7     (main_k7ddrphy_bitslip140[6]),
	.D8     (main_k7ddrphy_bitslip140[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay14),
	.TQ     (main_k7ddrphy_dq_t14)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_14 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_14 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed14),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip141[7]),
	.Q2      (main_k7ddrphy_bitslip141[6]),
	.Q3      (main_k7ddrphy_bitslip141[5]),
	.Q4      (main_k7ddrphy_bitslip141[4]),
	.Q5      (main_k7ddrphy_bitslip141[3]),
	.Q6      (main_k7ddrphy_bitslip141[2]),
	.Q7      (main_k7ddrphy_bitslip141[1]),
	.Q8      (main_k7ddrphy_bitslip141[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_48 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_48 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed14),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay14)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_14 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_14 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay14),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed14)
);

//------------------------------------------------------------------------------
// Instance IOBUF_14 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_14(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed14),
	.T  (main_k7ddrphy_dq_t14),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay14),

	// InOuts.
	.IO (ddram_dq[14])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_49 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_49 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip150[0]),
	.D2     (main_k7ddrphy_bitslip150[1]),
	.D3     (main_k7ddrphy_bitslip150[2]),
	.D4     (main_k7ddrphy_bitslip150[3]),
	.D5     (main_k7ddrphy_bitslip150[4]),
	.D6     (main_k7ddrphy_bitslip150[5]),
	.D7     (main_k7ddrphy_bitslip150[6]),
	.D8     (main_k7ddrphy_bitslip150[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay15),
	.TQ     (main_k7ddrphy_dq_t15)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_15 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_15 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed15),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip151[7]),
	.Q2      (main_k7ddrphy_bitslip151[6]),
	.Q3      (main_k7ddrphy_bitslip151[5]),
	.Q4      (main_k7ddrphy_bitslip151[4]),
	.Q5      (main_k7ddrphy_bitslip151[3]),
	.Q6      (main_k7ddrphy_bitslip151[2]),
	.Q7      (main_k7ddrphy_bitslip151[1]),
	.Q8      (main_k7ddrphy_bitslip151[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_49 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_49 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed15),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay15)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_15 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_15 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay15),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[1] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed15)
);

//------------------------------------------------------------------------------
// Instance IOBUF_15 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_15(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed15),
	.T  (main_k7ddrphy_dq_t15),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay15),

	// InOuts.
	.IO (ddram_dq[15])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_50 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_50 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip160[0]),
	.D2     (main_k7ddrphy_bitslip160[1]),
	.D3     (main_k7ddrphy_bitslip160[2]),
	.D4     (main_k7ddrphy_bitslip160[3]),
	.D5     (main_k7ddrphy_bitslip160[4]),
	.D6     (main_k7ddrphy_bitslip160[5]),
	.D7     (main_k7ddrphy_bitslip160[6]),
	.D8     (main_k7ddrphy_bitslip160[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay16),
	.TQ     (main_k7ddrphy_dq_t16)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_16 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_16 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed16),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip161[7]),
	.Q2      (main_k7ddrphy_bitslip161[6]),
	.Q3      (main_k7ddrphy_bitslip161[5]),
	.Q4      (main_k7ddrphy_bitslip161[4]),
	.Q5      (main_k7ddrphy_bitslip161[3]),
	.Q6      (main_k7ddrphy_bitslip161[2]),
	.Q7      (main_k7ddrphy_bitslip161[1]),
	.Q8      (main_k7ddrphy_bitslip161[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_50 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_50 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed16),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay16)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_16 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_16 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay16),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed16)
);

//------------------------------------------------------------------------------
// Instance IOBUF_16 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_16(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed16),
	.T  (main_k7ddrphy_dq_t16),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay16),

	// InOuts.
	.IO (ddram_dq[16])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_51 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_51 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip170[0]),
	.D2     (main_k7ddrphy_bitslip170[1]),
	.D3     (main_k7ddrphy_bitslip170[2]),
	.D4     (main_k7ddrphy_bitslip170[3]),
	.D5     (main_k7ddrphy_bitslip170[4]),
	.D6     (main_k7ddrphy_bitslip170[5]),
	.D7     (main_k7ddrphy_bitslip170[6]),
	.D8     (main_k7ddrphy_bitslip170[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay17),
	.TQ     (main_k7ddrphy_dq_t17)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_17 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_17 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed17),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip171[7]),
	.Q2      (main_k7ddrphy_bitslip171[6]),
	.Q3      (main_k7ddrphy_bitslip171[5]),
	.Q4      (main_k7ddrphy_bitslip171[4]),
	.Q5      (main_k7ddrphy_bitslip171[3]),
	.Q6      (main_k7ddrphy_bitslip171[2]),
	.Q7      (main_k7ddrphy_bitslip171[1]),
	.Q8      (main_k7ddrphy_bitslip171[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_51 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_51 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed17),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay17)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_17 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_17 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay17),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed17)
);

//------------------------------------------------------------------------------
// Instance IOBUF_17 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_17(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed17),
	.T  (main_k7ddrphy_dq_t17),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay17),

	// InOuts.
	.IO (ddram_dq[17])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_52 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_52 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip180[0]),
	.D2     (main_k7ddrphy_bitslip180[1]),
	.D3     (main_k7ddrphy_bitslip180[2]),
	.D4     (main_k7ddrphy_bitslip180[3]),
	.D5     (main_k7ddrphy_bitslip180[4]),
	.D6     (main_k7ddrphy_bitslip180[5]),
	.D7     (main_k7ddrphy_bitslip180[6]),
	.D8     (main_k7ddrphy_bitslip180[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay18),
	.TQ     (main_k7ddrphy_dq_t18)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_18 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_18 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed18),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip181[7]),
	.Q2      (main_k7ddrphy_bitslip181[6]),
	.Q3      (main_k7ddrphy_bitslip181[5]),
	.Q4      (main_k7ddrphy_bitslip181[4]),
	.Q5      (main_k7ddrphy_bitslip181[3]),
	.Q6      (main_k7ddrphy_bitslip181[2]),
	.Q7      (main_k7ddrphy_bitslip181[1]),
	.Q8      (main_k7ddrphy_bitslip181[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_52 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_52 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed18),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay18)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_18 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_18 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay18),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed18)
);

//------------------------------------------------------------------------------
// Instance IOBUF_18 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_18(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed18),
	.T  (main_k7ddrphy_dq_t18),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay18),

	// InOuts.
	.IO (ddram_dq[18])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_53 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_53 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip190[0]),
	.D2     (main_k7ddrphy_bitslip190[1]),
	.D3     (main_k7ddrphy_bitslip190[2]),
	.D4     (main_k7ddrphy_bitslip190[3]),
	.D5     (main_k7ddrphy_bitslip190[4]),
	.D6     (main_k7ddrphy_bitslip190[5]),
	.D7     (main_k7ddrphy_bitslip190[6]),
	.D8     (main_k7ddrphy_bitslip190[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay19),
	.TQ     (main_k7ddrphy_dq_t19)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_19 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_19 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed19),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip191[7]),
	.Q2      (main_k7ddrphy_bitslip191[6]),
	.Q3      (main_k7ddrphy_bitslip191[5]),
	.Q4      (main_k7ddrphy_bitslip191[4]),
	.Q5      (main_k7ddrphy_bitslip191[3]),
	.Q6      (main_k7ddrphy_bitslip191[2]),
	.Q7      (main_k7ddrphy_bitslip191[1]),
	.Q8      (main_k7ddrphy_bitslip191[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_53 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_53 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed19),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay19)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_19 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_19 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay19),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed19)
);

//------------------------------------------------------------------------------
// Instance IOBUF_19 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_19(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed19),
	.T  (main_k7ddrphy_dq_t19),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay19),

	// InOuts.
	.IO (ddram_dq[19])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_54 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_54 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip200[0]),
	.D2     (main_k7ddrphy_bitslip200[1]),
	.D3     (main_k7ddrphy_bitslip200[2]),
	.D4     (main_k7ddrphy_bitslip200[3]),
	.D5     (main_k7ddrphy_bitslip200[4]),
	.D6     (main_k7ddrphy_bitslip200[5]),
	.D7     (main_k7ddrphy_bitslip200[6]),
	.D8     (main_k7ddrphy_bitslip200[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay20),
	.TQ     (main_k7ddrphy_dq_t20)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_20 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_20 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed20),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip201[7]),
	.Q2      (main_k7ddrphy_bitslip201[6]),
	.Q3      (main_k7ddrphy_bitslip201[5]),
	.Q4      (main_k7ddrphy_bitslip201[4]),
	.Q5      (main_k7ddrphy_bitslip201[3]),
	.Q6      (main_k7ddrphy_bitslip201[2]),
	.Q7      (main_k7ddrphy_bitslip201[1]),
	.Q8      (main_k7ddrphy_bitslip201[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_54 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_54 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed20),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay20)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_20 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_20 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay20),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed20)
);

//------------------------------------------------------------------------------
// Instance IOBUF_20 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_20(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed20),
	.T  (main_k7ddrphy_dq_t20),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay20),

	// InOuts.
	.IO (ddram_dq[20])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_55 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_55 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip210[0]),
	.D2     (main_k7ddrphy_bitslip210[1]),
	.D3     (main_k7ddrphy_bitslip210[2]),
	.D4     (main_k7ddrphy_bitslip210[3]),
	.D5     (main_k7ddrphy_bitslip210[4]),
	.D6     (main_k7ddrphy_bitslip210[5]),
	.D7     (main_k7ddrphy_bitslip210[6]),
	.D8     (main_k7ddrphy_bitslip210[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay21),
	.TQ     (main_k7ddrphy_dq_t21)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_21 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_21 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed21),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip211[7]),
	.Q2      (main_k7ddrphy_bitslip211[6]),
	.Q3      (main_k7ddrphy_bitslip211[5]),
	.Q4      (main_k7ddrphy_bitslip211[4]),
	.Q5      (main_k7ddrphy_bitslip211[3]),
	.Q6      (main_k7ddrphy_bitslip211[2]),
	.Q7      (main_k7ddrphy_bitslip211[1]),
	.Q8      (main_k7ddrphy_bitslip211[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_55 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_55 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed21),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay21)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_21 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_21 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay21),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed21)
);

//------------------------------------------------------------------------------
// Instance IOBUF_21 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_21(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed21),
	.T  (main_k7ddrphy_dq_t21),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay21),

	// InOuts.
	.IO (ddram_dq[21])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_56 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_56 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip220[0]),
	.D2     (main_k7ddrphy_bitslip220[1]),
	.D3     (main_k7ddrphy_bitslip220[2]),
	.D4     (main_k7ddrphy_bitslip220[3]),
	.D5     (main_k7ddrphy_bitslip220[4]),
	.D6     (main_k7ddrphy_bitslip220[5]),
	.D7     (main_k7ddrphy_bitslip220[6]),
	.D8     (main_k7ddrphy_bitslip220[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay22),
	.TQ     (main_k7ddrphy_dq_t22)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_22 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_22 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed22),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip221[7]),
	.Q2      (main_k7ddrphy_bitslip221[6]),
	.Q3      (main_k7ddrphy_bitslip221[5]),
	.Q4      (main_k7ddrphy_bitslip221[4]),
	.Q5      (main_k7ddrphy_bitslip221[3]),
	.Q6      (main_k7ddrphy_bitslip221[2]),
	.Q7      (main_k7ddrphy_bitslip221[1]),
	.Q8      (main_k7ddrphy_bitslip221[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_56 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_56 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed22),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay22)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_22 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_22 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay22),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed22)
);

//------------------------------------------------------------------------------
// Instance IOBUF_22 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_22(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed22),
	.T  (main_k7ddrphy_dq_t22),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay22),

	// InOuts.
	.IO (ddram_dq[22])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_57 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_57 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip230[0]),
	.D2     (main_k7ddrphy_bitslip230[1]),
	.D3     (main_k7ddrphy_bitslip230[2]),
	.D4     (main_k7ddrphy_bitslip230[3]),
	.D5     (main_k7ddrphy_bitslip230[4]),
	.D6     (main_k7ddrphy_bitslip230[5]),
	.D7     (main_k7ddrphy_bitslip230[6]),
	.D8     (main_k7ddrphy_bitslip230[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay23),
	.TQ     (main_k7ddrphy_dq_t23)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_23 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_23 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed23),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip231[7]),
	.Q2      (main_k7ddrphy_bitslip231[6]),
	.Q3      (main_k7ddrphy_bitslip231[5]),
	.Q4      (main_k7ddrphy_bitslip231[4]),
	.Q5      (main_k7ddrphy_bitslip231[3]),
	.Q6      (main_k7ddrphy_bitslip231[2]),
	.Q7      (main_k7ddrphy_bitslip231[1]),
	.Q8      (main_k7ddrphy_bitslip231[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_57 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_57 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed23),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay23)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_23 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_23 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay23),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[2] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed23)
);

//------------------------------------------------------------------------------
// Instance IOBUF_23 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_23(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed23),
	.T  (main_k7ddrphy_dq_t23),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay23),

	// InOuts.
	.IO (ddram_dq[23])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_58 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_58 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip240[0]),
	.D2     (main_k7ddrphy_bitslip240[1]),
	.D3     (main_k7ddrphy_bitslip240[2]),
	.D4     (main_k7ddrphy_bitslip240[3]),
	.D5     (main_k7ddrphy_bitslip240[4]),
	.D6     (main_k7ddrphy_bitslip240[5]),
	.D7     (main_k7ddrphy_bitslip240[6]),
	.D8     (main_k7ddrphy_bitslip240[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay24),
	.TQ     (main_k7ddrphy_dq_t24)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_24 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_24 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed24),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip241[7]),
	.Q2      (main_k7ddrphy_bitslip241[6]),
	.Q3      (main_k7ddrphy_bitslip241[5]),
	.Q4      (main_k7ddrphy_bitslip241[4]),
	.Q5      (main_k7ddrphy_bitslip241[3]),
	.Q6      (main_k7ddrphy_bitslip241[2]),
	.Q7      (main_k7ddrphy_bitslip241[1]),
	.Q8      (main_k7ddrphy_bitslip241[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_58 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_58 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed24),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay24)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_24 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_24 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay24),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed24)
);

//------------------------------------------------------------------------------
// Instance IOBUF_24 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_24(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed24),
	.T  (main_k7ddrphy_dq_t24),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay24),

	// InOuts.
	.IO (ddram_dq[24])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_59 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_59 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip250[0]),
	.D2     (main_k7ddrphy_bitslip250[1]),
	.D3     (main_k7ddrphy_bitslip250[2]),
	.D4     (main_k7ddrphy_bitslip250[3]),
	.D5     (main_k7ddrphy_bitslip250[4]),
	.D6     (main_k7ddrphy_bitslip250[5]),
	.D7     (main_k7ddrphy_bitslip250[6]),
	.D8     (main_k7ddrphy_bitslip250[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay25),
	.TQ     (main_k7ddrphy_dq_t25)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_25 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_25 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed25),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip251[7]),
	.Q2      (main_k7ddrphy_bitslip251[6]),
	.Q3      (main_k7ddrphy_bitslip251[5]),
	.Q4      (main_k7ddrphy_bitslip251[4]),
	.Q5      (main_k7ddrphy_bitslip251[3]),
	.Q6      (main_k7ddrphy_bitslip251[2]),
	.Q7      (main_k7ddrphy_bitslip251[1]),
	.Q8      (main_k7ddrphy_bitslip251[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_59 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_59 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed25),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay25)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_25 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_25 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay25),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed25)
);

//------------------------------------------------------------------------------
// Instance IOBUF_25 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_25(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed25),
	.T  (main_k7ddrphy_dq_t25),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay25),

	// InOuts.
	.IO (ddram_dq[25])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_60 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_60 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip260[0]),
	.D2     (main_k7ddrphy_bitslip260[1]),
	.D3     (main_k7ddrphy_bitslip260[2]),
	.D4     (main_k7ddrphy_bitslip260[3]),
	.D5     (main_k7ddrphy_bitslip260[4]),
	.D6     (main_k7ddrphy_bitslip260[5]),
	.D7     (main_k7ddrphy_bitslip260[6]),
	.D8     (main_k7ddrphy_bitslip260[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay26),
	.TQ     (main_k7ddrphy_dq_t26)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_26 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_26 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed26),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip261[7]),
	.Q2      (main_k7ddrphy_bitslip261[6]),
	.Q3      (main_k7ddrphy_bitslip261[5]),
	.Q4      (main_k7ddrphy_bitslip261[4]),
	.Q5      (main_k7ddrphy_bitslip261[3]),
	.Q6      (main_k7ddrphy_bitslip261[2]),
	.Q7      (main_k7ddrphy_bitslip261[1]),
	.Q8      (main_k7ddrphy_bitslip261[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_60 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_60 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed26),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay26)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_26 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_26 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay26),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed26)
);

//------------------------------------------------------------------------------
// Instance IOBUF_26 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_26(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed26),
	.T  (main_k7ddrphy_dq_t26),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay26),

	// InOuts.
	.IO (ddram_dq[26])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_61 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_61 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip270[0]),
	.D2     (main_k7ddrphy_bitslip270[1]),
	.D3     (main_k7ddrphy_bitslip270[2]),
	.D4     (main_k7ddrphy_bitslip270[3]),
	.D5     (main_k7ddrphy_bitslip270[4]),
	.D6     (main_k7ddrphy_bitslip270[5]),
	.D7     (main_k7ddrphy_bitslip270[6]),
	.D8     (main_k7ddrphy_bitslip270[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay27),
	.TQ     (main_k7ddrphy_dq_t27)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_27 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_27 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed27),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip271[7]),
	.Q2      (main_k7ddrphy_bitslip271[6]),
	.Q3      (main_k7ddrphy_bitslip271[5]),
	.Q4      (main_k7ddrphy_bitslip271[4]),
	.Q5      (main_k7ddrphy_bitslip271[3]),
	.Q6      (main_k7ddrphy_bitslip271[2]),
	.Q7      (main_k7ddrphy_bitslip271[1]),
	.Q8      (main_k7ddrphy_bitslip271[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_61 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_61 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed27),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay27)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_27 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_27 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay27),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed27)
);

//------------------------------------------------------------------------------
// Instance IOBUF_27 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_27(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed27),
	.T  (main_k7ddrphy_dq_t27),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay27),

	// InOuts.
	.IO (ddram_dq[27])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_62 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_62 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip280[0]),
	.D2     (main_k7ddrphy_bitslip280[1]),
	.D3     (main_k7ddrphy_bitslip280[2]),
	.D4     (main_k7ddrphy_bitslip280[3]),
	.D5     (main_k7ddrphy_bitslip280[4]),
	.D6     (main_k7ddrphy_bitslip280[5]),
	.D7     (main_k7ddrphy_bitslip280[6]),
	.D8     (main_k7ddrphy_bitslip280[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay28),
	.TQ     (main_k7ddrphy_dq_t28)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_28 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_28 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed28),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip281[7]),
	.Q2      (main_k7ddrphy_bitslip281[6]),
	.Q3      (main_k7ddrphy_bitslip281[5]),
	.Q4      (main_k7ddrphy_bitslip281[4]),
	.Q5      (main_k7ddrphy_bitslip281[3]),
	.Q6      (main_k7ddrphy_bitslip281[2]),
	.Q7      (main_k7ddrphy_bitslip281[1]),
	.Q8      (main_k7ddrphy_bitslip281[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_62 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_62 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed28),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay28)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_28 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_28 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay28),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed28)
);

//------------------------------------------------------------------------------
// Instance IOBUF_28 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_28(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed28),
	.T  (main_k7ddrphy_dq_t28),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay28),

	// InOuts.
	.IO (ddram_dq[28])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_63 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_63 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip290[0]),
	.D2     (main_k7ddrphy_bitslip290[1]),
	.D3     (main_k7ddrphy_bitslip290[2]),
	.D4     (main_k7ddrphy_bitslip290[3]),
	.D5     (main_k7ddrphy_bitslip290[4]),
	.D6     (main_k7ddrphy_bitslip290[5]),
	.D7     (main_k7ddrphy_bitslip290[6]),
	.D8     (main_k7ddrphy_bitslip290[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay29),
	.TQ     (main_k7ddrphy_dq_t29)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_29 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_29 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed29),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip291[7]),
	.Q2      (main_k7ddrphy_bitslip291[6]),
	.Q3      (main_k7ddrphy_bitslip291[5]),
	.Q4      (main_k7ddrphy_bitslip291[4]),
	.Q5      (main_k7ddrphy_bitslip291[3]),
	.Q6      (main_k7ddrphy_bitslip291[2]),
	.Q7      (main_k7ddrphy_bitslip291[1]),
	.Q8      (main_k7ddrphy_bitslip291[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_63 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_63 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed29),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay29)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_29 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_29 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay29),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed29)
);

//------------------------------------------------------------------------------
// Instance IOBUF_29 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_29(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed29),
	.T  (main_k7ddrphy_dq_t29),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay29),

	// InOuts.
	.IO (ddram_dq[29])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_64 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_64 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip300[0]),
	.D2     (main_k7ddrphy_bitslip300[1]),
	.D3     (main_k7ddrphy_bitslip300[2]),
	.D4     (main_k7ddrphy_bitslip300[3]),
	.D5     (main_k7ddrphy_bitslip300[4]),
	.D6     (main_k7ddrphy_bitslip300[5]),
	.D7     (main_k7ddrphy_bitslip300[6]),
	.D8     (main_k7ddrphy_bitslip300[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay30),
	.TQ     (main_k7ddrphy_dq_t30)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_30 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_30 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed30),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip301[7]),
	.Q2      (main_k7ddrphy_bitslip301[6]),
	.Q3      (main_k7ddrphy_bitslip301[5]),
	.Q4      (main_k7ddrphy_bitslip301[4]),
	.Q5      (main_k7ddrphy_bitslip301[3]),
	.Q6      (main_k7ddrphy_bitslip301[2]),
	.Q7      (main_k7ddrphy_bitslip301[1]),
	.Q8      (main_k7ddrphy_bitslip301[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_64 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_64 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed30),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay30)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_30 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_30 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay30),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed30)
);

//------------------------------------------------------------------------------
// Instance IOBUF_30 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_30(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed30),
	.T  (main_k7ddrphy_dq_t30),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay30),

	// InOuts.
	.IO (ddram_dq[30])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_65 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_65 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (main_k7ddrphy_bitslip310[0]),
	.D2     (main_k7ddrphy_bitslip310[1]),
	.D3     (main_k7ddrphy_bitslip310[2]),
	.D4     (main_k7ddrphy_bitslip310[3]),
	.D5     (main_k7ddrphy_bitslip310[4]),
	.D6     (main_k7ddrphy_bitslip310[5]),
	.D7     (main_k7ddrphy_bitslip310[6]),
	.D8     (main_k7ddrphy_bitslip310[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | main_k7ddrphy_rst_storage)),
	.T1     ((~main_k7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (main_k7ddrphy_dq_o_nodelay31),
	.TQ     (main_k7ddrphy_dq_t31)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_31 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_31 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (main_k7ddrphy_dq_i_delayed31),
	.RST     ((sys_rst | main_k7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (main_k7ddrphy_bitslip311[7]),
	.Q2      (main_k7ddrphy_bitslip311[6]),
	.Q3      (main_k7ddrphy_bitslip311[5]),
	.Q4      (main_k7ddrphy_bitslip311[4]),
	.Q5      (main_k7ddrphy_bitslip311[3]),
	.Q6      (main_k7ddrphy_bitslip311[2]),
	.Q7      (main_k7ddrphy_bitslip311[1]),
	.Q8      (main_k7ddrphy_bitslip311[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_65 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_65 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_wdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_o_delayed31),
	.ODATAIN  (main_k7ddrphy_dq_o_nodelay31)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_31 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_31 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (main_k7ddrphy_dq_i_nodelay31),
	.INC      (1'd1),
	.LD       (((main_k7ddrphy_dly_sel_storage[3] & main_k7ddrphy_rdly_dq_rst_re) | main_k7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (main_k7ddrphy_dq_i_delayed31)
);

//------------------------------------------------------------------------------
// Instance IOBUF_31 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_31(
	// Inputs.
	.I  (main_k7ddrphy_dq_o_delayed31),
	.T  (main_k7ddrphy_dq_t31),

	// Outputs.
	.O  (main_k7ddrphy_dq_i_nodelay31),

	// InOuts.
	.IO (ddram_dq[31])
);

//------------------------------------------------------------------------------
// Memory storage: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage[0:15];
reg [24:0] storage_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine0_wrport_we)
		storage[main_litedramcore_bankmachine0_wrport_adr] <= main_litedramcore_bankmachine0_wrport_dat_w;
	storage_dat0 <= storage[main_litedramcore_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine0_wrport_dat_r = storage_dat0;
assign main_litedramcore_bankmachine0_rdport_dat_r = storage[main_litedramcore_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_1[0:15];
reg [24:0] storage_1_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine1_wrport_we)
		storage_1[main_litedramcore_bankmachine1_wrport_adr] <= main_litedramcore_bankmachine1_wrport_dat_w;
	storage_1_dat0 <= storage_1[main_litedramcore_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine1_wrport_dat_r = storage_1_dat0;
assign main_litedramcore_bankmachine1_rdport_dat_r = storage_1[main_litedramcore_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_2: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_2[0:15];
reg [24:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine2_wrport_we)
		storage_2[main_litedramcore_bankmachine2_wrport_adr] <= main_litedramcore_bankmachine2_wrport_dat_w;
	storage_2_dat0 <= storage_2[main_litedramcore_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine2_wrport_dat_r = storage_2_dat0;
assign main_litedramcore_bankmachine2_rdport_dat_r = storage_2[main_litedramcore_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_3[0:15];
reg [24:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine3_wrport_we)
		storage_3[main_litedramcore_bankmachine3_wrport_adr] <= main_litedramcore_bankmachine3_wrport_dat_w;
	storage_3_dat0 <= storage_3[main_litedramcore_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine3_wrport_dat_r = storage_3_dat0;
assign main_litedramcore_bankmachine3_rdport_dat_r = storage_3[main_litedramcore_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_4[0:15];
reg [24:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine4_wrport_we)
		storage_4[main_litedramcore_bankmachine4_wrport_adr] <= main_litedramcore_bankmachine4_wrport_dat_w;
	storage_4_dat0 <= storage_4[main_litedramcore_bankmachine4_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine4_wrport_dat_r = storage_4_dat0;
assign main_litedramcore_bankmachine4_rdport_dat_r = storage_4[main_litedramcore_bankmachine4_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_5[0:15];
reg [24:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine5_wrport_we)
		storage_5[main_litedramcore_bankmachine5_wrport_adr] <= main_litedramcore_bankmachine5_wrport_dat_w;
	storage_5_dat0 <= storage_5[main_litedramcore_bankmachine5_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine5_wrport_dat_r = storage_5_dat0;
assign main_litedramcore_bankmachine5_rdport_dat_r = storage_5[main_litedramcore_bankmachine5_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_6[0:15];
reg [24:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine6_wrport_we)
		storage_6[main_litedramcore_bankmachine6_wrport_adr] <= main_litedramcore_bankmachine6_wrport_dat_w;
	storage_6_dat0 <= storage_6[main_litedramcore_bankmachine6_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine6_wrport_dat_r = storage_6_dat0;
assign main_litedramcore_bankmachine6_rdport_dat_r = storage_6[main_litedramcore_bankmachine6_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 16-words x 25-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 25 
// Port 1 | Read: Async | Write: ---- | 
reg [24:0] storage_7[0:15];
reg [24:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (main_litedramcore_bankmachine7_wrport_we)
		storage_7[main_litedramcore_bankmachine7_wrport_adr] <= main_litedramcore_bankmachine7_wrport_dat_w;
	storage_7_dat0 <= storage_7[main_litedramcore_bankmachine7_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign main_litedramcore_bankmachine7_wrport_dat_r = storage_7_dat0;
assign main_litedramcore_bankmachine7_rdport_dat_r = storage_7[main_litedramcore_bankmachine7_rdport_adr];


//------------------------------------------------------------------------------
// Instance FDCE of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (main_reset),

	// Outputs.
	.Q   (builder_reset0)
);

//------------------------------------------------------------------------------
// Instance FDCE_1 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_1(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset0),

	// Outputs.
	.Q   (builder_reset1)
);

//------------------------------------------------------------------------------
// Instance FDCE_2 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_2(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset1),

	// Outputs.
	.Q   (builder_reset2)
);

//------------------------------------------------------------------------------
// Instance FDCE_3 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_3(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset2),

	// Outputs.
	.Q   (builder_reset3)
);

//------------------------------------------------------------------------------
// Instance FDCE_4 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_4(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset3),

	// Outputs.
	.Q   (builder_reset4)
);

//------------------------------------------------------------------------------
// Instance FDCE_5 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_5(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset4),

	// Outputs.
	.Q   (builder_reset5)
);

//------------------------------------------------------------------------------
// Instance FDCE_6 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_6(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset5),

	// Outputs.
	.Q   (builder_reset6)
);

//------------------------------------------------------------------------------
// Instance FDCE_7 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_7(
	// Inputs.
	.C   (main_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (builder_reset6),

	// Outputs.
	.Q   (builder_reset7)
);

//------------------------------------------------------------------------------
// Instance PLLE2_ADV of PLLE2_ADV Module.
//------------------------------------------------------------------------------
PLLE2_ADV #(
	// Parameters.
	.CLKFBOUT_MULT  (4'd8),
	.CLKIN1_PERIOD  (5.0),
	.CLKOUT0_DIVIDE (4'd8),
	.CLKOUT0_PHASE  (1'd0),
	.CLKOUT1_DIVIDE (5'd16),
	.CLKOUT1_PHASE  (1'd0),
	.CLKOUT2_DIVIDE (3'd4),
	.CLKOUT2_PHASE  (1'd0),
	.CLKOUT3_DIVIDE (3'd4),
	.CLKOUT3_PHASE  (7'd90),
	.DIVCLK_DIVIDE  (1'd1),
	.REF_JITTER1    (0.01),
	.STARTUP_WAIT   ("FALSE")
) PLLE2_ADV (
	// Inputs.
	.CLKFBIN  (builder_pll_fb),
	.CLKIN1   (main_clkin),
	.PWRDWN   (main_power_down),
	.RST      (builder_reset7),

	// Outputs.
	.CLKFBOUT (builder_pll_fb),
	.CLKOUT0  (main_clkout0),
	.CLKOUT1  (main_clkout1),
	.CLKOUT2  (main_clkout2),
	.CLKOUT3  (main_clkout3),
	.LOCKED   (main_locked)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE (
	// Inputs.
	.C   (iodelay_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (builder_xilinxasyncresetsynchronizerimpl0),

	// Outputs.
	.Q   (builder_xilinxasyncresetsynchronizerimpl0_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_1 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_1 (
	// Inputs.
	.C   (iodelay_clk),
	.CE  (1'd1),
	.D   (builder_xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE (builder_xilinxasyncresetsynchronizerimpl0),

	// Outputs.
	.Q   (iodelay_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_2 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_2 (
	// Inputs.
	.C   (sys_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (builder_xilinxasyncresetsynchronizerimpl1),

	// Outputs.
	.Q   (builder_xilinxasyncresetsynchronizerimpl1_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_3 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_3 (
	// Inputs.
	.C   (sys_clk),
	.CE  (1'd1),
	.D   (builder_xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE (builder_xilinxasyncresetsynchronizerimpl1),

	// Outputs.
	.Q   (sys_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_4 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_4 (
	// Inputs.
	.C   (sys4x_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (builder_xilinxasyncresetsynchronizerimpl2),

	// Outputs.
	.Q   (builder_xilinxasyncresetsynchronizerimpl2_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_5 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_5 (
	// Inputs.
	.C   (sys4x_clk),
	.CE  (1'd1),
	.D   (builder_xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE (builder_xilinxasyncresetsynchronizerimpl2),

	// Outputs.
	.Q   (builder_xilinxasyncresetsynchronizerimpl2_expr)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_6 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_6 (
	// Inputs.
	.C   (sys4x_dqs_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (builder_xilinxasyncresetsynchronizerimpl3),

	// Outputs.
	.Q   (builder_xilinxasyncresetsynchronizerimpl3_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_7 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_7 (
	// Inputs.
	.C   (sys4x_dqs_clk),
	.CE  (1'd1),
	.D   (builder_xilinxasyncresetsynchronizerimpl3_rst_meta),
	.PRE (builder_xilinxasyncresetsynchronizerimpl3),

	// Outputs.
	.Q   (builder_xilinxasyncresetsynchronizerimpl3_expr)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2025-02-15 19:54:43.
//------------------------------------------------------------------------------
